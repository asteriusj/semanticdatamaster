// *
// * Class deinitions and contsants for functionalitity that can be xposed via lambda handlers
// * module.exports used to make interfaces available to handlers but not ourside such as API Gateway
// * Inspired by: https://medium.com/the-reading-room/how-to-create-a-simple-rest-web-service-with-node-aws-lambda-and-the-serverless-framework-4730c88cd39a
// *

// const fetch = require('node-fetch');

const CSV2JSON = require('./CSV2JSON')
const JSON2CSV = require('./JSON2CSV')
const JSON2JSONLD = require('./JSON2JSONLD')

class TranslateServices {

    constructor() {

    }

    // **
    // 
    // **
    CSV2JSON(event) {
        return new Promise((resolve, reject) => {

            try {

                const csv2json = new CSV2JSON()

                // console.log('CSV2JSON event.body:', event.body)
                // let _csv = ""
                // if (event.pathParameters) {
                //     if (event.pathParameters.string) {
                //         let _csv = event.pathParameters.string
                //     }
                // }

                let _csv = event.body || null

                if (_csv == null) {
                    _csv = "a,b,c\n1,2,3\n4,5,6"
                    // _csv = 'Variable,Restrictions,contentmap,categorytab,section,role(s),id,name,label,control,type,options,datalist,placeholder/caption,value/default,repeatable,parent,size,maxlength,min,max,spellcheck,required,reqmsg,helpmsg,validation,pattern(regexp),title/invalidmsg,transforms,triggers,assumptions,autofocus,autocomplete,disabled,readonly,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n{{ContactInfoSectionHeadline}},,profileinfo.conatactindosection.headline,ProfileInfo,ContactInfoSection,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n{{ContactInfoSectionSubhead}},,profileinfo.conatactindosection.headline,ProfileInfo,ContactInfoSection,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n{{PersonUID}},autogenerated,person.uid,ProfileInfo,ContactInfoSection,,,PersonUID,,,,,,,,,,,,,,,,,,,,,,,,,,,\n{{PersonFirstName}},required;min1;max13,person.givenname,ProfileInfo,ContactInfoSection,"Player, Parent, Staff",txtGivenName,givenName,FirstName,input,text,,,,,,,13,,,,,TRUE,FirstNameisrequired,,,,PlayerFirstNameisrequired,,trigGivenNameOnChange,,TRUE,FALSE,,\n{{PersonMiddleName}},max13,person.middlename,ProfileInfo,ContactInfoSection,,txtMiddleName,middleName,,,,,,,,,,13,,,,,,,,,,,,trigMiddleNameOnChange,,,,,\n{{PersonLastName}},required;min1;max13,person.familyname,ProfileInfo,ContactInfoSection,"Player, Parent, Staff",txtLastName,familyName,LastName,input,text,,,,,,,13,,,,,TRUE,LastNameisrequired,,,,PlayerLastNameisrequired,,TrigFamilyNameOnChange,,,FALSE,,'
                    // _csv = 'Variable,Restrictions,content map,category tab,section,role(s),id,name,label,control,type,options,datalist,placeholder / caption,value / default,repeatable,parent,size,maxlength,min,max,spellcheck,required,reqmsg,helpmsg,validation,pattern (regexp),title / invalid msg,transforms,triggers,assumptions,autofocus,autocomplete,disabled,readonly ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,' + '\n{{ContactInfoSectionHeadline}},,profileinfo.conatactindosection.headline,ProfileInfo,ContactInfoSection,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,'
                }
                // console.log('CSV2JSON _csv:', _csv)

                // csv2json.transform(_csv)
                csv2json.transform(_csv)
                    .then(json => {
                        console.log('csv2json.transform json: ', json)
                        resolve(json)
                    })
                    .catch(error => {
                        console.log('CSV2JSON error: ', error)
                        reject(error)
                        // resolve(error)
                    });

            }
            catch (err) {
                console.error('csv2json.transform err: ', err)
                reject(err)
            } // end try
        }) // end return

    }; // end CSV2JSON

    // **
    // 
    // **
    JSON2CSV(event) {
        return new Promise((resolve, reject) => {
            // resolve("event", event)

            const json2csv = new JSON2CSV()

            // console.log('JSON2CSV event.body:', event.body)
            // let _json = {}
            // if (event.pathParameters) {
            //     if (event.pathParameters.string) {
            //         let _json = event.pathParameters.string
            //     }
            // }
            let _json = event.body || null;
            // _json = [{ "A1": "Do", "B1": "Re", "C1": "Me" }]
            if (_json != null) {
                _json = _json["@graph"] || _json
            }
            else if (_json == null) {
                _json = [{ a: "a", b: "b", c: "c" }, { a: "1", b: "2", c: "3" }, { a: "4", b: "5", c: "6" }]
                // _json = [{ Variable: '{{ContactInfoSectionHeadline}}', Restrictions: '', contentmap: 'profileinfo.conatactindosection.headline', categorytab: 'ProfileInfo', section: 'ContactInfoSection', 'role(s)': '', id: '', name: '', label: '', control: '', type: '', options: '', datalist: '', 'placeholder/caption': '', 'value/default': '', repeatable: '', parent: '', size: '', maxlength: '', min: '', max: '', spellcheck: '', required: '', reqmsg: '', helpmsg: '', validation: '', 'pattern(regexp)': '', 'title/invalidmsg': '', transforms: '', triggers: '', assumptions: '', autofocus: '', autocomplete: '', disabled: '', readonly: '' }, { Variable: '{{ContactInfoSectionSubhead}}', Restrictions: '', contentmap: 'profileinfo.conatactindosection.headline', categorytab: 'ProfileInfo', section: 'ContactInfoSection', 'role(s)': '', id: '', name: '', label: '', control: '', type: '', options: '', datalist: '', 'placeholder/caption': '', 'value/default': '', repeatable: '', parent: '', size: '', maxlength: '', min: '', max: '', spellcheck: '', required: '', reqmsg: '', helpmsg: '', validation: '', 'pattern(regexp)': '', 'title/invalidmsg': '', transforms: '', triggers: '', assumptions: '', autofocus: '', autocomplete: '', disabled: '', readonly: '' }, { Variable: '{{PersonUID}}', Restrictions: 'autogenerated', contentmap: 'person.uid', categorytab: 'ProfileInfo', section: 'ContactInfoSection', 'role(s)': '', id: '', name: 'PersonUID', label: '', control: '', type: '', options: '', datalist: '', 'placeholder/caption': '', 'value/default': '', repeatable: '', parent: '', size: '', maxlength: '', min: '', max: '', spellcheck: '', required: '', reqmsg: '', helpmsg: '', validation: '', 'pattern(regexp)': '', 'title/invalidmsg': '', transforms: '', triggers: '', assumptions: '', autofocus: '', autocomplete: '', disabled: '', readonly: '' }, { Variable: '{{PersonFirstName}}', Restrictions: 'required;min1;max13', contentmap: 'person.givenname', categorytab: 'ProfileInfo', section: 'ContactInfoSection', 'role(s)': 'Player, Parent, Staff', id: 'txtGivenName', name: 'givenName', label: 'FirstName', control: 'input', type: 'text', options: '', datalist: '', 'placeholder/caption': '', 'value/default': '', repeatable: '', parent: '', size: '13', maxlength: '', min: '', max: '', spellcheck: '', required: 'TRUE', reqmsg: 'FirstNameisrequired', helpmsg: '', validation: '', 'pattern(regexp)': '', 'title/invalidmsg': 'PlayerFirstNameisrequired', transforms: '', triggers: 'trigGivenNameOnChange', assumptions: '', autofocus: 'TRUE', autocomplete: 'FALSE', disabled: '', readonly: '' }, { Variable: '{{PersonMiddleName}}', Restrictions: 'max13', contentmap: 'person.middlename', categorytab: 'ProfileInfo', section: 'ContactInfoSection', 'role(s)': '', id: 'txtMiddleName', name: 'middleName', label: '', control: '', type: '', options: '', datalist: '', 'placeholder/caption': '', 'value/default': '', repeatable: '', parent: '', size: '13', maxlength: '', min: '', max: '', spellcheck: '', required: '', reqmsg: '', helpmsg: '', validation: '', 'pattern(regexp)': '', 'title/invalidmsg': '', transforms: '', triggers: 'trigMiddleNameOnChange', assumptions: '', autofocus: '', autocomplete: '', disabled: '', readonly: '' }, { Variable: '{{PersonLastName}}', Restrictions: 'required;min1;max13', contentmap: 'person.familyname', categorytab: 'ProfileInfo', section: 'ContactInfoSection', 'role(s)': 'Player, Parent, Staff', id: 'txtLastName', name: 'familyName', label: 'LastName', control: 'input', type: 'text', options: '', datalist: '', 'placeholder/caption': '', 'value/default': '', repeatable: '', parent: '', size: '13', maxlength: '', min: '', max: '', spellcheck: '', required: 'TRUE', reqmsg: 'LastNameisrequired', helpmsg: '', validation: '', 'pattern(regexp)': '', 'title/invalidmsg': 'PlayerLastNameisrequired', transforms: '', triggers: 'TrigFamilyNameOnChange', assumptions: '', autofocus: '', autocomplete: 'FALSE', disabled: '', readonly: '' }]
            }
            console.log('JSON2CSV _json', _json)

            json2csv.transform(_json)
                .then(csv => {
                    console.log('json2csv.transform csv:', csv)
                    resolve(csv)
                })
                .catch(error => {
                    console.log('json2csv.transform error: ', error)
                    // reject(error)
                    resolve(error)
                });

        }) // end return

    }; // end JSON2CSV



    // **
    // 
    // **
    JSON2JSONLD(event) {
        console.log('starting JSON2JSONLD(event.body):', event.body)
        return new Promise((resolve, reject) => {

            try {

                // const json2jsonld = new JSON2JSONLD()

                let _JSON = event.body || null


                // test data
                if (_JSON == null) _JSON = [{ "@id": "foafiaf:Scorecard_Top Level", "@type": "skos:ConceptScheme", "rdf:type": "sioc:topic", "dbo:type": "foafiaf:Scorecards", "foaf:topic": "Scorecards: Indicator Scorecards", "rdfs:label": "Top Level", "dc:title": "Top Level Indicators", "dc:description": "", "skos:definition": "What does this top level indicator tell us about our transformation; what likey outcome or output does achieving this vision?", "rdfs:comment": "", "dbo:abstract": "", "foafiaf:keywords": "Top Level", "foafiaf:categories": "Scorecard", "skos:related": "", "skos:inScheme": "foafiaf:Scorecard_0", "foafiaf:Parent": "", "skos:broader": "", "skos:narrower": "", "foafiaf:polarity": "", "foafiaf:timeperiodtype": "", "foafiaf:unitofmeasure": "", "foafiaf:targetvalue": "", "foafiaf:datavalues": "", "foafiaf:datatrend": "", "foafiaf:status": "Cyan", "foafiaf:color": "#00FFFF", "foafiaf:rank": "", "foafiaf:ranktrend": "", "foafiaf:monitors": "", "foafiaf:supports": "", "foafiaf:Theme": "", "foafiaf:Project": "", "foafiaf:Strategy": "", "foafiaf:Spoke": "", "foafiaf:Segment": "", "foafiaf:userdefinedfields": "", "foafiaf:owner": "", "foafiaf:ownedby": "", "foafiaf:documents": "", "foafiaf:image": "", "tmo:PredecessorDependency": "Top Level Indicators", "tmo:SuccessorDependency": "", "foafiaf:startdate": "", "foafiaf:enddate": "", "foafiaf:shortname": "" }, { "@id": "foafiaf:Scorecard_Recreate", "@type": "skos:Concept", "rdf:type": "sioc:topic", "dbo:type": "foafiaf:Scorecard", "foaf:topic": "Scorecard: Recreate", "rdfs:label": "Recreate", "dc:title": "Recreating Sense of Place", "dc:description": "Informs us of way we live and interact; A key to growing and sustaining our community", "skos:definition": "", "rdfs:comment": "", "dbo:abstract": "", "foafiaf:keywords": "", "foafiaf:categories": "Scorecard", "skos:related": "", "skos:inScheme": "foafiaf:Scorecard_Top Level", "foafiaf:Parent": "foafiaf:Scorecard_Top_25", "skos:broader": "", "skos:narrower": "", "foafiaf:polarity": "Increasing is good", "foafiaf:timeperiodtype": "Quarter", "foafiaf:unitofmeasure": "ROYG", "foafiaf:targetvalue": "1", "foafiaf:datavalues": "", "foafiaf:datatrend": "", "foafiaf:status": "Yellow", "foafiaf:color": "#FFFF00", "foafiaf:rank": "", "foafiaf:ranktrend": "", "foafiaf:monitors": "", "foafiaf:supports": "", "foafiaf:Theme": "", "foafiaf:Project": "", "foafiaf:Strategy": "", "foafiaf:Spoke": "", "foafiaf:Segment": "", "foafiaf:userdefinedfields": "", "foafiaf:owner": "", "foafiaf:ownedby": "", "foafiaf:documents": "", "foafiaf:image": "", "tmo:PredecessorDependency": "", "tmo:SuccessorDependency": "", "foafiaf:startdate": "", "foafiaf:enddate": "", "foafiaf:shortname": "" }, { "@id": "foafiaf:Scorecard_Reframe", "@type": "skos:Concept", "rdf:type": "sioc:topic", "dbo:type": "foafiaf:Scorecard", "foaf:topic": "Scorecard: Reframe", "rdfs:label": "Reframe", "dc:title": "Reframing Our Opportunity", "dc:description": "Informs us of our climate and hopes; A key to common vision for a better future", "skos:definition": "", "rdfs:comment": "", "dbo:abstract": "", "foafiaf:keywords": "", "foafiaf:categories": "Scorecard", "skos:related": "", "skos:inScheme": "foafiaf:Scorecard_Top Level", "foafiaf:Parent": "foafiaf:Scorecard_Top_25", "skos:broader": "", "skos:narrower": "", "foafiaf:polarity": "Increasing is good", "foafiaf:timeperiodtype": "Quarter", "foafiaf:unitofmeasure": "ROYG", "foafiaf:targetvalue": "1", "foafiaf:datavalues": "", "foafiaf:datatrend": "", "foafiaf:status": "Cyan", "foafiaf:color": "#00FFFF", "foafiaf:rank": "", "foafiaf:ranktrend": "", "foafiaf:monitors": "", "foafiaf:supports": "", "foafiaf:Theme": "", "foafiaf:Project": "", "foafiaf:Strategy": "", "foafiaf:Spoke": "", "foafiaf:Segment": "", "foafiaf:userdefinedfields": "", "foafiaf:owner": "", "foafiaf:ownedby": "", "foafiaf:documents": "", "foafiaf:image": "", "tmo:PredecessorDependency": "", "tmo:SuccessorDependency": "", "foafiaf:startdate": "", "foafiaf:enddate": "", "foafiaf:shortname": "" }, { "@id": "foafiaf:Scorecard_Renew", "@type": "skos:Concept", "rdf:type": "sioc:topic", "dbo:type": "foafiaf:Scorecard", "foaf:topic": "Scorecard: Renew", "rdfs:label": "Renew", "dc:title": "Renewing Our People & Resiliency", "dc:description": "Informs us about our people; A key to growth and resilience of our community", "skos:definition": "", "rdfs:comment": "", "dbo:abstract": "", "foafiaf:keywords": "", "foafiaf:categories": "Scorecard", "skos:related": "", "skos:inScheme": "foafiaf:Scorecard_Top Level", "foafiaf:Parent": "foafiaf:Scorecard_Top_25", "skos:broader": "", "skos:narrower": "", "foafiaf:polarity": "Increasing is good", "foafiaf:timeperiodtype": "Quarter", "foafiaf:unitofmeasure": "ROYG", "foafiaf:targetvalue": "1", "foafiaf:datavalues": "", "foafiaf:datatrend": "", "foafiaf:status": "Orange", "foafiaf:color": "#FFA500", "foafiaf:rank": "", "foafiaf:ranktrend": "", "foafiaf:monitors": "", "foafiaf:supports": "", "foafiaf:Theme": "", "foafiaf:Project": "", "foafiaf:Strategy": "", "foafiaf:Spoke": "", "foafiaf:Segment": "", "foafiaf:userdefinedfields": "", "foafiaf:owner": "", "foafiaf:ownedby": "", "foafiaf:documents": "", "foafiaf:image": "", "tmo:PredecessorDependency": "", "tmo:SuccessorDependency": "", "foafiaf:startdate": "", "foafiaf:enddate": "", "foafiaf:shortname": "" }, { "@id": "foafiaf:Scorecard_Resource", "@type": "skos:Concept", "rdf:type": "sioc:topic", "dbo:type": "foafiaf:Scorecard", "foaf:topic": "Scorecard: Resource", "rdfs:label": "Resource", "dc:title": "Resourcing and Funding our Future", "dc:description": "Informs us of way we fund and support our community; A key to enabling our transformation", "skos:definition": "", "rdfs:comment": "", "dbo:abstract": "", "foafiaf:keywords": "", "foafiaf:categories": "Scorecard", "skos:related": "", "skos:inScheme": "foafiaf:Scorecard_Top Level", "foafiaf:Parent": "foafiaf:Scorecard_Top_25", "skos:broader": "", "skos:narrower": "", "foafiaf:polarity": "Increasing is good", "foafiaf:timeperiodtype": "Quarter", "foafiaf:unitofmeasure": "ROYG", "foafiaf:targetvalue": "1", "foafiaf:datavalues": "", "foafiaf:datatrend": "", "foafiaf:status": "Orange", "foafiaf:color": "#FFA500", "foafiaf:rank": "", "foafiaf:ranktrend": "", "foafiaf:monitors": "", "foafiaf:supports": "", "foafiaf:Theme": "", "foafiaf:Project": "", "foafiaf:Strategy": "", "foafiaf:Spoke": "", "foafiaf:Segment": "", "foafiaf:userdefinedfields": "", "foafiaf:owner": "", "foafiaf:ownedby": "", "foafiaf:documents": "", "foafiaf:image": "", "tmo:PredecessorDependency": "", "tmo:SuccessorDependency": "", "foafiaf:startdate": "", "foafiaf:enddate": "", "foafiaf:shortname": "" }, { "@id": "foafiaf:Scorecard_Revitalize", "@type": "skos:Concept", "rdf:type": "sioc:topic", "dbo:type": "foafiaf:Scorecard", "foaf:topic": "Scorecard: Revitalize", "rdfs:label": "Revitalize", "dc:title": "Revitalizing Our Economy & Infrastructure", "dc:description": "Informs us of our economy and our infrastructure; A key support for successful and fulfilling lives", "skos:definition": "", "rdfs:comment": "", "dbo:abstract": "", "foafiaf:keywords": "", "foafiaf:categories": "Scorecard", "skos:related": "", "skos:inScheme": "foafiaf:Scorecard_Top Level", "foafiaf:Parent": "foafiaf:Scorecard_Top_25", "skos:broader": "", "skos:narrower": "", "foafiaf:polarity": "Increasing is good", "foafiaf:timeperiodtype": "Quarter", "foafiaf:unitofmeasure": "ROYG", "foafiaf:targetvalue": "1", "foafiaf:datavalues": "", "foafiaf:datatrend": "", "foafiaf:status": "Orange", "foafiaf:color": "#FFA500", "foafiaf:rank": "", "foafiaf:ranktrend": "", "foafiaf:monitors": "", "foafiaf:supports": "", "foafiaf:Theme": "", "foafiaf:Project": "", "foafiaf:Strategy": "", "foafiaf:Spoke": "", "foafiaf:Segment": "", "foafiaf:userdefinedfields": "", "foafiaf:owner": "", "foafiaf:ownedby": "", "foafiaf:documents": "", "foafiaf:image": "", "tmo:PredecessorDependency": "", "tmo:SuccessorDependency": "", "foafiaf:startdate": "", "foafiaf:enddate": "", "foafiaf:shortname": "" }]


                if (typeof _JSON === 'string' || _JSON instanceof String) {
                    _JSON = JSON.parse(_JSON) || _JSON;
                }
                if (_JSON && typeof _JSON === 'object' && _JSON.constructor === Object) {
                    _JSON = _JSON;
                }
                // console.log("_JSON: ", _JSON)
                let objArray = []
                if (Array.isArray(_JSON)) {
                    objArray = _JSON;
                }
                else {
                    objArray = [_JSON];
                }
                // console.log("objArray: ", objArray)
                // var objStr = '{ "@graph": ' + JSON.stringify(objArray) + ' }' // converts JSON / objArray to JSONLD structure
                // var objLD = JSON.parse(objStr)
                // console.log("objLD: ", objLD)

                let _json = objArray || null


                if (_json == null) {
                    // _json = [{ "@id": "foafiaf:Scorecard_Top_25", "@type": "skos:Concept", "rdf:type": "sioc:topic", "dbo:type": "foafiaf:Scorecard", "foaf:topic": "Community Transformation Scorecard", "rdfs:label": "Top 25", "dc:title": "A Top 25 Community", "dc:description": "Informs us that are mission is to be a top 25 community", "skos:definition": "", "rdfs:comment": "", "dbo:abstract": "", "foafiaf:keywords": "", "foafiaf:categories": "Scorecard", "skos:related": "", "skos:inScheme": "foafiaf:Scorecard_0", "foafiaf:Parent": "", "skos:broader": "", "skos:narrower": "", "foafiaf:polarity": "Increasing is good", "foafiaf:timeperiodtype": "Quarter", "foafiaf:unitofmeasure": "ROYG", "foafiaf:targetvalue": "1", "foafiaf:datavalues": "", "foafiaf:datatrend": "", "foafiaf:status": "Cyan", "foafiaf:color": "#00FFFF" }, { "@id": "foafiaf:Scorecard_Top Level", "@type": "skos:ConceptScheme", "rdf:type": "sioc:topic", "dbo:type": "foafiaf:Scorecards", "foaf:topic": "Scorecards: Indicator Scorecards", "rdfs:label": "Top Level", "dc:title": "Top Level Indicators", "dc:description": "", "skos:definition": "What does this top level indicator tell us about our transformation; what likey outcome or output does achieving this vision?", "rdfs:comment": "", "dbo:abstract": "", "foafiaf:keywords": "Top Level", "foafiaf:categories": "Scorecard", "skos:related": "", "skos:inScheme": "foafiaf:Scorecard_0", "foafiaf:Parent": "", "skos:broader": "", "skos:narrower": "", "foafiaf:polarity": "", "foafiaf:timeperiodtype": "", "foafiaf:unitofmeasure": "", "foafiaf:targetvalue": "", "foafiaf:datavalues": "", "foafiaf:datatrend": "", "foafiaf:status": "Cyan", "foafiaf:color": "#00FFFF" }]


                    // _json = [{ "@id": "foafiaf:Metric_$_Productivity_(output_per_worker)_", "@type": "skos:Concept", "rdf:type": "sioc:topic", "dbo:type": "foafiaf:Metric", "foaf:topic": "", "rdfs:label": "$ Productivity (output per worker)", "dc:title": "", "dc:description": "", "skos:definition": "", "rdfs:comment": "", "dbo:abstract": "", "foafiaf:keywords": "Indicator", "foafiaf:categories": "Outcome", "skos:related": "", "skos:inScheme": "foafiaf:Measure_0", "foafiaf:Parent": "", "skos:broader": "", "skos:narrower": "", "foafiaf:polarity": "", "foafiaf:timeperiodtype": "", "foafiaf:unitofmeasure": "ROYG", "foafiaf:targetvalue": "Green", "foafiaf:datavalues": "$94,500  in 2016", "foafiaf:datatrend": "Better", "foafiaf:status": "Yellow", "foafiaf:color": "#FFFF00", "foafiaf:rank": "48/101 in 2016", "foafiaf:ranktrend": "Steady (48/101 in 2011)", "foafiaf:monitors": "foafiaf:Scorecard_Economy", "foafiaf:supports": "Revitalize", "foafiaf:Theme": "Economy", "foafiaf:Project": "", "foafiaf:Strategy": "", "foafiaf:Spoke": "", "foafiaf:Segment": "", "foafiaf:userdefinedfields": "", "foafiaf:owner": "", "foafiaf:ownedby": "", "foafiaf:documents": "", "foafiaf:image": "", "tmo:PredecessorDependency": "", "tmo:SuccessorDependency": "", "foafiaf:startdate": "", "foafiaf:enddate": "", "foafiaf:shortname": "" }, { "@id": "foafiaf:Metric_%_Regional_Price_Parity_", "@type": "skos:Concept", "rdf:type": "sioc:topic", "dbo:type": "foafiaf:Metric", "foaf:topic": "", "rdfs:label": "% Regional Price Parity", "dc:title": "", "dc:description": "", "skos:definition": "", "rdfs:comment": "", "dbo:abstract": "", "foafiaf:keywords": "Indicator", "foafiaf:categories": "Outcome", "skos:related": "", "skos:inScheme": "foafiaf:Measure_0", "foafiaf:Parent": "", "skos:broader": "", "skos:narrower": "", "foafiaf:polarity": "", "foafiaf:timeperiodtype": "", "foafiaf:unitofmeasure": "ROYG", "foafiaf:targetvalue": "", "foafiaf:datavalues": "89.9%  in 2016", "foafiaf:datatrend": "Better", "foafiaf:status": "Orange", "foafiaf:color": "#FFA500", "foafiaf:rank": "59/101 in 2016", "foafiaf:ranktrend": "Better (71/101 in 2011)", "foafiaf:monitors": "foafiaf:Scorecard_Economy", "foafiaf:supports": "Revitalize", "foafiaf:Theme": "Economy", "foafiaf:Project": "", "foafiaf:Strategy": "", "foafiaf:Spoke": "", "foafiaf:Segment": "", "foafiaf:userdefinedfields": "", "foafiaf:owner": "", "foafiaf:ownedby": "", "foafiaf:documents": "", "foafiaf:image": "", "tmo:PredecessorDependency": "", "tmo:SuccessorDependency": "", "foafiaf:startdate": "", "foafiaf:enddate": "", "foafiaf:shortname": "" }, { "@id": "foafiaf:Metric_$(millions)_Metropolitan_GDP_adjusted_for_inflation_", "@type": "skos:Concept", "rdf:type": "sioc:topic", "dbo:type": "foafiaf:Metric", "foaf:topic": "", "rdfs:label": "$(millions) Metropolitan GDP adjusted for inflation", "dc:title": "", "dc:description": "$14.8 billion in 2016 5-Year Trend: Better Peer Rank: 20 (1st Quartile) 5-Year Trend in Rank: Same", "skos:definition": "", "rdfs:comment": "", "dbo:abstract": "", "foafiaf:keywords": "Indicator", "foafiaf:categories": "Outcome", "skos:related": "", "skos:inScheme": "foafiaf:Measure_0", "foafiaf:Parent": "", "skos:broader": "", "skos:narrower": "", "foafiaf:polarity": "", "foafiaf:timeperiodtype": "", "foafiaf:unitofmeasure": "ROYG", "foafiaf:targetvalue": "Green", "foafiaf:datavalues": "$14,817,000  in 2016", "foafiaf:datatrend": "Better", "foafiaf:status": "Yellow", "foafiaf:color": "#FFFF00", "foafiaf:rank": "20/101 in 2016", "foafiaf:ranktrend": "Steady (18/101 in 2011)", "foafiaf:monitors": "foafiaf:Scorecard_Economy", "foafiaf:supports": "Revitalize", "foafiaf:Theme": "Economy", "foafiaf:Project": "", "foafiaf:Strategy": "", "foafiaf:Spoke": "", "foafiaf:Segment": "", "foafiaf:userdefinedfields": "", "foafiaf:owner": "", "foafiaf:ownedby": "", "foafiaf:documents": "", "foafiaf:image": "", "tmo:PredecessorDependency": "", "tmo:SuccessorDependency": "", "foafiaf:startdate": "", "foafiaf:enddate": "", "foafiaf:shortname": "" }, { "@id": "foafiaf:Metric_%_Poverty_Rate_(%_people)_", "@type": "skos:Concept", "rdf:type": "sioc:topic", "dbo:type": "foafiaf:Metric", "foaf:topic": "", "rdfs:label": "% Poverty Rate (% people)", "dc:title": "", "dc:description": "Informs us of the Poverty rate is reported here as the poverty rate for families, using the 2011-2015 5-year American Community Survey estimates.", "skos:definition": "", "rdfs:comment": "", "dbo:abstract": "", "foafiaf:keywords": "Indicator", "foafiaf:categories": "Outcome", "skos:related": "", "skos:inScheme": "foafiaf:Measure_0", "foafiaf:Parent": "", "skos:broader": "", "skos:narrower": "", "foafiaf:polarity": "Decreasing is good", "foafiaf:timeperiodtype": "", "foafiaf:unitofmeasure": "ROYG", "foafiaf:targetvalue": "Green", "foafiaf:datavalues": "14.8%  in 2016", "foafiaf:datatrend": "Better", "foafiaf:status": "Yellow", "foafiaf:color": "#FFFF00", "foafiaf:rank": "33/101 in 2016", "foafiaf:ranktrend": "Better (66/101 in 2011)", "foafiaf:monitors": "foafiaf:Scorecard_Economy", "foafiaf:supports": "Revitalize", "foafiaf:Theme": "Economy", "foafiaf:Project": "", "foafiaf:Strategy": "", "foafiaf:Spoke": "", "foafiaf:Segment": "", "foafiaf:userdefinedfields": "", "foafiaf:owner": "", "foafiaf:ownedby": "", "foafiaf:documents": "", "foafiaf:image": "", "tmo:PredecessorDependency": "", "tmo:SuccessorDependency": "", "foafiaf:startdate": "", "foafiaf:enddate": "", "foafiaf:shortname": "" }, { "@id": "foafiaf:Metric_%_Foreign_born_population_share_", "@type": "skos:Concept", "rdf:type": "sioc:topic", "dbo:type": "foafiaf:Metric", "foaf:topic": "", "rdfs:label": "% Foreign born population share", "dc:title": "", "dc:description": "", "skos:definition": "", "rdfs:comment": "US Census Bureau - American Community Survey", "dbo:abstract": "", "foafiaf:keywords": "Indicator", "foafiaf:categories": "Outcome", "skos:related": "", "skos:inScheme": "foafiaf:Measure_0", "foafiaf:Parent": "", "skos:broader": "", "skos:narrower": "", "foafiaf:polarity": "", "foafiaf:timeperiodtype": "Year", "foafiaf:unitofmeasure": "Value 0 Decimal", "foafiaf:targetvalue": "100 %", "foafiaf:datavalues": "8.4% in 2016", "foafiaf:datatrend": "Better", "foafiaf:status": "Green", "foafiaf:color": "#008000", "foafiaf:rank": "21/101 in 2016", "foafiaf:ranktrend": "Better (30/101 in 2011)", "foafiaf:monitors": "foafiaf:Scorecard_Diversity", "foafiaf:supports": "Recreate", "foafiaf:Theme": "Diversity", "foafiaf:Project": "", "foafiaf:Strategy": "", "foafiaf:Spoke": "", "foafiaf:Segment": "", "foafiaf:userdefinedfields": "", "foafiaf:owner": "", "foafiaf:ownedby": "", "foafiaf:documents": "", "foafiaf:image": "", "tmo:PredecessorDependency": "", "tmo:SuccessorDependency": "", "foafiaf:startdate": "", "foafiaf:enddate": "", "foafiaf:shortname": "" }, { "@id": "foafiaf:Metric_%_Population_40_or_Younger_", "@type": "skos:Concept", "rdf:type": "sioc:topic", "dbo:type": "foafiaf:Metric", "foaf:topic": "", "rdfs:label": "% Population 40 or Younger", "dc:title": "Population 40 or Younger", "dc:description": "", "skos:definition": "", "rdfs:comment": "US Census Bureau - American Community Survey", "dbo:abstract": "", "foafiaf:keywords": "Indicator", "foafiaf:categories": "Outcome", "skos:related": "", "skos:inScheme": "foafiaf:Measure_0", "foafiaf:Parent": "", "skos:broader": "", "skos:narrower": "", "foafiaf:polarity": "", "foafiaf:timeperiodtype": "Year", "foafiaf:unitofmeasure": "Value 0 Decimal", "foafiaf:targetvalue": "100 %", "foafiaf:datavalues": "51% in 2016", "foafiaf:datatrend": "Worse", "foafiaf:status": "Orange", "foafiaf:color": "#FFA500", "foafiaf:rank": "52/101 in 2016", "foafiaf:ranktrend": "Worse (44/101 in 2011)", "foafiaf:monitors": "foafiaf:Scorecard_Diversity", "foafiaf:supports": "Recreate", "foafiaf:Theme": "Diversity", "foafiaf:Project": "", "foafiaf:Strategy": "", "foafiaf:Spoke": "", "foafiaf:Segment": "", "foafiaf:userdefinedfields": "", "foafiaf:owner": "", "foafiaf:ownedby": "", "foafiaf:documents": "", "foafiaf:image": "", "tmo:PredecessorDependency": "", "tmo:SuccessorDependency": "", "foafiaf:startdate": "", "foafiaf:enddate": "", "foafiaf:shortname": "" }, { "@id": "foafiaf:Metric_%_Population_African_American_", "@type": "skos:Concept", "rdf:type": "sioc:topic", "dbo:type": "foafiaf:Metric", "foaf:topic": "", "rdfs:label": "% Population African American", "dc:title": "African American Population", "dc:description": "", "skos:definition": "", "rdfs:comment": "US Census Bureau - American Community Survey", "dbo:abstract": "", "foafiaf:keywords": "Indicator", "foafiaf:categories": "Outcome", "skos:related": "", "skos:inScheme": "foafiaf:Measure_0", "foafiaf:Parent": "", "skos:broader": "", "skos:narrower": "", "foafiaf:polarity": "", "foafiaf:timeperiodtype": "Year", "foafiaf:unitofmeasure": "Value 0 Decimal", "foafiaf:targetvalue": "100 %", "foafiaf:datavalues": "12.4% in 2016", "foafiaf:datatrend": "Better", "foafiaf:status": "Yellow", "foafiaf:color": "#FFFF00", "foafiaf:rank": "39/101 in 2016", "foafiaf:ranktrend": "Steady (42/101 in 2011)", "foafiaf:monitors": "foafiaf:Scorecard_Diversity", "foafiaf:supports": "Recreate", "foafiaf:Theme": "Diversity", "foafiaf:Project": "", "foafiaf:Strategy": "", "foafiaf:Spoke": "", "foafiaf:Segment": "", "foafiaf:userdefinedfields": "", "foafiaf:owner": "", "foafiaf:ownedby": "", "foafiaf:documents": "", "foafiaf:image": "", "tmo:PredecessorDependency": "", "tmo:SuccessorDependency": "", "foafiaf:startdate": "", "foafiaf:enddate": "", "foafiaf:shortname": "" }, { "@id": "foafiaf:Metric_%_Population_Hispanic-Latino_", "@type": "skos:Concept", "rdf:type": "sioc:topic", "dbo:type": "foafiaf:Metric", "foaf:topic": "", "rdfs:label": "% Population Hispanic-Latino", "dc:title": "Hispanic-Latino Population", "dc:description": "", "skos:definition": "", "rdfs:comment": "US Census Bureau - American Community Survey", "dbo:abstract": "", "foafiaf:keywords": "Indicator", "foafiaf:categories": "Outcome", "skos:related": "", "skos:inScheme": "foafiaf:Measure_0", "foafiaf:Parent": "", "skos:broader": "", "skos:narrower": "", "foafiaf:polarity": "", "foafiaf:timeperiodtype": "Year", "foafiaf:unitofmeasure": "Value 0 Decimal", "foafiaf:targetvalue": "100 %", "foafiaf:datavalues": "13.3% in 2016", "foafiaf:datatrend": "Better", "foafiaf:status": "Green", "foafiaf:color": "#008000", "foafiaf:rank": "13/101 in 2016", "foafiaf:ranktrend": "Steady (14/101/ in 2011", "foafiaf:monitors": "foafiaf:Scorecard_Diversity", "foafiaf:supports": "Recreate", "foafiaf:Theme": "Diversity", "foafiaf:Project": "", "foafiaf:Strategy": "", "foafiaf:Spoke": "", "foafiaf:Segment": "", "foafiaf:userdefinedfields": "", "foafiaf:owner": "", "foafiaf:ownedby": "", "foafiaf:documents": "", "foafiaf:image": "", "tmo:PredecessorDependency": "", "tmo:SuccessorDependency": "", "foafiaf:startdate": "", "foafiaf:enddate": "", "foafiaf:shortname": "" }, { "@id": "foafiaf:Metric_%_Population_Asian_", "@type": "skos:Concept", "rdf:type": "sioc:topic", "dbo:type": "foafiaf:Metric", "foaf:topic": "", "rdfs:label": "% Population Asian", "dc:title": "Asian Population", "dc:description": "", "skos:definition": "", "rdfs:comment": "US Census Bureau - American Community Survey", "dbo:abstract": "", "foafiaf:keywords": "Indicator", "foafiaf:categories": "Outcome", "skos:related": "", "skos:inScheme": "foafiaf:Measure_0", "foafiaf:Parent": "", "skos:broader": "", "skos:narrower": "", "foafiaf:polarity": "", "foafiaf:timeperiodtype": "Year", "foafiaf:unitofmeasure": "Value 0 Decimal", "foafiaf:targetvalue": "100 %", "foafiaf:datavalues": "2.9% in 2016", "foafiaf:datatrend": "Better", "foafiaf:status": "Green", "foafiaf:color": "#008000", "foafiaf:rank": "23/101 in 2016", "foafiaf:ranktrend": "Steady (25/101/ in 2011", "foafiaf:monitors": "foafiaf:Scorecard_Diversity", "foafiaf:supports": "Recreate", "foafiaf:Theme": "Diversity", "foafiaf:Project": "", "foafiaf:Strategy": "", "foafiaf:Spoke": "", "foafiaf:Segment": "", "foafiaf:userdefinedfields": "", "foafiaf:owner": "", "foafiaf:ownedby": "", "foafiaf:documents": "", "foafiaf:image": "", "tmo:PredecessorDependency": "", "tmo:SuccessorDependency": "", "foafiaf:startdate": "", "foafiaf:enddate": "", "foafiaf:shortname": "" }]


                    _json = {
                        "http://schema.org/name": "Manu Sporny",
                        "http://schema.org/url": { "@id": "http://manu.sporny.org/" },
                        "http://schema.org/image": { "@id": "http://manu.sporny.org/images/manu.png" }
                    }
                }
                // let doc = _json
                // const _context = {
                //     "name": "http://schema.org/name",
                //     "homepage": { "@id": "http://schema.org/url", "@type": "@id" },
                //     "image": { "@id": "http://schema.org/image", "@type": "@id" }
                // };


                // var jsonld = require('jsonld');

                // jsonld.toRDF(doc, { format: 'application/nquads' }, function (err, nquads) {
                //     // nquads is a string of nquads
                //     if (err) console.error(err)
                //     if (nquads) console.log('nquads', nquads)
                // });


                const jsonld = require('jsonld');
                // console.log('jsonld', jsonld)

                const _context = require('./contexts.js');
                // console.log(_context)

                console.log('_json', _json)

                let _compacted = null;
                let _expanded = null;
                let _flattened = null;
                let _final = null;

                // // compact a document according to a particular context
                jsonld.compact(_json, _context, function (err, compacted) {
                    if (err) {
                        console.error('jsonld.compact err', err)
                    }

                    // console.log(JSON.stringify(compacted, null, 2));
                    _compacted = compacted

                    // console.log('_compacted:', _compacted)


                    // expand a document, removing its context
                    jsonld.expand(compacted, function (err, expanded) {
                        if (err) {
                            console.error('jsonld.expand', err)
                        }
                        // console.log(JSON.stringify(expanded, null, 2));
                        _expanded = expanded

                        // console.log('_expanded:', _expanded)


                        // flatten a document
                        jsonld.flatten(expanded, (err, flattened) => {
                            if (err) {
                                console.error('jsonld.flatten', err)
                            }
                            _flattened = flattened

                            // console.log('_flattened:', _flattened)


                            jsonld.compact(_flattened, _context, function (err, final) {
                                if (err) {
                                    console.error('compact err', err)
                                }
                                _final = final
                                // console.log('_final:', _final)

                                resolve(_final)

                            });
                        });
                    });
                });


                // json2jsonld.transform(_json)
                //     .then(jsonld => {
                //         console.log('json2jsonld.transform jsonld: ', jsonld)
                //         resolve(jsonld)
                //     })
                //     .catch(error => {
                //         console.log('json2jsonld error: ', error)
                //         reject(error)
                //         // resolve(error)
                //     });

            }
            catch (err) {
                console.error('csv2json.transform err: ', err)
                reject(err)
            } // end try
        }) // end return

    }; // end CSV2JSON




}; // end TranslateServices
module.exports = TranslateServices
