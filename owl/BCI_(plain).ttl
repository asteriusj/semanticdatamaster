@prefix :      <https://w3id.org/BCI-ontology#> .
@prefix schema: <http://schema.org/> .
@prefix cc:    <http://creativecommons.org/ns#> .
@prefix owl:   <http://www.w3.org/2002/07/owl#> .
@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .
@prefix bci:   <https://w3id.org/BCI-ontology#> .
@prefix voaf:  <http://purl.org/vocommons/voaf#> .
@prefix skos:  <http://www.w3.org/2004/02/skos/core#> .
@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .
@prefix oldssn: <http://purl.oclc.org/NET/ssnx/ssn#> .
@prefix ssn:   <http://www.w3.org/ns/ssn/> .
@prefix dbp:   <http://dbpedia.org/ontology/> .
@prefix dct:   <http://purl.org/dc/terms/> .
@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix terms: <http://open.vocab.org/terms/> .
@prefix DCMIType: <http://purl.org/dc/dcmitype/> .
@prefix wdrs:  <http://www.w3.org/2007/05/powder-s#> .
@prefix DUL:   <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#> .
@prefix vann:  <http://purl.org/vocab/vann/> .
@prefix foaf:  <http://xmlns.com/foaf/0.1/> .
@prefix ssn-system: <http://www.w3.org/ns/ssn/systems/> .
@prefix sosa:  <http://www.w3.org/ns/sosa/> .

ssn-system:SystemCapability
        a       owl:Class .

dct:modified  a  owl:AnnotationProperty .

cc:license  a   owl:AnnotationProperty .

bci:Activity  a              owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Action ;
                               owl:onProperty               bci:hasAction
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "0"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Descriptor ;
                               owl:onProperty               bci:hasDescriptor
                             ] ;
        terms:part           "Session,Subject"^^rdfs:Literal ;
        DCMIType:StillImage  "Activity.png"^^rdfs:Literal ;
        dct:modified         "2016-06-28T01:42:00"^^xsd:dateTime ;
        dct:title            "Activity"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Activity is the Subject's physical state while interacting with the Context during a specific Session. This concept descirbes an Activity performed by the Subject on a specific Session while interacting with a specific Context. BCI applications monitor the Subject's physical state during the Sessions. This concept identifies the type of Activity that the Subject is performing while recording the data in a Session. Hence, each Session associates a single Subject interactions with a single Context while performing a single Activity. An Activity can be break down as a set of Actions, performed by the Subject while interacting with the Context."@en ;
        skos:editorialNote   "(*) The concept of Activity is agnostic regarding the number of Subjects engaging in an individual Activity. The ontology clearly defines that the connection between Subjects and Activity(ies) is through Sessions: one Session associates one Subject performing one Activity while interacting with one Context. (*) BCI applications can use this concept as a way to annotate/mark (Marker) the Records (DataSegments)."@en , "Relationship between Activity and Aspect: (*) BCI applications are designed to analyze how an Activity influences an Aspect: it's part of the research scheme and purpose of a BCI application. (*) From the perspective of a BCI application, an Activity has a \"main\" Aspect to analyze. (*) A SPARQL triple pattern matching that connects Activity(ies) to Aspects would be: ?Session hasActivity ?Activity ?Session hasRecord ?Record ?Record bci:aspectOfInterest ?Aspect"@en ;
        skos:example         "Some subclasses of this concept could be: (*) Glaucoma Tracking: This Activity type is a common example for \"pre-screening\" of Subjects. (*) Learning: BCI applications can apply different Stimuli (StimulusEvent) to the Subjects. This Activity type is a common example for \"interactive\" observations. (*) Sleeping: BCI applications don't apply any kind of Stimuli to the Subjects (there are no StimulusEvent). This Activity type is a common example for \"running\" observations: continuous observations."@en ;
        skos:prefLabel       "activity"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe any relevant Activity classification that Subjects can engage on in Sessions."@en ;
        wdrs:describedby     bci:Activity.POWDER .

bci:hasOrdinalPosition
        a                    owl:FunctionalProperty , owl:DatatypeProperty ;
        rdfs:domain          bci:DataBlock ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           xsd:positiveInteger ;
        terms:part           "Results"^^rdfs:Literal ;
        DCMIType:StillImage  "DataBlock_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:conformsTo       "[Associated data type spec]."@en ;
        dct:modified         "2016-06-12T03:44:00"^^xsd:dateTime ;
        dct:title            "hasOrdinalPosition"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Indicates the ordinal position of the DataBlock."@en ;
        skos:prefLabel       "has (ordinal) position"@en ;
        wdrs:describedby     bci:hasOrdinalPosition.POWDER .

bci:hasEegNonChannelData
        a                    owl:ObjectProperty ;
        rdfs:domain          bci:EegDevice ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:EegNonChannel ;
        rdfs:subPropertyOf   bci:hasNonChannelData ;
        terms:part           "EEG"^^rdfs:Literal ;
        DCMIType:StillImage  "MeasurementCapability_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-08-10T06:48:00"^^xsd:dateTime ;
        dct:source           "[SSN]"^^rdfs:Literal ;
        dct:title            "hasEegNonChannelData"@en ;
        owl:deprecated       true , "--Concerning EEG, this ontology only defines its related classes. It does not extend or define any specific properties for EEG.-- $ 04:27 AM 2016-07-29 $"^^rdfs:Literal ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "[SSN] Relation from a EegDevice to its EegNonChannel describing the non-channeling measurement capabilities (a set of measurement properties) of the EEG BCI device."@en ;
        skos:editorialNote   "See general remark about: EEG-CONCEPTS"@en , "This ontology leaves open to BCI applications the way how they should describe properly basic non-channeling measurement capabilities for its relevant set of different classes of sensors (Device class hierarchy) used in BCI activities, following the description of the ssn-system:SystemCapability concept. Based on their system requirements, BCI applications may define a set of restrictions and specialized connections (subproperties) on the property hasNonChannelData (subproperty of ssn-system:hasSystemCapability) for each particular subclass of Device (subclass of sosa:Sensor), which describes sensors for specific types."@en ;
        skos:prefLabel       "has non-channeling EEG data (other EEG measurement capability)"@en ;
        wdrs:describedby     bci:hasEegNonChannelData.POWDER .

bci:Channel  a               owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      ssn-system:SystemCapability ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "0"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Descriptor ;
                               owl:onProperty               bci:hasDescriptor
                             ] ;
        rdfs:subClassOf      [ a                owl:Restriction ;
                               owl:cardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onProperty   bci:hasLabel
                             ] ;
        rdfs:subClassOf      [ a                   owl:Restriction ;
                               owl:onProperty      bci:forModality ;
                               owl:someValuesFrom  bci:Modality
                             ] ;
        rdfs:subClassOf      [ a                   owl:Restriction ;
                               owl:onProperty      bci:ofAspect ;
                               owl:someValuesFrom  bci:Aspect
                             ] ;
        rdfs:subClassOf      [ a                   owl:Restriction ;
                               owl:onProperty      bci:isChannelDataOf ;
                               owl:someValuesFrom  bci:DeviceChannelingSpec
                             ] ;
        terms:part           "SystemCapabilities"^^rdfs:Literal ;
        DCMIType:StillImage  "MeasurementCapability_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2017-08-30T19:51:00"^^xsd:dateTime ;
        dct:source           "[SSN], [XDF], [ESS]"^^rdfs:Literal ;
        dct:title            "Channel"@en ;
        owl:disjointWith     bci:NonChannel ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "A Channel is a relevant metadata set that defines a logical component schema of a DeviceChannelingSpec's data structure model. A Channel is defined as a specialized ssn-system:SystemCapability type that describes a compounded set of measurement properties (ssn-system:SystemProperty-ies), as explained in [SSN] System Capabilities Module and [oldSSN] MeasuringCapability Module. A Channel is associated to a DeviceChannelingSpec definition and, hence, to a RecordChannelingSpec. As part of a channeling spec, a Channel definition can be extended to incorporate contextual metadata semantics (i.e., properties to describe dimensional characteristics regarding what, when, how --including mathematical formulas for calculations--, where, why, etc.), depending on the DataFormat used for the data files. This information can be associated to a channel definition via a Descriptor set."@en ;
        skos:editorialNote   "See general remark about: UNITS-OF-MEASUREMENT"@en , "BCI systems naturally collects and transmits data from a sender (transmitter machine) to a receiver (receiving machine). In a general and abstract way, a channel is used to convey an information signal, for example a digital bit stream, from one or several senders (or transmitters) to one or several receivers. The concept of channel defined in this ontology aims to capture a relevant metadata set that describes the measurement properties for any type of channel."@en , "Channel Structure: The channel structure is composed of different related metadata and attributes. It varies widely depending on the following: (*) the related/associated Modality. (*) the functional \"role\" that plays in a Device's data model, and, (*) the way how it's used in a specific Record settings. Due that a channeling spec is directly associated with a Device and a Record, in theory, a channel defines a specific (or proper) logical data structure component for a Device and/or a Record. The most common metadata and attributes of a channel structure, regardless of its nature, are: (*) Label: defined as hasLabel. (*) Type: defined as the channel class type (class hierarchy). (*) Placement (or Location): refers to the attribute set that define its placement on a Subject. The placement's attribute structure varies widely depending on the channel's nature."@en , "Channels are the logical components of Records. Their structural relationship resembles a matrix, in the following way: [ [[[ [ [ [ [[rows] Channels are different data rows.] ] [ [-->] [ ][ ] [ ][ ] ] [ [-->] [ ][ ] [ ][ ] ] [ [-->] [ ][ ] [ ][ ] ] [ [-->] [ ][ ] [ ][ ] ] ] ] ][ [ [ [ [[columns] Data samples are different data columns. They correspond to specific time instances.] ] [ [ -V- ][ -V- ] [ -V- ][ -V- ] [ -V- ] ] [ [ ] [ ][ ] [ ][ ] ] [ [ ] [ ][ ] [ ][ ] ] [ [ ] [ ][ ] [ ][ ] ] ] ] ]]] ] Hence, Channels can point to specific parts of a Record."@en , "A simplistic notion regarding the relationship and difference between the concepts of Channel and DataFormat, is depicted in the following example: If the used DataFormat were \"CSV\", then the channeling schema (DeviceChannelingSpec) would define the data's logical structure: [Channeling Schema] = { Col1: ID, Col2: Date, Col3: Name, ... }, where each column represents a specific Channel definition. Note that each column has its own related metadata and attributes; also, it follows its proper structure, format or notation scheme, etc."@en ;
        skos:example         "(*) [XDF] Eye-Gaze Channel: channeling metadata for an Eye-Gaze Record. (*) CoordinateSystem = { World-Space, Object-Space, Camera-Space, or Image-Space }: coordinate system of the respective parameter. (*) RefersTo = { Left, Right, or Both }: which eye the channel is referring to. (*) Type: Type of data in this channel. It can be any of the following values: (*) { ScreenX, ScreenY }: screen coordinates of the gaze cursor (can also refer to a scene image); usually in pixels. (*) { DirectionX, DirectionY, DirectionZ }: 3D gaze vector in some coordinate system. (*) { PositionX, PositionY, PositionZ }: 3D position of the eye center in some coordinate system. (*) { IntersectionX, IntersectionY, IntersectionZ }: 2D or 3D position of the intersection point with a plane (in some coordinate system). (*) { HeadX, HeadY, HeadZ }: 3D location of the head center in some coordinate system. (*) { PupilX, PupilY, PupilZ }: 2D or 3D location of the pupil center in some coordinate system. (*) { ReflexX, ReflexY, ReflexZ }: 2D or 3D location of the illuminator's reflection point in some coordinate system. (*) { Radius or Diameter }: the overall pupil radius or diameter (usually in mm or pixels). (*) { RadiusX, RadiusY }: horizontal and vertical pupil radius. (*) { DiameterX, DiameterY }: horizontal and vertical pupil diameter. (*) { Confidence }: for confidence information (preferred unit: normalized). (*) { FrameNumber }: frame number that the parameters were calculated from. (*) { PlaneNumber or ObjectId }: number or identifier of the object that was intersected by the gaze vector. (*) Keyboard-Hit Channel: channeling metadata for a Keyboard-Hit Record. (*) [XDF] Hand-Gesture Channel: channeling metadata for a Hand-Gesture Record. (*) Type = { Confidence, OrientationH, OrientationP, OrientationR, PositionX, PositionY, PositionZ }: type of data. [following types from GazeMetaData \"LeapMotion_xml_output\" definitions.] (*) Mouse-Click Channel: channeling metadata for a Mouse-Click Record. (*) Type = { PositionX, PositionY }. (*) Button = { Left, Other, Right, Wheel }."@en ;
        skos:prefLabel       "channeling data (logical component)"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe specialized channel definitions related to specific Modality types."@en ;
        wdrs:describedby     bci:Channel.POWDER .

bci:observes  a                 owl:ObjectProperty ;
        rdfs:domain             bci:Device ;
        rdfs:isDefinedBy        bci: ;
        rdfs:range              bci:Modality ;
        rdfs:subPropertyOf      sosa:observes ;
        terms:part              "Sensors"^^rdfs:Literal ;
        DCMIType:StillImage     "Device_(SOSA-SSN).png"^^rdfs:Literal , "MeasurementCapability_(SOSA-SSN).png"^^rdfs:Literal , "Record_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified            "2017-09-14T04:02:00"^^xsd:dateTime ;
        dct:source              "[SSN], [Compton2009]"^^rdfs:Literal ;
        dct:title               "observes"@en ;
        owl:propertyChainAxiom  ( bci:madeRecord bci:observedModality ) ;
        owl:propertyChainAxiom  ( bci:hasDeviceChannelingSpec bci:hasChannelData bci:forModality ) ;
        skos:changeNote         "Status: *STABLE*"@en ;
        skos:definition         "[SSN] Relation between a Device (sosa:Sensor) and a Modality (sosa:ObservableProperty) that the sensor supports (can observe). The object property composition (owl:propertyChainAxiom) ensures that if a Record (sosa:Observation) is made of a particular Modality (sosa:ObservableProperty), then one can infer that the Device (sosa:Sensor) supports (observes) that Modality (quality). This supported functionality: (*) Device.madeRecord * Record.observedModality --> Device.observes := Modality. (*) Device.hasDeviceChannelingSpec * DeviceChannelingSpec.hasChannelData * Channel.forModality --> Device.observes := Modality."@en ;
        skos:editorialNote      "See general remark about: 1_MAPPINGS-TO-SOSA-SSN"@en , "See general remark about: EEG-CONCEPTS"@en ;
        skos:prefLabel          "observes"@en ;
        skos:scopeNote          "Connecting a Device individual with its correspondent supported Modality individual."@en ;
        wdrs:describedby        bci:observes.POWDER .

bci:EegModality  a           owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      bci:Modality ;
        terms:part           "EEG"^^rdfs:Literal ;
        DCMIType:StillImage  "Aspect-and-Modality_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-10-12T01:30:00"^^xsd:dateTime ;
        dct:title            "EegModality"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "A specific type of Modality for EEG (Electroencephalography). This modality can be further classified depending on different measurement procedures, applications and set of stimuli."@en ;
        skos:editorialNote   "See general remark about: EEG-CONCEPTS"@en ;
        skos:prefLabel       "EEG modality"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe any relevant EEG modalities. Following, we present a possible classification for this type: (*) ERP (Event Related Potential -voltage-): related to a stimuli. (*) VEP: Video. (*) Glaucoma (mfVEP - Vision Field Sensitivity). (*) TVEP: Transient. (*) AEP: Aural (*) \"Free Run\"."@en ;
        wdrs:describedby     bci:EegModality.POWDER .

bci:Record  a                owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      sosa:Observation ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onClass               bci:RecordChannelingSpec ;
                               owl:onProperty            bci:hasRecordChannelingSpec ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onClass               bci:Aspect ;
                               owl:onProperty            bci:aspectOfInterest ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onDataRange           xsd:positiveInteger ;
                               owl:onProperty            bci:hasSampleCount ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onDataRange           xsd:dateTime ;
                               owl:onProperty            bci:hasStartTime ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onDataRange           xsd:dateTime ;
                               owl:onProperty            bci:hasEndTime ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        rdfs:subClassOf      [ a                   owl:Restriction ;
                               owl:onProperty      bci:isInputFor ;
                               owl:someValuesFrom  bci:Command
                             ] ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onClass               bci:Subject ;
                               owl:onProperty            bci:isRecordOf ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        rdfs:subClassOf      [ a                   owl:Restriction ;
                               owl:onProperty      bci:hasFeatureParameter ;
                               owl:someValuesFrom  bci:FeatureParameter
                             ] ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onClass               bci:Session ;
                               owl:onProperty            bci:isRecordOf ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onDataRange           xsd:float ;
                               owl:onProperty            bci:hasSamplingRate ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "0"^^xsd:nonNegativeInteger ;
                               owl:onClass                  oldssn:MeasurementProperty ;
                               owl:onProperty               bci:hasMeasurementProperty
                             ] ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onClass               bci:Modality ;
                               owl:onProperty            bci:observedModality ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "0"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:StimulusEvent ;
                               owl:onProperty               ssn:wasOriginatedBy
                             ] ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onClass               bci:Device ;
                               owl:onProperty            bci:observedByDevice ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:RecordedData ;
                               owl:onProperty               bci:observationResult
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:RecordSpec ;
                               owl:onProperty               bci:hasRecordSpec
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:maxQualifiedCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Record ;
                               owl:onProperty               bci:hasPrevious
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:maxQualifiedCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Record ;
                               owl:onProperty               bci:hasNext
                             ] ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "Record_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:description      "=== ** scopeNote ** This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe any relevant type of BCI records generated by BCI devices for BCI activities, such as: (*) EEG (Electroencephalogram) record. (*) ECG (Electrocardiogram) record. (*) MoCap (Motion Capture) record. (*) Eye-Gaze record (for gaze or eye-tracking): A BCI Record that stores the coordinates of user's eye gaze captured by eye trackers. (*) Audio record. (*) Video record. (*) Hand-Gesture record: A BCI Record that stores the coordinates and velocities of user's hands and fingers captured by trackers such as LeapMotion. (*) Keyboard-Hit (keystroke) record: A BCI Record that stores the subject's hits on different keyboard keys. (*) Mouse-Click record: A BCI Record that stores the position coordinates of a subject's clicks with different mouse buttons. (*) Visual BCI record. This ontology does not define all the BCI records listed above. ==="@en ;
        dct:modified         "2018-01-03T00:56:00"^^xsd:dateTime ;
        dct:source           "[SSN], [ESS]"^^rdfs:Literal ;
        dct:title            "Record"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "A Record is a type of sosa:Observation with the following characteristics: (*) A single sosa:Observation for a specific unimodal BCI data capture task (with its own purpose). (*) [SSN] A Sensing Method (procedure) is used to estimate or calculate a value of a specific sosa:ObservableProperty (Modality) based on a specific sosa:FeatureOfInterest (Aspect). (*) A single Device is used to observe the unimodal BCI data (RecordedData). [oldSSN]: Record, along with its related concepts, defines an appropiate structure based on the following description: \"An observation (Record) is a situation that describes an observed feature (Aspect), an observed property (Modality), a sensor (Device) and method of sensing used and a value (RecordedData) observed for the property: that is, an observation (Record) describes a single value (RecordedData) attributed to a single property (Modality) by a particular sensor (Device)\". In the BCI domain, it's common that some related observations occur immediately after an observation has ended,by changing some of its initial channeling or Device settings (parameters or conditions).Hence, it is desirable to keep a temporal tracking of the previous and following related observations.This is achieved via the hasPrevious and hasNext object properties. The logical data structure template of a Record is defined in its associated RecordChannelingSpec information object. General and consolidating data analytics for the whole raw data recordings can be associated for a Record with a set of related FeatureParameters. Additional relevant metadata can be extended via the object property hasMeasurementProperty."@en ;
        skos:editorialNote   "See general remark about: PROCEDURES"@en , "See general remark about: 1_MAPPINGS-TO-SOSA-SSN"@en , "[oldSSN] Following the guidelines explained in (5.3.6 Observation) and (5.4.2 Smart product example -- 5.4.2.4 Observation), the main restrictions modeled for sosa:Observation (Record) are: (*) Exactly 1 sosa:FeatureOfInterest (Aspect): details what was sensed. (*) Exactly 1 sosa:ObservableProperty (Modality): details what was sensed. (*) Exactly 1 sosa:Sensor (Device): describes what made the Observation. (*) Some ssn:Stimulus (StimulusEvent): details (what made) the sosa:Sensor input. Other restrictions are: (*) Exactly 1 oldssn:Sensing (sub subclass of sosa:Procedure, it describes how the Observation was made): not adjusted for BCI activities."@en , "Following the structure presented in this example, the Record concept has been modeled to describe BCI observations, including the following object properties: [ [ [SOSA, oldSSN, DUL object property] [BCI object subproperty] [Between (from)...] [... and (to)] ] ] [ [sosa:hasFeatureOfInterest] [aspectOfInterest] [sosa:Observation (Record)] [sosa:FeatureOfInterest (Aspect)] ] [ [sosa:observedProperty] [observedModality] [sosa:Observation (Record)] [sosa:ObservableProperty (Modality)] ] [ [sosa:madeBySensor] [observedByDevice] [sosa:Observation (Record)] [sosa:Sensor (Device)] ] [ [DUL:includesEvent] [includesEvent] [sosa:Observation (Record)] [ssn:Stimulus (StimulusEvent)] ] [ [sosa:hasResult] [observationResult] [sosa:Observation (Record)] [oldssn:SensorOutput (RecordedData)] ] [ [Notion taken from --oldssn:isProducedBy--] [isProducedByDevice] [oldssn:SensorOutput (RecordedData)] [sosa:Sensor (Device)] ] [ [sosa:hasResult] [hasValue] [oldssn:SensorOutput (RecordedData)] [oldssn:ObservationValue (DataBlock)] ] ] ] Adequate restrictions have been designed accordingly for each object property."@en , "[oldSSN] states that \"an Observation is a description of the context, the Situation, in which the observation was made\". In this ontology, the Context is directly related through the Session, which is a Situation where the Observation (Record) was made."@en ;
        skos:historyNote     "In [ESS 1.0]: (*) Corresponds to the \"eegRecordings\" node: a specific collection of raw BCI data collected from a subject in a specific session. In [ESS 2.0]: (*) Corresponds to the \"dataRecordings\" node: information about EEG (or other data modality) recordings."@en ;
        skos:prefLabel       "BCI record (measurement record)"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe any relevant type of BCI records generated by BCI devices for BCI activities."@en ;
        wdrs:describedby     bci:Record.POWDER .

bci:isPlayoutInstantOf
        a                 owl:ObjectProperty , owl:FunctionalProperty ;
        rdfs:domain       bci:PlayoutInstant ;
        rdfs:isDefinedBy  bci: ;
        rdfs:range        [ a            owl:Class ;
                            owl:unionOf  ( bci:Action bci:Context.ObjectComponent.Event bci:Playout )
                          ] ;
        terms:part        "Context"^^rdfs:Literal ;
        dct:modified      "2016-06-23T02:41:00"^^xsd:dateTime ;
        dct:title         "isPlayoutInstantOf"@en ;
        skos:changeNote   "Status: *STABLE*"@en ;
        skos:definition   "Connects a PlayoutInstant log entry with its correspondent individual (Playout or Context.ObjectComponent.Event orAction) that issued its creation."@en ;
        skos:prefLabel    "is the playout instant of"@en ;
        skos:scopeNote    "Connecting a PlayoutInstant with its correspondent (Playout or Context.ObjectComponent.Event or Action) individual."@en ;
        wdrs:describedby  bci:isPlayoutInstantOf.POWDER .

DUL:NaturalPerson  a  owl:Class .

dct:abstract  a  owl:AnnotationProperty .

bci:hasDescriptor  a         owl:ObjectProperty ;
        rdfs:domain          [ a            owl:Class ;
                               owl:unionOf  ( bci:Activity bci:Channel bci:Collection bci:Context bci:DataFormat bci:DataSegment bci:Descriptor bci:Interaction bci:Modality bci:Model bci:Playout bci:Session bci:Subject )
                             ] ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:Descriptor ;
        terms:part           "AnnotationTag,Context,Descriptor,Session,SystemCapabilities,Observations,Subject"^^rdfs:Literal ;
        DCMIType:StillImage  "Descriptor_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-06-30T01:43:00"^^xsd:dateTime ;
        dct:title            "hasDescriptor"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects an entity with a set of Descriptors."@en ;
        skos:prefLabel       "has external resource (descriptor)"@en ;
        skos:scopeNote       "Connecting an entity with a set of Descriptors."@en ;
        wdrs:describedby     bci:hasDescriptor.POWDER .

bci:DeviceChannelingSpec
        a                    owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      bci:ChannelingSpec ;
        rdfs:subClassOf      [ a                   owl:Restriction ;
                               owl:onProperty      bci:hasChannelData ;
                               owl:someValuesFrom  bci:Channel
                             ] ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onDataRange           xsd:positiveInteger ;
                               owl:onProperty            bci:hasNumberOfChannels ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onClass               bci:ChannelingSpec ;
                               owl:onProperty            bci:extendsChannelingSpec ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        terms:part           "Descriptor,Sensors"^^rdfs:Literal ;
        DCMIType:StillImage  "Aspect-and-Modality_(SOSA-SSN).png"^^rdfs:Literal , "Device_(SOSA-SSN).png"^^rdfs:Literal , "Descriptor_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-08-08T23:13:00"^^xsd:dateTime ;
        dct:title            "DeviceChannelingSpec"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Each Device supports a specific channeling schema information: all the supported logical components (Channels) and their extended metadata that describe a \"more concrete\" subset of its Modality's data structure model and template, based on the Device's own physical spec of its operational features and functionalities. A DeviceChannelingSpec captures two information sets for a specific Device: (*) Its complete channeling schema description, in a form of an external document specification (outside the metadata repository): a specialized Descriptor. (*) Relevant metadata attributes regarding the specific characteristics of the Device's channeling schema: a set of related Channels. The structure described in a DeviceChannelingSpec (first information set mentioned above) is a functional subset of the ChannelingSpec defined for the Modality that the Device supports, following the [SSN] data model. Hence, for practical reasons, a DeviceChannelingSpec is defined as a subclass of ChannelingSpec."@en ;
        skos:editorialNote   "Theoretically, a DeviceChannelingSpec could be defined as a specialized DeviceSpec concept. However, for practical reasons, this ontology aligns the definition of its first information set with ChannelingSpec."@en ;
        skos:prefLabel       "device channeling schema spec"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe any relevant type of a DeviceChannelingSpec to capture the external information that defines the channeling schema information of a Device."@en ;
        wdrs:describedby     bci:DeviceChannelingSpec.POWDER .

bci:hasModelIRI  a           owl:DatatypeProperty , owl:FunctionalProperty ;
        rdfs:domain          bci:Model ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           xsd:anyURI ;
        terms:part           "AnnotationTag"^^rdfs:Literal ;
        DCMIType:StillImage  "Marker_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:conformsTo       "[Associated data type spec]."@en ;
        dct:modified         "2016-05-23T02:03:00"^^xsd:dateTime ;
        dct:title            "hasModelIRI"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "It's the IRI of the resource that describes or represents the Model or classifier. A Model can be described in any language or format, such as PMML."@en ;
        skos:prefLabel       "has model IRI"@en ;
        wdrs:describedby     bci:hasModelIRI.POWDER .

bci:hasEndChannel  a         owl:DatatypeProperty , owl:FunctionalProperty ;
        rdfs:domain          bci:RecordChannelingSpec ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           xsd:nonNegativeInteger ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "Record_(SOSA-SSN).png"^^rdfs:Literal , "Descriptor_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:conformsTo       "[Associated data type spec]."@en ;
        dct:modified         "2016-07-19T01:59:00"^^xsd:dateTime ;
        dct:source           "[ESS], [XDF]"^^rdfs:Literal ;
        dct:title            "hasEndChannel"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "The channel number in the recording where the modality block ends."@en ;
        skos:prefLabel       "has end channel"@en ;
        wdrs:describedby     bci:hasEndChannel.POWDER .

bci:hasMQTT.ID  a            owl:FunctionalProperty , owl:DatatypeProperty ;
        rdfs:domain          bci:AccessMethod.MQTT ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           rdfs:Literal ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "RecordedData_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:conformsTo       "[Associated data type spec]."@en , "A Client Identifier (or ClientId) conforms to the following definition in the latest OASIS MQTT specification: MQTT Version 3.1.1 Plus Errata 01(OASIS Standard Incorporating Approved Errata 01 10 December 2015) -- 3. MQTT Control Packets / 3.1. CONNECT / 3.1.3. Payload -- (3.1.3.1. Client Identifier)."@en ;
        dct:format           "The Client Identifier MUST be a UTF-8 encoded string as defined in Section 1.5.3 of the latest OASIS MQTT specification: MQTT Version 3.1.1 Plus Errata 01(OASIS Standard Incorporating Approved Errata 01 10 December 2015) -- 1. Introduction -- (1.5 Data representations)."@en ;
        dct:modified         "2016-07-05T04:35:00"^^xsd:dateTime ;
        dct:title            "hasMQTT.ID"@en ;
        owl:deprecated       true , "--This ontology should be agnostic to the data access-- $ 04:35 AM 2016-07-05 $"^^rdfs:Literal ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Describes the Client Identifier (ClientId) parameter in an AccessMethod.MQTT connection. This parameter identifies the Client to the MQTT Server."@en ;
        skos:prefLabel       "has MQTT ID"@en ;
        wdrs:describedby     bci:hasMQTT.ID.POWDER .

bci:isModalityOf  a          owl:ObjectProperty ;
        rdfs:domain          bci:Modality ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:Aspect ;
        rdfs:subPropertyOf   ssn:isPropertyOf ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "Aspect-and-Modality_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2017-08-31T02:28:00"^^xsd:dateTime ;
        dct:source           "[SSN]"^^rdfs:Literal ;
        dct:title            "isModalityOf"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a Modality with its correspondent Aspect. This can be read, as follow: \"A Modality is modality of Aspect\". This object property is a subproperty of ssn:isPropertyOf: [sosa:ObservableProperty] ------ (ssn:isPropertyOf) ------ [sosa:FeatureOfInterest] [Modality] -------------------- (isModalityOf) -------------------- [Aspect]"@en ;
        skos:prefLabel       "is modality of"@en ;
        skos:scopeNote       "Connecting a Modality with its correspondent Aspect."@en ;
        wdrs:describedby     bci:isModalityOf.POWDER .

bci:hasMQTT.Broker  a        owl:FunctionalProperty , owl:DatatypeProperty ;
        rdfs:domain          bci:AccessMethod.MQTT ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           rdfs:Literal ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "RecordedData_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:conformsTo       "A broker (or MQTT Server) conforms to the following definition in the latest OASIS MQTT specification: MQTT Version 3.1.1 Plus Errata 01(OASIS Standard Incorporating Approved Errata 01 10 December 2015) -- 1.2 Terminology -- (Server)."@en , "[Associated data type spec]."@en ;
        dct:format           "As defined in: MQTT Version 3.1.1 Plus Errata 01(OASIS Standard Incorporating Approved Errata 01 10 December 2015) -- 1. Introduction -- (1.5 Data representations)."@en ;
        dct:modified         "2016-07-05T04:35:00"^^xsd:dateTime ;
        dct:title            "hasMQTT.Broker"@en ;
        owl:deprecated       "--This ontology should be agnostic to the data access-- $ 04:35 AM 2016-07-05 $"^^rdfs:Literal , true ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Describes the broker (a MQTT Server) parameter in an AccessMethod.MQTT connection."@en ;
        skos:prefLabel       "has MQTT broker"@en ;
        wdrs:describedby     bci:hasMQTT.Broker.POWDER .

bci:hasModality  a           owl:ObjectProperty ;
        rdfs:domain          bci:Aspect ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:Modality ;
        rdfs:subPropertyOf   ssn:hasProperty ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "Aspect-and-Modality_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2017-08-31T12:21:00"^^xsd:dateTime ;
        dct:source           "[SSN]"^^rdfs:Literal ;
        dct:title            "hasModality"@en ;
        owl:inverseOf        bci:isModalityOf ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects an Aspect with its correspondent Modality set. This can be read, as follow: \"An Aspect has Modality(ies)\". This object property is a subproperty of ssn:hasProperty: [sosa:FeatureOfInterest] ------ (ssn:hasProperty) ------ [sosa:ObservableProperty] [Aspect] -------------------- (hasModality) ---------------------- [Modality]"@en ;
        skos:prefLabel       "has modality"@en ;
        skos:scopeNote       "Connecting an Aspect with its correspondent Modality set."@en ;
        wdrs:describedby     bci:hasModality.POWDER .

bci:ProtocolBuffersDataFormat
        a                    owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      bci:DataFormat ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "RecordedData_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:conformsTo       "Google Protocol Buffers DataFormat"@en ;
        dct:modified         "2016-06-03T02:25:00"^^xsd:dateTime ;
        dct:title            "ProtocolBuffersDataFormat"@en ;
        owl:disjointWith     bci:XdfDataFormat ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Represents a Protocol Buffers DataFormat, which is a language-neutral, platform-neutral, extensible way of serializing structured data for use in communications protocols and data storage."@en ;
        skos:prefLabel       "protocol buffers BCI data format"@en ;
        wdrs:describedby     bci:ProtocolBuffersDataFormat.POWDER .

bci:ActuatorSpec  a          owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      bci:Descriptor ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "0"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:ActuatorSpec ;
                               owl:onProperty               bci:hasActuatorSpec
                             ] ;
        terms:part           "Descriptor,Actuation"^^rdfs:Literal ;
        DCMIType:StillImage  "Descriptor_(SOSA-SSN).png"^^rdfs:Literal , "Actuation.png"^^rdfs:Literal ;
        dct:modified         "2017-12-11T03:41:00"^^xsd:dateTime ;
        dct:title            "ActuatorSpec"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "An ActuatorSpec is an information object that describes specific properties (such as: hardware specs, power used, types of interfaces, etc.) of an Actuator. Similarly to DeviceSpec, the structure of ActuatorSpec has been modeled as a composite object so that it can be composed as a set of ActuatorSpecs to describe specific parts of an Actuator. In this way, an ActuatorSpec is considered as a bag of descriptive properties about the Actuator. An ActuatorSpec is a specialized Descriptor. An ActuatorSpec can be used to record any descriptive information related to the physical actuator component."@en ;
        skos:editorialNote   "This ontology does not define any information object in particular of an ActuatorSpec."@en ;
        skos:prefLabel       "actuator specification"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe specific types of ActuatorSpec."@en ;
        wdrs:describedby     bci:ActuatorSpec.POWDER .

bci:hasRole  a               owl:ObjectProperty ;
        rdfs:domain          bci:Context.Object ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:Context.Role ;
        terms:part           "Context"^^rdfs:Literal ;
        DCMIType:StillImage  "Context.Role.png"^^rdfs:Literal ;
        dct:modified         "2016-05-16T22:23:00"^^xsd:dateTime ;
        dct:source           "[Unity]"^^rdfs:Literal ;
        dct:title            "hasRole"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a Context.Object with its Context.Role."@en ;
        skos:prefLabel       "has role"@en ;
        wdrs:describedby     bci:hasRole.POWDER .

skos:editorialNote  a  owl:AnnotationProperty .

oldssn:isPropertyOf  a  owl:ObjectProperty .

bci:isChannelDataOf  a       owl:ObjectProperty ;
        rdfs:domain          bci:Channel ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:DeviceChannelingSpec ;
        terms:part           "SystemCapabilities"^^rdfs:Literal ;
        DCMIType:StillImage  "MeasurementCapability_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-08-14T05:28:00"^^xsd:dateTime ;
        dct:source           "[XDF]"^^rdfs:Literal ;
        dct:title            "isChannelDataOf"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a Channel with its associated DeviceChannelingSpec."@en ;
        skos:editorialNote   "See general remark about: EEG-CONCEPTS"@en ;
        skos:prefLabel       "is channel (logical component) data of"@en ;
        skos:scopeNote       "Connecting a Channel with its associated DeviceChannelingSpec definition."@en ;
        wdrs:describedby     bci:isChannelDataOf.POWDER .

bci:Context.Role  a          owl:Class ;
        rdfs:isDefinedBy     bci: ;
        terms:part           "Context"^^rdfs:Literal ;
        DCMIType:StillImage  "Context.Role.png"^^rdfs:Literal ;
        dct:modified         "2016-08-22T00:50:00"^^xsd:dateTime ;
        dct:source           "[Unity]"^^rdfs:Literal ;
        dct:title            "Context.Role"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Specifies how a Context.Object participates (its \"Role\") in the Context.Scene.A Context.Object only has one Context.Role."@en ;
        skos:editorialNote   "This ontology does not define any specific Context.Role subclasses."@en ;
        skos:example         "(*) Character: The Context.Object participates as a character in the Context.Scene. That is, as an autonomous animated entity that interacts directly (in the foreground) with the Subject. For some BCI applications, this role describes all the Context.Objects that forms a \"Protocol\" or \"Procedure\"; that is, the ones that the Subject needs to pay attention to. (*) Property: The Context.Object participates as a property in the Context.Scene. That is, as a co-dependant entity that can influence the configuration of any entity in a Context.Scene. (*) Scenery: The Context.Object participates as part of the scenery in the Context.Scene. That is, as an (autonomous) animated entity that interacts indirectly (in the background) with the Subject. Some BCI applications implement simple Contexts, based solely on two structural roles for Context.Objects: (*) Background. (*) Foreground: where the \"Protocol\" or \"Procedure\" is implemented. Hence, the classification described above can be mapped with this terminology in the following way: (*) Background is equivalent to the scenery role. (*) Foreground is equivalent to the character role."@en ;
        skos:prefLabel       "context object role"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe the different ways (\"Roles\") in that Context.Objects can participate in a Context.Scene."@en , "The classification of how a Context.Object participates in a Context.Scene."@en ;
        wdrs:describedby     bci:Context.Role.POWDER .

bci:CognitiveAspect  a       owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      bci:Aspect ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "Aspect-and-Modality_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-05-24T00:53:00"^^xsd:dateTime ;
        dct:title            "CognitiveAspect"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Describes the classification of CognitiveAspects. One application for this Aspect is Learning."@en ;
        skos:prefLabel       "cognitive aspect"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe the CognitiveAspects of the Records."@en ;
        wdrs:describedby     bci:CognitiveAspect.POWDER .

bci:Context  a               owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      [ a                   owl:Restriction ;
                               owl:maxCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onProperty      bci:hasTitle
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Session ;
                               owl:onProperty               bci:hasSession
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Context.Scene ;
                               owl:onProperty               bci:hasScene
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Playout ;
                               owl:onProperty               bci:hasPlayout
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "0"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Descriptor ;
                               owl:onProperty               bci:hasDescriptor
                             ] ;
        rdfs:subClassOf      [ a                   owl:Restriction ;
                               owl:onProperty      bci:hasLocation ;
                               owl:someValuesFrom  owl:Thing
                             ] ;
        terms:part           "Context"^^rdfs:Literal ;
        DCMIType:StillImage  "Context.png"^^rdfs:Literal ;
        dct:modified         "2016-04-14T01:45:00"^^xsd:dateTime ;
        dct:source           "[Shafer2001], [Unity]"^^rdfs:Literal ;
        dct:title            "Context"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "In [Shafer2001] we find the following definition of Context: Dey et al. define context as \"any information that can be used to characterize the situation of entities (i.e., whether a person, place, or object) that are considered relevant to the interaction between a user and an application\" (p. 106). Thus, context awareness implies two attributes of a system: the ability to obtain context and the ability to utilize contextual information. For the purpose of this ontology, a Context is the architectural description of the environment (external settings, components and procedures) on which a Subject interacts with it, during a Session."@en ;
        skos:editorialNote   "A classification (class hierarchy) for Context has been not yet defined."@en ;
        skos:example         "(*) Physical descriptions of any environment. (*) Simulations. (*) Video Games. (*) Virtual Reality environments."@en ;
        skos:prefLabel       "context"@en ;
        wdrs:describedby     bci:Context.POWDER .

oldssn:madeObservation
        a       owl:ObjectProperty .

bci:hasChannelingSpec
        a                    owl:FunctionalProperty , owl:ObjectProperty ;
        rdfs:domain          bci:Modality ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:ChannelingSpec ;
        rdfs:subPropertyOf   bci:hasDescriptor ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "Aspect-and-Modality_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-06-30T01:43:00"^^xsd:dateTime ;
        dct:title            "hasChannelingSpec"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a Modality with its related ChannelingSpec."@en ;
        skos:prefLabel       "has channeling schema spec"@en ;
        skos:scopeNote       "A hasDescriptor sub property for connecting a Modality with its related ChannelingSpec."@en ;
        wdrs:describedby     bci:hasChannelingSpec.POWDER .

bci:StimulusTag  a           owl:Class ;
        rdfs:subClassOf      bci:Marker ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onClass               bci:StimulusEvent ;
                               owl:onProperty            bci:hasStimulusEvent ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        terms:part           "AnnotationTag"^^rdfs:Literal ;
        DCMIType:StillImage  "Marker_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-05-20T18:48:00"^^xsd:dateTime ;
        dct:title            "StimulusTag"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Information object that captures a Marker issued by a StimulusEvent. While doing the data recording, the system automatically creates a Marker (StimulusTag) for the oldssn:SensorInput based on the Context (issued by a Context.ObjectComponent.Event, specifically a StimulusEvent) of the Session."@en ;
        skos:editorialNote   "This is one of the most important concepts in this ontology."@en ;
        skos:prefLabel       "stimulus tag"@en ;
        wdrs:describedby     bci:StimulusTag.POWDER .

bci:hasState  a              owl:FunctionalProperty , owl:DatatypeProperty ;
        rdfs:domain          bci:ResponseTag ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           rdfs:Literal ;
        terms:part           "AnnotationTag"^^rdfs:Literal ;
        DCMIType:StillImage  "Marker_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:conformsTo       "[Associated data type spec]."@en ;
        dct:modified         "2016-05-22T21:23:00"^^xsd:dateTime ;
        dct:title            "hasState"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Captures the alphabet symbol of the ResponseTag, representating its \"State\". BCI domain applications can define their own specific symbolic scheme to represent its relevant States."@en ;
        skos:example         "An alphabet-based symbolic scheme, could be: \"A B C D E...\". Thus, a specific State, would be: {\"B\"}"@en ;
        skos:prefLabel       "has state"@en ;
        wdrs:describedby     bci:hasState.POWDER .

bci:hasObjectComponent
        a                    owl:ObjectProperty ;
        rdfs:domain          [ a            owl:Class ;
                               owl:unionOf  ( bci:Context.Object bci:Context.ObjectComponent )
                             ] ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:Context.ObjectComponent ;
        terms:part           "Context"^^rdfs:Literal ;
        DCMIType:StillImage  "Context.ObjectComponent.png"^^rdfs:Literal ;
        dct:modified         "2016-05-16T22:53:00"^^xsd:dateTime ;
        dct:source           "[Unity]"^^rdfs:Literal ;
        dct:title            "hasObjectComponent"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a (Context.Object or Context.ObjectComponent) with the set of Context.ObjectComponents that comprises its internal structure."@en ;
        skos:prefLabel       "has object component"@en ;
        skos:scopeNote       "Connecting a (Context.Object or Context.ObjectComponent) with its Context.ObjectComponents"@en ;
        wdrs:describedby     bci:hasObjectComponent.POWDER .

bci:PlayoutInstant.SubjectAction
        a                    owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      bci:PlayoutInstant ;
        terms:part           "Context"^^rdfs:Literal ;
        DCMIType:StillImage  "PlayoutInstant.png"^^rdfs:Literal ;
        dct:modified         "2016-05-19T17:27:00"^^xsd:dateTime ;
        dct:title            "PlayoutInstant.SubjectAction"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Captures a relevant entry log in a Playout of a Subject's Event issued by an Action instance during a Session."@en ;
        skos:prefLabel       "playout instant: subject action type"@en ;
        skos:scopeNote       "Events (Actions) issued by a Subject during a Session."@en ;
        wdrs:describedby     bci:PlayoutInstant.SubjectAction.POWDER .

wdrs:describedby  a  owl:AnnotationProperty .

bci:isObservationResultOf
        a                    owl:FunctionalProperty , owl:ObjectProperty ;
        rdfs:domain          bci:RecordedData ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:Record ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "Record_(SOSA-SSN).png"^^rdfs:Literal , "RecordedData_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-07-22T03:30:00"^^xsd:dateTime ;
        dct:title            "isObservationResultOf"@en ;
        owl:inverseOf        bci:observationResult ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a RecordedData set with its correspondent Record."@en ;
        skos:prefLabel       "is observation result of (a BCI Record)"@en ;
        skos:scopeNote       "Connecting a RecordedData set with its correspondent Record"@en ;
        wdrs:describedby     bci:isObservationResultOf.POWDER .

bci:DataSegment  a           owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "0"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Marker ;
                               owl:onProperty               bci:isReferencedBy
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "0"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Descriptor ;
                               owl:onProperty               bci:hasDescriptor
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:DataBlock ;
                               owl:onProperty               bci:hasDataBlock
                             ] ;
        terms:part           "AnnotationTag"^^rdfs:Literal ;
        DCMIType:StillImage  "DataSegment.png"^^rdfs:Literal ;
        dct:modified         "2016-06-12T22:05:00"^^xsd:dateTime ;
        dct:title            "DataSegment"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "It is a sequentially linked DataBlocks, and thus, identifies a proper subset of a RecordedData. A time interval is implicitly found between the first DataBlock (startTime) and the last DataBlock (endTime) of the DataSegment. In the BCI domain: (*) A DataSegment conforms the basic data unit for \"tagging\" purposes, i. e., to associate semantic annotations (event tags or Markers) to the data (DataBlock sets). (*) A DataSegment is a collection of DataBlocks that expands a certain time interval. (*) A DataSegment is considered a logical data entity (whereas a DataBlock is considered a physical data entity)."@en ;
        skos:editorialNote   "Right after a set of DataSegments is created, two consecutive tasks occur: (*) A set of editing processes is run on the recordings, which classify the data sets based on different Models. (*) A set of ResponseTags is created, which capture the information related to \"what is so special about\" a particular DataSegment."@en ;
        skos:prefLabel       "data segment"@en ;
        wdrs:describedby     bci:DataSegment.POWDER .

bci:madeEegRecord  a         owl:InverseFunctionalProperty , owl:ObjectProperty ;
        rdfs:domain          bci:EegDevice ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:EegRecord ;
        rdfs:subPropertyOf   bci:madeRecord ;
        terms:part           "EEG"^^rdfs:Literal ;
        DCMIType:StillImage  "EegRecord_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-07-22T02:47:00"^^xsd:dateTime ;
        dct:title            "madeEegRecord"@en ;
        owl:deprecated       true , "--Concerning EEG, this ontology only defines its related classes. It does not extend or define any specific properties for EEG.-- $ 04:27 AM 2016-07-29 $"^^rdfs:Literal ;
        owl:inverseOf        bci:observedByEegDevice ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects an EegDevice with its correspondent EegRecords. This can be read, as follow: \"An EegDevice made EegRecords\". This object property is a subproperty of madeRecord: [Device] ------------ (madeRecord) ------------ [Record] [EegDevice] ------ (madeEegRecord) ------ [EegRecord]"@en ;
        skos:editorialNote   "See general remark about: EEG-CONCEPTS"@en ;
        skos:prefLabel       "made EEG record"@en ;
        skos:scopeNote       "Connecting an EegDevice individual with its correspondent EegRecord"@en ;
        wdrs:describedby     bci:madeEegRecord.POWDER .

bci:Action  a                owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      DUL:Action ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:PlayoutInstant.SubjectAction ;
                               owl:onProperty               bci:hasPlayoutInstant
                             ] ;
        terms:part           "Session,Subject"^^rdfs:Literal ;
        DCMIType:StillImage  "Activity.png"^^rdfs:Literal ;
        dct:modified         "2016-06-24T18:32:00"^^xsd:dateTime ;
        dct:title            "Action"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Describes any Event issued by a Subject while performing a specific Activity. Actions are considered to be structural components of an Activity, which are performed by the Subject while interacting with the Context. As an interaction event, an Action can register many PlayoutInstant.SubjectActions in a Playout."@en ;
        skos:prefLabel       "action"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe any relevant Action classification that Subjects can do, while performing an Activity."@en ;
        wdrs:describedby     bci:Action.POWDER .

bci:EegChannel  a            owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      bci:Channel ;
        terms:part           "EEG"^^rdfs:Literal ;
        DCMIType:StillImage  "MeasurementCapability_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-08-14T08:25:00"^^xsd:dateTime ;
        dct:source           "[XDF], [ESS]"^^rdfs:Literal ;
        dct:title            "EegChannel"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Defines a broader type of an EEG Channel (channeling scheme information component), used in BCI applications to collect EEG (Electroencephalography) data. This concept relates directly to the notion of an electrode capturing brainwave activity."@en ;
        skos:editorialNote   "See general remark about: EEG-CONCEPTS"@en ;
        skos:example         "BCI applications based on [ESS] and [XDF], could define the following channeling metadata attributes for an EegModality spec: (*) Label: (*) [ESS 2.0]: a comma separated list of labels corresponding channels. This node is required for EEG Modality. (*) [XDF]: EEG channel label, according to the labeling scheme. For EEG, the preferred labeling scheme is 10-20 (or the finer-grained 10-5). (*) Placement: (*) [ESS 2.0]: location of the reference channel or channels used during EEG or ECG recording. Should only be provided if the ModalitySignalType (Modality) is EEG or ECG. For EEG, the preferred location convention is presented below. Choose between the following values (or provide a new value if the reference is not any of these options): {\"Right Mastoid\", \"Left Mastoid\", \"Mastoids\",\"Linked Mastoids\" [for electrically linked mastoids],\"Cz\" [top of the head],\"CMS\" [e.g. in BIOSEMI],\"Left Ear\",\"Right Ear\",\"Ears\",\"Average\",\"Nasion\",\"Nose\"}. For Wilson Central Terminal ECG reference use \"WCT\". (*) [XDF]: (*) { LocationX, LocationY, LocationZ }: 3D position (measured location) of the electrode on the head's surface based on a coordinate system (frame of reference). Each value is described as: (*) { LocationX }: coordinate axis pointing from the center of the head to the right, in millimeters. (*) { LocationY }: coordinate axis pointing from the center of the head to the front, in millimeters. (*) { LocationZ }: coordinate axis pointing from the center of the head to the top, in millimeters. XDF states that if the used coordinate system is arbitrary, the application should then include well-known fiducials (landmarks) for co-registration. (*) LocationType = { 10-10, 10-20, 10-5, Custom, EGI }: channel location type/standard used. (*) [XDF] ChannelFormat = { double64, float32, int16, int32, int64, int8, string }: corresponds to the channel_format field of the StreamHeader chunk section. It's one of the 3 required fields in the XDF header. (*) [XDF] Signal Referencing Scheme: (*) isCommonAverage: (boolean data type); \"true\" if the subtracted reference signal was a common average, otherwise \"false\". (*) isSubtracted: (boolean data type); \"true\" if a reference signal has already been subtracted from the data, otherwise \"false\". BCI applications should include their own relevant dictionaries (placement, formats, etc.), as part of their proprietary extended semantic definitions."@en ;
        skos:prefLabel       "EEG channel"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe any relevant EegChannels, based on specialized EegModality(ies), that BCI applications may require."@en ;
        wdrs:describedby     bci:EegChannel.POWDER .

bci:aspectOfInterest  a      owl:ObjectProperty , owl:FunctionalProperty ;
        rdfs:domain          bci:Record ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:Aspect ;
        rdfs:subPropertyOf   sosa:hasFeatureOfInterest ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "Record_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2017-08-31T03:19:00"^^xsd:dateTime ;
        dct:source           "[SSN]"^^rdfs:Literal ;
        dct:title            "aspectOfInterest"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a Record with its correspondent Aspect. This can be read, as follow: \"A Record is generated by capturing an Aspect (of interest)\". This object property is a subproperty of sosa:hasFeatureOfInterest: [sosa:Observation] ------ (sosa:hasFeatureOfInterest) ------ [sosa:FeatureOfInterest] [Record] -------------------- (aspectOfInterest) ---------------------- [Aspect]"@en ;
        skos:prefLabel       "aspect of interest"@en ;
        skos:scopeNote       "Connecting a Record individual with its correspondent Aspect"@en ;
        wdrs:describedby     bci:aspectOfInterest.POWDER .

bci:hasLabel  a             owl:FunctionalProperty , owl:DatatypeProperty ;
        rdfs:domain         [ a            owl:Class ;
                              owl:unionOf  ( bci:Channel bci:Marker )
                            ] ;
        rdfs:isDefinedBy    bci: ;
        rdfs:range          rdfs:Literal ;
        terms:part          "AnnotationTag,SystemCapabilities"^^rdfs:Literal ;
        dct:conformsTo      "[Associated data type spec]."@en ;
        dct:modified        "2016-08-14T03:19:00"^^xsd:dateTime ;
        dct:source          "[ESS], [XDF]" ;
        dct:title           "hasLabel"@en ;
        skos:changeNote     "Status: *STABLE*"@en ;
        skos:definition     "A human-readable and descriptive label for general identification purposes associated to an instance."@en ;
        skos:editorialNote  "If necessary, BCI applications may extend the definition of this attribute to specify the preferred notation scheme, using the semantic annotation skos:notation."@en ;
        skos:historyNote    "Related to Channel, this concept has the following definitions: (*) [ESS 2.0]: a comma separated list of labels of the corresponding referenced channel or channels. This node is required for EEG Modality and it's used during EEG or ECG recording. For example, if using 10-20 system and numerical average of both mastoids, use \"A1, A2\" for {referenceLabel} and \"Mastoids\" for {referenceLocation}. Note that there could be multiple labels. (*) [XDF] Signal referencing scheme: name of the dedicated reference channel(s), if part of the measured channels (repeated if multiple). For an EEG channel label, its value is based on the labeling scheme. For EEG, the preferred labeling scheme is 10-20 (or the finer-grained 10-5)."@en ;
        skos:prefLabel      "has label"@en ;
        skos:scopeNote      "(*) In a Channel: this attribute is used for search (access) purposes, according to a preferred labeling scheme (see the editorial note). (*) In a Marker: this attribute indicates a marker type. For example: \"110\" = \"Red light being flashed\"."@en ;
        wdrs:describedby    bci:hasLabel.POWDER .

bci:ofAspect  a              owl:ObjectProperty ;
        rdfs:domain          bci:Channel ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:Aspect ;
        terms:part           "SystemCapabilities"^^rdfs:Literal ;
        DCMIType:StillImage  "Aspect-and-Modality_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2017-08-09T02:39:00"^^xsd:dateTime ;
        dct:source           "[SSN]"^^rdfs:Literal ;
        dct:title            "ofAspect"@en ;
        owl:deprecated       true , "--The property oldssn:ofFeature was deprecated in SOSA/SSN. Therefore, it will be also deprecated in BCI-O.-- $ 02:39 AM 2017-08-09 $"^^rdfs:Literal ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a Channel to the Aspect is described for. This can be read, as follow: \"A Channel is use to describe a property of an Aspect\". This object property is a subproperty of ssn:ofFeature: [ssn-system:SystemCapability] ------ (ssn:ofFeature) ------ [sosa:FeatureOfInterest] [Channel] ---------------------- (ofAspect) -------------------- [Aspect] [SSN] A relation from a ssn-system:SystemCapability to the sosa:FeatureOfInterest the capability is described for. (Used in conjunction with ssn:forProperty)."@en ;
        skos:editorialNote   "See general remark about: EEG-CONCEPTS"@en ;
        skos:prefLabel       "of aspect"@en ;
        skos:scopeNote       "Connecting a Channel to the Aspect is described for."@en ;
        wdrs:describedby     bci:ofAspect.POWDER .

bci:analizes  a              owl:ObjectProperty , owl:FunctionalProperty ;
        rdfs:domain          bci:Model ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:Aspect ;
        terms:part           "AnnotationTag"^^rdfs:Literal ;
        DCMIType:StillImage  "Model_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-06-28T01:55:00"^^xsd:dateTime ;
        dct:title            "analizes"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Indicates that an Aspect is analized by a Model (throughout its States): analyzing looking for specific kind of Markers. A Model is specific to the purpose of its BCI application, such as: stress level measurement or fatigue detection."@en ;
        skos:prefLabel       "analizes"@en ;
        skos:scopeNote       "Connecting a Model with an Aspect."@en ;
        wdrs:describedby     bci:analizes.POWDER .

bci:FeatureParameter  a      owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      DUL:FormalEntity ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onClass               bci:Model ;
                               owl:onProperty            bci:hasModel ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        terms:part           "AnnotationTag"^^rdfs:Literal ;
        DCMIType:StillImage  "Model_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2018-01-03T01:17:00"^^xsd:dateTime ;
        dct:title            "FeatureParameter"@en ;
        owl:disjointWith     bci:Model ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "It is an auxiliary data analytics related to an \"epoch\" (pointed by a Marker) in the raw data (DataBlock) that describes an event of interest in the analysis (its semantics are captured by a ResponseTag). In practice, a set of FeatureParameters characterize the content of a ResponseTag. A FeatureParameter is commonly formally defined by an underlying mathematical/statistical Model, which describes how it is calculated. FeatureParameters are: (*) relevant computed data (used-by or built) in developed algorithms/Models that analyse the raw dataset (DataBlock). (*) pinpointed for each \"epoch\" of the raw dataset recording (DataBlock). An epoch is characterized by a ResponseTag marker; the temporal tagging of epochs (frequency-based, duration/interval, timestamped) depend on both the nature of the data and the analytical Models used over them."@en ;
        skos:example         "Some feature parameters for mfSSVEP data sets for glaucoma patients are: (*) CCA correlations between the mfSSVEP signals and the set of reference signals (sinusoids or binary sequences) derived from each visual stimulus (one per each visual stimulus). (*) CCA coefficients of the reference signals that yield maximum correlation with the mfSSVEP signals (one per each reference signal and each visual stimulus). (*) Spectral Power Density (PSD) of the optimal combination of mfSSVEP signals maximally correlated with the set of reference signals derived from each visual stimulus (one per each visual stimulus). Note: the above parameters may be the differences between the PSDs when the visual stimulus was presence and absent from the stimuli patterns."@en ;
        skos:prefLabel       "feature"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe any FeatureParameter entities."@en ;
        wdrs:describedby     bci:FeatureParameter.POWDER .

bci:    a                voaf:Vocabulary , owl:NamedIndividual ;
        dct:modified     "2017-12-11T01:49:00"^^xsd:dateTime ;
        dct:title        "https://w3id.org/BCI-ontology#"@en ;
        skos:changeNote  "Status: *STABLE*"@en ;
        skos:definition  "Instance that identifies the BCI Ontology (BCI-O) as a vocabulary used in the linked data cloud. Its identifier corresponds to the BCI-O namespace URI."@en ;
        skos:prefLabel   "bci:"@en .

bci:isValueOf  a          owl:FunctionalProperty , owl:ObjectProperty ;
        rdfs:domain       bci:DataBlock ;
        rdfs:isDefinedBy  bci: ;
        rdfs:range        bci:RecordedData ;
        terms:part        "Results"^^rdfs:Literal ;
        dct:modified      "2018-01-17T05:19:00"^^xsd:dateTime ;
        dct:title         "isValueOf"@en ;
        owl:deprecated    true , "--Previously, both RecordedData and DataBlock were aligned to sosa:Result.In order to keep a simple model, DataBlock's alignment was removed.Therefore, the property hasDataBlock will be used to connect these two concepts.-- $ 05:05 AM 2018-01-17 $"^^rdfs:Literal ;
        skos:changeNote   "Status: *STABLE*"@en ;
        skos:definition   "Connects a DataBlock set with its correspondent RecordedData."@en ;
        skos:prefLabel    "is value of (recorded data)"@en ;
        skos:scopeNote    "Connecting a DataBlock individual with its correspondent RecordedData"@en ;
        wdrs:describedby  bci:isValueOf.POWDER .

bci:hasPlayoutInstant
        a                    owl:ObjectProperty , owl:InverseFunctionalProperty ;
        rdfs:domain          [ a            owl:Class ;
                               owl:unionOf  ( bci:Action bci:Context.ObjectComponent.Event bci:Playout )
                             ] ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:PlayoutInstant ;
        terms:part           "Context,Session"^^rdfs:Literal ;
        DCMIType:StillImage  "Activity.png"^^rdfs:Literal , "PlayoutInstant.png"^^rdfs:Literal ;
        dct:modified         "2016-06-23T02:39:00"^^xsd:dateTime ;
        dct:title            "hasPlayoutInstant"@en ;
        owl:inverseOf        bci:isPlayoutInstantOf ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a (Playout or Context.ObjectComponent.Event or Action) with its correspondent PlayoutInstant(ces) log entries."@en ;
        skos:prefLabel       "has playout instant"@en ;
        skos:scopeNote       "Connecting a (Playout or Context.ObjectComponent.Event or Action) individual with its correspondent PlayoutInstant(ces)"@en ;
        wdrs:describedby     bci:hasPlayoutInstant.POWDER .

DUL:Event  a    owl:Class .

bci:hasValue  a              owl:ObjectProperty , owl:InverseFunctionalProperty ;
        rdfs:domain          bci:RecordedData ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:DataBlock ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "RecordedData_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2018-01-17T05:31:00"^^xsd:dateTime ;
        dct:source           "[oldSSN], [SSN]"^^rdfs:Literal ;
        dct:title            "hasValue"@en ;
        owl:deprecated       "--Previously, both RecordedData and DataBlock were aligned to sosa:Result.In order to keep a simple model, DataBlock's alignment was removed.Therefore, the property hasDataBlock will be used to connect these two concepts.-- $ 05:05 AM 2018-01-17 $"^^rdfs:Literal , true ;
        owl:inverseOf        bci:isValueOf ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a RecordedData with its correspondent DataBlock set. This object property is a subproperty of sosa:hasResult (previously was of oldssn:hasValue): [oldssn:SensorOutput] ------ (sosa:hasResult) ------ [oldssn:ObservationValue] [RecordedData] -------------- (hasValue) -------------------- [DataBlock]"@en ;
        skos:editorialNote   "A SPARQL triple pattern matching to find the DataBlocks of a Record via this object property would be: ?Record bci:observationResult ?RecordedData ?RecordedData bci:hasValue ?DataBlock Based on the following relationships: [Record] -------- (observationResult) ------ [RecordedData] [RecordedData] ---------- (hasValue) -------------- [DataBlock]"@en ;
        skos:prefLabel       "has value (data blocks)"@en ;
        skos:scopeNote       "Connecting a RecordedData individual with its correspondent DataBlocks"@en ;
        wdrs:describedby     bci:hasValue.POWDER .

bci:isSubjectOf  a           owl:ObjectProperty ;
        rdfs:domain          bci:Subject ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:Interaction ;
        terms:part           "Subject"^^rdfs:Literal ;
        DCMIType:StillImage  "Subject.png"^^rdfs:Literal ;
        dct:modified         "2016-06-23T01:55:00"^^xsd:dateTime ;
        dct:title            "isSubjectOf"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a Subject with a set of Interactions where he/she participates in."@en ;
        skos:prefLabel       "is subject of (participates in)"@en ;
        skos:scopeNote       "Connecting a Subject with a set of Interactions where he/she participates in."@en ;
        wdrs:describedby     bci:isSubjectOf.POWDER .

bci:RecordedData  a          owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      sosa:Result ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:DataBlock ;
                               owl:onProperty               bci:hasDataBlock
                             ] ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onClass               bci:Record ;
                               owl:onProperty            bci:isObservationResultOf ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "0"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:RecordedData ;
                               owl:onProperty               bci:hasNext
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:AccessMethod ;
                               owl:onProperty               bci:hasAccessMethod
                             ] ;
        rdfs:subClassOf      [ a                   owl:Restriction ;
                               owl:onProperty      bci:isProducedByDevice ;
                               owl:someValuesFrom  bci:Device
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:maxQualifiedCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:RecordedData ;
                               owl:onProperty               bci:hasPrevious
                             ] ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onClass               bci:DataFormat ;
                               owl:onProperty            bci:hasDataFormat ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        terms:part           "Observations,Results"^^rdfs:Literal ;
        DCMIType:StillImage  "RecordedData_(SOSA-SSN).png"^^rdfs:Literal , "Record_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2018-01-17T05:24:00"^^xsd:dateTime ;
        dct:source           "[oldSSN], [SSN]"^^rdfs:Literal ;
        dct:title            "RecordedData"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "[oldSSN] It is a specific type of a oldssn:SensorOutput (aligned to >sosa:Result), which is a piece of information outputted by a Device in an sosa:Observation: an observed value for BCI activities. Based on [oldSSN], the value itself is being represented by a specific type of an oldssn:ObservationValue: a sequence of DataBlocks. This concept abstracts a raw data set (independent of its representation and access method) outputted by a Device for a specific Modality. In this way, a RecordedData has: (*) A single data representation, a DataFormat, and (*) multiple AccessMethods (either archived or in real-time). In the BCI domain, it's common that the data \"evolves\" over time. That is, there are changes on the data structure: (*) from its \"initial\" state (ever since it's collected from a Device: raw data) (*) to \"following\" states (when applying specialized algorithms to recognizes patterns throughout Models: transformed data). For example, for EEG data its evolution over time resembles a tree structure. Hence, it is desirable for BCI applications to keep a temporal tracking of the previous and following versions of the data: a derived data tree throughout keeping links between data versions. This is achieved via the hasPrevious and hasNext object properties."@en ;
        skos:editorialNote   "See general remark about: 1_MAPPINGS-TO-SOSA-SSN"@en , "From the perspective of the data (RecordedData): (*) Its physical structure is defined through the DataFormat. (*) Its logical structure is defined through the associated RecordChannelingSpec of its Record (the defined collection of Channels)."@en ;
        skos:prefLabel       "recorded BCI data"@en ;
        wdrs:describedby     bci:RecordedData.POWDER .

bci:Device  a                owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      sosa:Sensor ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Record ;
                               owl:onProperty               bci:madeRecord
                             ] ;
        rdfs:subClassOf      [ a                   owl:Restriction ;
                               owl:onProperty      bci:observes ;
                               owl:someValuesFrom  bci:Modality
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:DeviceSpec ;
                               owl:onProperty               bci:hasDeviceSpec
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "0"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:NonChannel ;
                               owl:onProperty               bci:hasNonChannelData
                             ] ;
        rdfs:subClassOf      [ a                   owl:Restriction ;
                               owl:onProperty      bci:detects ;
                               owl:someValuesFrom  bci:StimulusEvent
                             ] ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onClass               bci:DeviceChannelingSpec ;
                               owl:onProperty            bci:hasDeviceChannelingSpec ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        terms:part           "Sensors"^^rdfs:Literal ;
        DCMIType:StillImage  "Device_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:description      "=== ** scopeNote ** This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe any relevant type of BCI devices to measure specific Modality(ies) for BCI activities, such as: (*) EEG (Electroencephalogram) device. (*) ECG (Electrocardiogram) device. (*) MoCap (Motion Capture) device. Example: LeapMotion (MoCap) Tracker. (*) Eye-Gaze device (for gaze or eye-tracking). Example: EyeTribe. (*) Audio device. (*) Video device. (*) Hand-Gesture device. (*) Keyboard device. (*) Mouse device. (*) Visual BCI device. This ontology does not define all the BCI devices listed above. ==="@en ;
        dct:modified         "2017-08-20T22:40:00"^^xsd:dateTime ;
        dct:source           "[XDF], [SSN], [Compton2009]"^^rdfs:Literal ;
        dct:title            "Device"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "[SSN] A Device is a physical piece of technology (a system in a box) that implements a sensing method (similar as the concept of oldssn:SensingDevice) and, thus, observe some Modality (a sosa:ObservableProperty) of an Aspect (a sosa:FeatureOfInterest). In the BCI domain, a Device is a physical BCI device (or sensor) that is used to measure BCI activities. A Device, of course, collects data (represented by RecordedData) in an sosa:Observation (a Record)."@en ;
        skos:editorialNote   "[oldSSN] Based on the guidelines explained in the following examples: (*) (5.3.12 Device), (*) (5.4.1 University deployment example -- 5.4.1.3 Sensor), (*) (5.4.2 Smart product example -- 5.4.2.2 Sensor), (*) (5.4.3 Wind sensor (WM30) -- 5.4.3.2 Wind Sensor system), and (*) (5.4.4 Agriculture Meteorology Sensor Network -- 5.4.4.1.3 Sensor view), Some of the core restrictions modeled initially from oldssn:SensingDevice are: (*) For ssn-system:SystemCapability, two distinct kinds of measurement capabilities are identified and defined: (*) Those used for defining the Channeling Spec: a set of Channels. These are associated indirectly via the DeviceChannelingSpec concept. (*) Other measurement capabilities not related to any channel definition: NonChannels. These are associated directly via a ssn:hasMeasurementCapability sub property, as follow: ssn:hasMeasurementCapability (hasNonChannelData) only ssn-system:SystemCapability (NonChannel): multiple instances. (*) ssn:observes (observes) only sosa:ObservableProperty (Modality): for BCI, it's implied that it only has one instance. (*) ssn:detects (detects) only ssn:Stimulus (StimulusEvent): multiple instances; details (what made) the sosa:Sensor input."@en , "See general remark about: 1_MAPPINGS-TO-SOSA-SSN"@en , "[Compton2009] According to the Sensor Ontology, a sensor has a set of independent cluster of concepts: (*) Domain: FeatureOfInterest and PhysicalQuality. (*) Abstract properties: OperationModel that defines a ResponseModel. (*) Concrete properties: SensorGrounding. A Device in this ontology corresponds to the concepts for Abstract properties (#2)."@en ;
        skos:prefLabel       "BCI device"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe any relevant type of BCI devices to measure specific Modality(ies) for BCI activities."@en ;
        wdrs:describedby     bci:Device.POWDER .

DCMIType:StillImage  a  owl:AnnotationProperty .

bci:forModality  a           owl:ObjectProperty ;
        rdfs:domain          bci:Channel ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:Modality ;
        rdfs:subPropertyOf   ssn:forProperty ;
        terms:part           "SystemCapabilities"^^rdfs:Literal ;
        DCMIType:StillImage  "Aspect-and-Modality_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2017-09-14T04:34:00"^^xsd:dateTime ;
        dct:source           "[SSN]"^^rdfs:Literal ;
        dct:title            "forModality"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a Channel to the supported Modality is described for. This can be read, as follow: \"A Channel is described for (supports) Modality\". This object property is a subproperty of ssn:forProperty: [ssn-system:SystemCapability] ------ (ssn:forProperty) ------ [sosa:ObservableProperty] [Channel] ---------------------- (forModality) ---------------------- [Modality] [SSN] A relation from a ssn-system:SystemCapability to the sosa:ObservableProperty the capability is described for."@en ;
        skos:editorialNote   "See general remark about: EEG-CONCEPTS"@en ;
        skos:prefLabel       "for modality"@en ;
        skos:scopeNote       "Connecting a Channel to the supported Modality is described for."@en ;
        wdrs:describedby     bci:forModality.POWDER .

bci:pointsTo  a              owl:ObjectProperty , owl:FunctionalProperty ;
        rdfs:domain          bci:Marker ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:DataSegment ;
        terms:part           "AnnotationTag"^^rdfs:Literal ;
        DCMIType:StillImage  "DataSegment.png"^^rdfs:Literal ;
        dct:modified         "2016-06-13T00:07:00"^^xsd:dateTime ;
        dct:title            "pointsTo"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a Marker with a DataSegment."@en ;
        skos:prefLabel       "points to"@en ;
        skos:scopeNote       "Connecting a Marker individual with a DataSegment."@en ;
        wdrs:describedby     bci:pointsTo.POWDER .

bci:Playout  a               owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onDataRange           xsd:dateTime ;
                               owl:onProperty            bci:hasEndTime ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onDataRange           xsd:dateTime ;
                               owl:onProperty            bci:hasStartTime ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:PlayoutInstant ;
                               owl:onProperty               bci:hasPlayoutInstant
                             ] ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onClass               bci:Context ;
                               owl:onProperty            bci:isPlayoutOf ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "0"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Descriptor ;
                               owl:onProperty               bci:hasDescriptor
                             ] ;
        terms:part           "Context"^^rdfs:Literal ;
        DCMIType:StillImage  "Playout.png"^^rdfs:Literal ;
        dct:modified         "2016-09-29T02:32:00"^^xsd:dateTime ;
        dct:title            "Playout"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Describes the data logging (recording) of the dynamic state of the Context: the \"play out\" of the happenings. A Playout consist of many PlayoutInstant(ces)."@en ;
        skos:prefLabel       "playout record"@en ;
        wdrs:describedby     bci:Playout.POWDER .

bci:SamplingRate  a          owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      ssn-system:Frequency ;
        terms:part           "SystemCapabilities"^^rdfs:Literal ;
        DCMIType:StillImage  "SamplingRate_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2017-08-30T23:52:00"^^xsd:dateTime ;
        dct:source           "[ESS], [XDF]"^^rdfs:Literal ;
        dct:title            "SamplingRate"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Sampling rate of the Device. Its measurement unit is Hertz (Hz). As a relevant non-channeling measurement property (ssn-system:SystemProperty) related to a Device its modeling is based on: (*) the ssn-system:SystemCapability and ssn-system:SystemProperty concepts, and (*) the guidelines found in (5.4.2 Smart product example -- 5.4.2.2 Sensor)."@en ;
        skos:editorialNote   "Related concept for a Record: hasSamplingRate."@en , "See general remark about: UNITS-OF-MEASUREMENT"@en ;
        skos:prefLabel       "sampling rate of a device"@en ;
        wdrs:describedby     bci:SamplingRate.POWDER .

bci:ActuationResult  a       owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      sosa:Result ;
        rdfs:subClassOf      [ a                   owl:Restriction ;
                               owl:onProperty      bci:involves ;
                               owl:someValuesFrom  bci:ActuationEffect
                             ] ;
        terms:part           "Actuation"^^rdfs:Literal ;
        DCMIType:StillImage  "Actuation.png"@en ;
        dct:modified         "2018-01-10T04:53:00"^^xsd:dateTime ;
        dct:source           "[SSN], [Seydoux2016]"^^rdfs:Literal ;
        dct:title            "ActuationResult"@en ;
        owl:disjointWith     bci:RecordedData ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "[SSN] It represents the result of an Actuation. [Seydoux2016] Following the Action-Actuator-Effect (AAE) design pattern proposed for the IoT Ontology (IoT-O), this concept expands the following relationship: [Actuation] ------ (involves) ------ [Effect]"@en ;
        skos:editorialNote   "If needed, BCI applications can time stamp an ActuationResult."@en ;
        skos:prefLabel       "actuation result"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe any relevant ActuationResult classification."@en ;
        wdrs:describedby     bci:ActuationResult.POWDER .

bci:observedByDevice  a      owl:ObjectProperty , owl:FunctionalProperty ;
        rdfs:domain          bci:Record ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:Device ;
        rdfs:subPropertyOf   sosa:madeBySensor ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "Record_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2017-08-31T03:47:00"^^xsd:dateTime ;
        dct:source           "[SSN]"^^rdfs:Literal ;
        dct:title            "observedByDevice"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a Record with its correspondent Device. This can be read, as follow: \"A Record is observed by a Device\". This object property is a subproperty of sosa:madeBySensor: [sosa:Observation] ------ (sosa:madeBySensor) ------ [sosa:Sensor] [Record] ------------ (observedByDevice) ---------- [Device]"@en ;
        skos:editorialNote   "See general remark about: EEG-CONCEPTS"@en ;
        skos:prefLabel       "observed by device"@en ;
        skos:scopeNote       "Connecting a Record individual with its correspondent Device"@en ;
        wdrs:describedby     bci:observedByDevice.POWDER .

bci:isReferencedBy  a        owl:InverseFunctionalProperty , owl:ObjectProperty ;
        rdfs:domain          bci:DataSegment ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:Marker ;
        terms:part           "AnnotationTag"^^rdfs:Literal ;
        DCMIType:StillImage  "DataSegment.png"^^rdfs:Literal ;
        dct:modified         "2016-06-13T00:16:00"^^xsd:dateTime ;
        dct:title            "isReferencedBy"@en ;
        owl:inverseOf        bci:pointsTo ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a DataSegment with a set of Markers."@en ;
        skos:prefLabel       "is referenced by"@en ;
        skos:scopeNote       "Connecting a DataSegment individual with a set of Markers."@en ;
        wdrs:describedby     bci:isReferencedBy.POWDER .

bci:ImpactedProperty  a      owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      sosa:ActuatableProperty ;
        terms:part           "Actuation"^^rdfs:Literal ;
        DCMIType:StillImage  "Actuation.png"@en ;
        dct:modified         "2018-01-15T03:53:00"^^xsd:dateTime ;
        dct:source           "[SSN], [Seydoux2016]"^^rdfs:Literal ;
        dct:title            "ImpactedProperty"@en ;
        owl:disjointWith     bci:Modality ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "[SSN] It represents an actuatable quality (property or characteristic) of an ActuationTarget. An Actuator connects to an ImpactedProperty via the object property ssn:forProperty. [Seydoux2016] Following the Action-Actuator-Effect (AAE) design pattern proposed for the IoT Ontology (IoT-O), this concept captures the definition of ImpactedProperty from the following relation: [ImpactedProperty] ------ (is property of) ------ [FeatureOfInterest]"@en ;
        skos:example         "[SSN] A window actuator (Actuator) acts by (triggers) changing the state between a frame and a window (ActuationTarget). The ability of the window to be opened and closed is its ImpactedProperty."@en ;
        skos:prefLabel       "impacted property"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe any relevant ImpactedProperty classification."@en ;
        wdrs:describedby     bci:ImpactedProperty.POWDER .

bci:Context.ObjectComponent.Event
        a                    owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      DUL:Event , bci:Context.ObjectComponent ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "0"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Action ;
                               owl:onProperty               bci:causes
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:PlayoutInstant.ContextEvent ;
                               owl:onProperty               bci:hasPlayoutInstant
                             ] ;
        terms:part           "Context"^^rdfs:Literal ;
        DCMIType:StillImage  "Activity.png"^^rdfs:Literal , "Context.ObjectComponent.png"^^rdfs:Literal ;
        dct:modified         "2016-05-18T23:45:00"^^xsd:dateTime ;
        dct:source           "[Unity]"^^rdfs:Literal ;
        dct:title            "Context.ObjectComponent.Event"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Captures an Event that triggers a change on the Context.ObjectComponent's state."@en ;
        skos:example         "Some event types from the Gaming domain are: (*) PointerEnter (*) PointerExit (*) PointerDown (*) PointerUp (*) PointerClick (*) Drag (*) Drop (*) Scroll (*) UpdateSelected (*) Select (*) Deselect (*) Move (*) InitializePotentialDrag (*) BeginDrag (*) EndDrag (*) Submit (*) Cancel"@en ;
        skos:prefLabel       "context object component event"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe any Context.ObjectComponent.Event entities. This class hierarchy includes the subclass StimulusEvent."@en ;
        wdrs:describedby     bci:Context.ObjectComponent.Event.POWDER .

bci:observedByEegDevice
        a                    owl:ObjectProperty , owl:FunctionalProperty ;
        rdfs:domain          bci:EegRecord ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:EegDevice ;
        rdfs:subPropertyOf   bci:observedByDevice ;
        terms:part           "EEG"^^rdfs:Literal ;
        DCMIType:StillImage  "EegRecord_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-07-22T02:47:00"^^xsd:dateTime ;
        dct:title            "observedByEegDevice"@en ;
        owl:deprecated       true , "--Concerning EEG, this ontology only defines its related classes. It does not extend or define any specific properties for EEG.-- $ 04:27 AM 2016-07-29 $"^^rdfs:Literal ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects an EegRecord with its correspondent EegDevice. This can be read, as follow: \"An EegRecord is observed by an EegDevice\". This object property is a subproperty of observedByDevice: [Record] ------------ (observedByDevice) ------------ [Device] [EegRecord] ------ (observedByEegDevice) ------ [EegDevice]"@en ;
        skos:editorialNote   "See general remark about: EEG-CONCEPTS"@en ;
        skos:prefLabel       "observed by EEG device"@en ;
        skos:scopeNote       "Connecting an EegRecord individual with its correspondent EegDevice"@en ;
        wdrs:describedby     bci:observedByEegDevice.POWDER .

bci:hasPlayout  a            owl:InverseFunctionalProperty , owl:ObjectProperty ;
        rdfs:domain          [ a            owl:Class ;
                               owl:unionOf  ( bci:Context bci:Session )
                             ] ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:Playout ;
        terms:part           "Context,Session"^^rdfs:Literal ;
        DCMIType:StillImage  "Playout.png"^^rdfs:Literal ;
        dct:modified         "2016-05-18T19:16:00"^^xsd:dateTime ;
        dct:title            "hasPlayout"@en ;
        owl:inverseOf        bci:isPlayoutOf ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a (Context or Session) with its set of Playouts."@en ;
        skos:prefLabel       "has playout record"@en ;
        skos:scopeNote       "Connecting a (Context or Session) with its Playouts."@en ;
        wdrs:describedby     bci:hasPlayout.POWDER .

bci:hasLocator  a            owl:FunctionalProperty , owl:DatatypeProperty ;
        rdfs:domain          [ a            owl:Class ;
                               owl:unionOf  ( bci:AccessMethod bci:Descriptor )
                             ] ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           xsd:anyURI ;
        terms:part           "Descriptor,Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "RecordedData_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:conformsTo       "[Associated data type spec]."@en ;
        dct:modified         "2016-06-02T19:42:00"^^xsd:dateTime ;
        dct:title            "hasLocator"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "An IRI locator to access a Web resource."@en ;
        skos:editorialNote   "A http-schemed IRI has the ability for content-type negotiation; and thus, it can process the media type of the Web resource."@en ;
        skos:prefLabel       "has locator (IRI)"@en ;
        skos:scopeNote       "(*) AccessMethod: access to the Web resource that represents the Data File that storages the Record. (*) Descriptor: external Web resource IRI."@en ;
        wdrs:describedby     bci:hasLocator.POWDER .

bci:involves  a              owl:ObjectProperty ;
        rdfs:domain          sosa:ActuationResult ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:ActuationEffect ;
        terms:part           "Actuation"^^rdfs:Literal ;
        DCMIType:StillImage  "Actuation.png"@en ;
        dct:modified         "2018-01-16T05:43:00"^^xsd:dateTime ;
        dct:source           "[Seydoux2016]"^^rdfs:Literal ;
        dct:title            "involves"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "An ActuationResult involves an event that causes an actuation effect (ActuationEffect) on the ActuationTarget. Following the Action-Actuator-Effect (AAE) design pattern proposed for the IoT Ontology (IoT-O), this concept captures the following definition: [Actuation] ------ (involves) ------ [Effect]"@en ;
        skos:prefLabel       "involves"@en ;
        wdrs:describedby     bci:involves.POWDER .

bci:triggers  a              owl:ObjectProperty ;
        rdfs:domain          sosa:Actuator ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:ActuationEffect ;
        terms:part           "Actuation"^^rdfs:Literal ;
        DCMIType:StillImage  "Actuation.png"@en ;
        dct:modified         "2018-01-16T05:43:00"^^xsd:dateTime ;
        dct:source           "[Seydoux2016]"^^rdfs:Literal ;
        dct:title            "triggers"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "An Actuator triggers an event that causes an actuation effect (ActuationEffect) on the ActuationTarget. Following the Action-Actuator-Effect (AAE) design pattern proposed for the IoT Ontology (IoT-O), this concept captures the following definition: [Actuator] ------ (triggers) ------ [Effect]"@en ;
        skos:prefLabel       "triggers"@en ;
        wdrs:describedby     bci:triggers.POWDER .

bci:AccessMethod  a          owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onDataRange           xsd:anyURI ;
                               owl:onProperty            bci:hasLocator ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        rdfs:subClassOf      [ a                owl:Restriction ;
                               owl:cardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onProperty   bci:hasType
                             ] ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "RecordedData_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:description      "=== ** definition ** \"(a network communication protocol and its parameters)\" (*) The identity scheme of the data access. (*) The security scheme of the protocol. ** scopeNote ** This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe the network communication protocols that BCI applications can use to access and retrieve the RecordedData. This ontology defines some of the aforementioned network communication protocols, commonly used by BCI applications. ** editorialNote ** This ontology does not define in undefined-general-purpose datatype properties to capture the following corresponding definitions: (*) For the identity scheme of the data access: hasIdentity. (*) For the security scheme of the protocol: hasSecurity and hasQoS. ==="@en ;
        dct:modified         "2016-07-06T04:34:00"^^xsd:dateTime ;
        dct:title            "AccessMethod"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "This concept captures any computer network mechanism (network communication protocol) through which the RecordedData can be accessed. An AccessMethod represents any specific standard communication protocol, such as: MQTT, MQTT-SN, HTTP, CoAP, FTP, etc. For the purpose of this ontology, an AccessMethod captures only the following components: (*) Nature of the data access: stream. (*) The locator (address) of the data."@en ;
        skos:editorialNote   "The concept will be merged into the generic abstraction of container under the oneM2M spec, and made compatible with its emerging semantic extension. A container represents a \"data collection\" and, therefore, it's directly related to the RecordedData concept."@en , "The publish/subscribe mechanism is one of the preferred implementations for BCI applications."@en ;
        skos:prefLabel       "BCI data access method"@en ;
        wdrs:describedby     bci:AccessMethod.POWDER .

bci:Modality  a              owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      sosa:ObservableProperty ;
        rdfs:subClassOf      [ a                   owl:Restriction ;
                               owl:onProperty      bci:isModalityOf ;
                               owl:someValuesFrom  bci:Aspect
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "0"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Descriptor ;
                               owl:onProperty               bci:hasDescriptor
                             ] ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onClass               bci:ChannelingSpec ;
                               owl:onProperty            bci:hasChannelingSpec ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "Aspect-and-Modality_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:description      "=== ** scopeNote ** This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe any relevant type of human signals (Modality Signal Type --nature of the data--) analyzed by BCI applications, such as: (*) EEG (Electroencephalogram). (*) ECG (Electrocardiogram). (*) MoCap (Motion Capture). (*) Eye-Gaze (for gaze or eye-tracking). (*) Audio. (*) Video. (*) Hand-Gesture. (*) Keyboard-Hit. (*) Mouse-Click. This ontology does not define all the modalities listed above. ==="@en ;
        dct:modified         "2016-08-20T05:19:00"^^xsd:dateTime ;
        dct:source           "[SSN], [Compton2009]"^^rdfs:Literal ;
        dct:title            "Modality"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "[SSN]: A Modality is a kind of an \"Observable Quality\", i. e., an aspect (the human signals) of an entity (the human body) that is intrinsic to and cannot exist without the entity and is observable by a sensor (Device). In the BCI domain, the Modality defines a certain type of measurement (classification) related to a specific kind of data due to its nature. Literally, Modality means the \"Mode of the data\". The Modality defines, in an intrinsic manner, the operational functionality of any Device based on its related ChannelingSpec information. That is, a specific type of Device operates for a specific type of Modality: the nature of the data sensed. Each Modality must have its own complete and generic ChannelingSpec information."@en ;
        skos:editorialNote   "The following descriptions capture the definition of this concept ([oldSSN: Property] and [Compton2009]) adjusted to this ontology: (*) An observable Quality of human physiological signals. That is, a characteristic of an Aspect (human body's state) that is intrinsic to and cannot exist without the Aspect and is observable by a Device. (*) Devices observe physiological signals (Modality-ies) of Aspects: for example, the EEG signals (Modality) of an emotion (Aspect)."@en , "See general remark about: ASPECT-and-MODALITY"@en , "A Modality has its own specific: (*) Measurement procedures, (*) Applications (each one with relevant attributes), and (*) Stimuli."@en ;
        skos:historyNote     "[ESS 1.0]: (*) This data object describes the name of the different type of modalities recorded in a study. Corresponds to the (/study/summary/recordedModalities/modality/name) node definition. [ESS 2.0]: (*) It contains information about one or more set of recording data parameters (which can apply to multiple Records). (*) Corresponds to the (/study/recordingParameterSets/recordingParameterSet) node definition. (*) Most studies have only a single parameter set, i. e., the same types of data (EEG, Mocap, etc.) are recorded in the same channel ranges, with the same device types and with the same sampling rates. (*) This \"recordings parameter set\" is associated with Records nodes (which represent the \"dataRecording\" nodes)."@en ;
        skos:prefLabel       "recorded modality"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe any relevant type of human signals (Modality Signal Type --nature of the data--) analyzed by BCI applications."@en ;
        wdrs:describedby     bci:Modality.POWDER .

bci:hasActivity  a           owl:ObjectProperty , owl:FunctionalProperty ;
        rdfs:domain          bci:Session ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:Activity ;
        terms:part           "Session"^^rdfs:Literal ;
        DCMIType:StillImage  "Session.png"^^rdfs:Literal ;
        dct:modified         "2016-06-28T02:10:00"^^xsd:dateTime ;
        dct:title            "hasActivity"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a Session with its associated Activity."@en ;
        skos:prefLabel       "has activity"@en ;
        skos:scopeNote       "Connecting a Session individual with its associated Activity."@en ;
        wdrs:describedby     bci:hasActivity.POWDER .

oldssn:hasMeasurementCapability
        a       owl:ObjectProperty .

bci:isProxyFor  a            owl:ObjectProperty ;
        rdfs:domain          bci:StimulusEvent ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:Modality ;
        rdfs:subPropertyOf   ssn:isProxyFor ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "StimulusEvent_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2017-09-14T03:35:00"^^xsd:dateTime ;
        dct:source           "[SSN]"^^rdfs:Literal ;
        dct:title            "isProxyFor"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a StimulusEvent with its associated Modality-ies. This can be read, as follow: \"A StimulusEvent is proxy for a Modality\". This object property is a subproperty of ssn:isProxyFor: [ssn:Stimulus] ------ (ssn:isProxyFor) ------ [sosa:ObservableProperty] [StimulusEvent] ------ (isProxyFor) -------------------- [Modality]"@en ;
        skos:editorialNote   "The following descriptions capture the definition of this relation (4.2.13 Stimuli-Centered, 5.3.1.2.1 Stimuli) adjusted to this ontology: (*) The role of StimulusEvents as a proxy between the Device and the object of sensing (Context.Object). (*) A StimulusEvent may only be usable as proxy for a specific region of an observed Modality."@en ;
        skos:prefLabel       "is proxy for"@en ;
        skos:scopeNote       "Connecting a StimulusEvent with its associated Modality(ies)."@en ;
        wdrs:describedby     bci:isProxyFor.POWDER .

bci:EegDevice  a             owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      bci:Device ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:EegRecord ;
                               owl:onProperty               bci:madeEegRecord
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "0"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:EegNonChannel ;
                               owl:onProperty               bci:hasEegNonChannelData
                             ] ;
        terms:part           "EEG"^^rdfs:Literal ;
        DCMIType:StillImage  "Device_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-08-05T03:51:00"^^xsd:dateTime ;
        dct:title            "EegDevice"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Defines a broader type of an EEG Device, used in BCI applications to collect EEG (Electroencephalography) data."@en ;
        skos:editorialNote   "See general remark about: EEG-CONCEPTS"@en ;
        skos:prefLabel       "EEG device"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe any relevant EegDevices, based on specialized EegModality(ies), that BCI applications may require."@en ;
        wdrs:describedby     bci:EegDevice.POWDER .

bci:hasStimulusEvent  a      owl:ObjectProperty , owl:FunctionalProperty ;
        rdfs:domain          bci:StimulusTag ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:StimulusEvent ;
        terms:part           "AnnotationTag"^^rdfs:Literal ;
        DCMIType:StillImage  "Marker_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-05-22T18:51:00"^^xsd:dateTime ;
        dct:title            "hasStimulusEvent"@en ;
        owl:inverseOf        bci:isStimulusEventOf ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "A StimulusTag is associated with (has) a StimulusEvent."@en ;
        skos:prefLabel       "has stimulus event"@en ;
        skos:scopeNote       "Connecting a StimulusTag with its correspondent StimulusEvent."@en ;
        wdrs:describedby     bci:hasStimulusEvent.POWDER .

dct:rights  a   owl:AnnotationProperty .

bci:Subject  a               owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      dbp:Person , DUL:NaturalPerson ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "0"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Interaction ;
                               owl:onProperty               bci:isSubjectOf
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "0"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Descriptor ;
                               owl:onProperty               bci:hasDescriptor
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Record ;
                               owl:onProperty               bci:hasRecord
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Session ;
                               owl:onProperty               bci:hasSession
                             ] ;
        terms:part           "Subject"^^rdfs:Literal ;
        DCMIType:StillImage  "Subject.png"^^rdfs:Literal ;
        dct:modified         "2017-11-30T02:49:00"^^xsd:dateTime ;
        dct:source           "[ESS], [XDF]"^^rdfs:Literal ;
        dct:title            "Subject"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "A specific physical (natural) person (probably anonymous but possessing unique identity) with certain attributes on which the Sessions are recorded (from which the data is observed: Record). \"Subject\" comes from the common terminology used in BCI experiments when referring to a specific person. The concept is based on the notion of Electronic Patient/Medical Record, such as the HL7 Record. An information object of this class, describes the Medical and Physiological \"Condition\" of a Subject. Therefore, it may have multiple Descriptors associated (such as HL7 Records or specific XML vocabularies from the industry). This ontology does not define any specific set of attributes associated to a Subject. BCI applications con extend this concept according to their information needs and system requirements."@en ;
        skos:editorialNote   "The Subject is the point of reference (focus) of the data monitoring and data analysis, from which BCI applications collect Measurement Recordings. Hence, the name Subject instead of Person."@en ;
        skos:example         "[ESS] and [XDF] define some useful data type properties (attributes) associated to a Subject. Some examples of these attributes are: (*) Gender: (*) Defined as an enumerated value = { Female, Male, ... }. (*) It can be derived as a subproperty extended from the (dbp:Person).sex property definition. (*) Year of birth (YOB): (*) Defined as a positive integer greater or equal than 1900. (*) It can be derived as a subproperty extended from the dbp:Person definition. (*) Handedness: (*) Defined as an enumerated value = { Ambidextrous, Left, N/A, Right }. (*) Subject's dominantly used hand. Related to medical record. (*) Hearing: (*) Defined as an enumerated value = { CorrectedToNormal, Impaired, Normal }. (*) Subject's hearing condition. Related to medical record. (*) Vision: (*) Defined as an enumerated value = { CorrectedToNormal, Impaired, Normal }. (*) Subject's vision condition. Related to medical record."@en ;
        skos:prefLabel       "person"@en ;
        wdrs:describedby     bci:Subject.POWDER .

bci:ChannelingSpec  a        owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      bci:Descriptor ;
        terms:part           "Descriptor,Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "Descriptor_(SOSA-SSN).png"^^rdfs:Literal , "Aspect-and-Modality_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-08-08T23:54:00"^^xsd:dateTime ;
        dct:title            "ChannelingSpec"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Each Modality defines its own specific channeling schema information: a complete, generic and descriptive set of all possible Channels and their extended metadata attributes that defines the data structure model and template of the Modality. A ChannelingSpec captures the complete description of the channeling schema information, in a form of an external document specification (outside the metadata repository). Similar to the DeviceSpec concept, a ChannelingSpec is a specialized Descriptor."@en ;
        skos:example         "A channeling schema information related to all kind of EegRecords would define around 32 fields (i.e., EegChannels) to describe a complete data structure regarding EEG data. The full specification for this channeling schema information would be associated with the generic EegModality concept. A proper name for this spec would be EegChannelingSpec."@en ;
        skos:prefLabel       "channeling schema spec"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe any relevant type of a ChannelingSpec to capture the external information that defines the complete channeling schema information of a Modality."@en ;
        wdrs:describedby     bci:ChannelingSpec.POWDER .

dct:title  a    owl:AnnotationProperty .

bci:hasRecord  a             owl:ObjectProperty , owl:InverseFunctionalProperty ;
        rdfs:domain          [ a            owl:Class ;
                               owl:unionOf  ( bci:Session bci:Subject )
                             ] ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:Record ;
        terms:part           "Session,Subject"^^rdfs:Literal ;
        DCMIType:StillImage  "Record_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-06-24T00:07:00"^^xsd:dateTime ;
        dct:title            "hasRecord"@en ;
        owl:inverseOf        bci:isRecordOf ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a (Subject or Session) with a set of Records that are associated with it."@en ;
        skos:prefLabel       "has BCI record"@en ;
        skos:scopeNote       "Connecting a (Subject or Session) with its related set of Records"@en ;
        wdrs:describedby     bci:hasRecord.POWDER .

skos:altLabel  a  owl:AnnotationProperty .

bci:hasIntensityLevel
        a                    owl:FunctionalProperty , owl:DatatypeProperty ;
        rdfs:domain          bci:Aspect ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           xsd:positiveInteger ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "Aspect-and-Modality_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:conformsTo       "[Associated data type spec]. Its Domain value is all the positive integers: { 1, 2, 3, ... }"@en ;
        dct:modified         "2016-05-24T00:21:00"^^xsd:dateTime ;
        dct:title            "hasIntensityLevel"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Indicates the level of intensity related to its concept."@en ;
        skos:editorialNote   "Aspect: the measurement of the intensity depends on the nature of the Aspect and purpose of the BCI application."@en ;
        skos:prefLabel       "has intensity level"@en ;
        wdrs:describedby     bci:hasIntensityLevel.POWDER .

bci:DataFormat  a            owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "0"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Descriptor ;
                               owl:onProperty               bci:hasDescriptor
                             ] ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "RecordedData_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-08-17T23:58:00"^^xsd:dateTime ;
        dct:title            "DataFormat"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "This concept describes any Data Format that BCI applications use to represent and store the RecordedData. A DataFormat represents any specific standard data format used in one of the following ways: (*) Signal (electrical engineering). (*) File format. (*) Content format."@en ;
        skos:editorialNote   "A DataFormat should properly define its encoding scheme."@en ;
        skos:prefLabel       "BCI data format"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe the data formats that BCI applications can use to represent and store the RecordedData. This ontology defines some common data formats used in the BCI domain."@en ;
        wdrs:describedby     bci:DataFormat.POWDER .

bci:Collection  a            owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Session ;
                               owl:onProperty               bci:hasSituation
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "0"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Interaction ;
                               owl:onProperty               bci:hasSituation
                             ] ;
        rdfs:subClassOf      [ a                   owl:Restriction ;
                               owl:onProperty      bci:hasDescriptor ;
                               owl:someValuesFrom  bci:Descriptor
                             ] ;
        rdfs:subClassOf      [ a                owl:Restriction ;
                               owl:cardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onProperty   bci:hasTitle
                             ] ;
        terms:part           "Session"^^rdfs:Literal ;
        DCMIType:StillImage  "Session.png"^^rdfs:Literal ;
        dct:modified         "2016-06-28T04:57:00"^^xsd:dateTime ;
        dct:source           "[ESS]"^^rdfs:Literal ;
        dct:title            "Collection"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Groups a collection of related Sessions and/or Interactions, which may be associated with different Activity(ies)."@en ;
        skos:editorialNote   "(*) Collection generalizes the concept of Study as defined in [ESS]: a set of data collection efforts to answer one or few related scientific questions. (*) This concept defines a longitudinal (temporal) collection of Sessions."@en ;
        skos:prefLabel       "collection"@en ;
        wdrs:describedby     bci:Collection.POWDER .

bci:PlayoutInstant.ContextEvent
        a                    owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      bci:PlayoutInstant ;
        terms:part           "Context"^^rdfs:Literal ;
        DCMIType:StillImage  "PlayoutInstant.png"^^rdfs:Literal ;
        dct:modified         "2016-05-19T17:27:00"^^xsd:dateTime ;
        dct:title            "PlayoutInstant.ContextEvent"@en ;
        owl:disjointWith     bci:PlayoutInstant.SubjectAction ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Captures a relevant entry log in a Playout of a Context Event issued by a Context.ObjectComponent.Event instance during a Session."@en ;
        skos:prefLabel       "playout instant: context event type"@en ;
        skos:scopeNote       "Events (Context.ObjectComponent.Event) issued in a Context during a Session."@en ;
        wdrs:describedby     bci:PlayoutInstant.ContextEvent.POWDER .

[ a            owl:AllDisjointClasses ;
  owl:members  ( bci:ChannelingSpec bci:DeviceSpec bci:ActuatorSpec bci:RecordSpec bci:SubjectState )
] .

skos:example  a  owl:AnnotationProperty .

bci:hasActuation  a          owl:InverseFunctionalProperty , owl:ObjectProperty ;
        rdfs:domain          bci:Session ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:Actuation ;
        terms:part           "Session,Actuation"^^rdfs:Literal ;
        DCMIType:StillImage  "Actuation.png"^^rdfs:Literal ;
        dct:modified         "2017-11-01T19:07:00"^^xsd:dateTime ;
        dct:title            "hasActuation"@en ;
        owl:inverseOf        bci:isActuationOf ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a Session with a set of Actuations that are associated with it."@en ;
        skos:prefLabel       "has actuation"@en ;
        skos:scopeNote       "Connecting a Session with its related set of Actuations"@en ;
        wdrs:describedby     bci:hasActuation.POWDER .

bci:includesEvent  a         owl:ObjectProperty ;
        rdfs:domain          bci:Record ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:StimulusEvent ;
        rdfs:subPropertyOf   DUL:includesEvent ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "StimulusEvent_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2017-09-21T16:48:00"^^xsd:dateTime ;
        dct:source           "[SSN]"^^rdfs:Literal ;
        dct:title            "includesEvent"@en ;
        owl:deprecated       true , "--The usage of the DUL:includesEvent property was deprecated in SOSA/SSN. Therefore, it will be also deprecated in BCI-O. Instead, the property ssn:wasOriginatedBy (see ssn:wasOriginatedBy) will be used.-- $ 04:47 PM 2017-09-21 $"^^rdfs:Literal ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a Record with its correspondent StimulusEvent set. This can be read, as follow: \"A Record includes events StimulusEvent\". This object property is a subproperty of DUL:includesEvent: [sosa:Observation] ------ (DUL:includesEvent) ------ [ssn:Stimulus] [Record] ------------ (includesEvent) ------ [StimulusEvent] [SSN] A sosa:Observation has a DUL:includesEvent property who may be a ssn:Stimulus."@en ;
        skos:prefLabel       "includes stimulus event"@en ;
        skos:scopeNote       "Connecting a Record individual with its correspondent StimulusEvent set."@en ;
        wdrs:describedby     bci:includesEvent.POWDER .

bci:Actuation  a             owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      sosa:Actuation ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onClass               bci:Session ;
                               owl:onProperty            bci:isActuationOf ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        terms:part           "Actuation"^^rdfs:Literal ;
        DCMIType:StillImage  "Actuation.png"@en ;
        dct:modified         "2017-10-19T01:19:00"^^xsd:dateTime ;
        dct:source           "[SSN], [Seydoux2016]"^^rdfs:Literal ;
        dct:title            "Actuation"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "[SSN] Carries out an (actuation) procedure to change the state of the world using an Actuator. The relationships between Actuation and Actuator are the ones given by [SSN]: (*) sosa:madeActuation. (*) sosa:madeByActuator."@en ;
        skos:editorialNote   "See general remark about: PROCEDURES"@en ;
        skos:prefLabel       "actuation"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe any relevant Actuation classification that Subjects can engage on in Sessions."@en ;
        wdrs:describedby     bci:Actuation.POWDER .

oldssn:observedProperty
        a       owl:ObjectProperty .

bci:causes  a                owl:ObjectProperty ;
        rdfs:domain          bci:Context.ObjectComponent.Event ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:Action ;
        terms:part           "Context"^^rdfs:Literal ;
        DCMIType:StillImage  "Activity.png"^^rdfs:Literal ;
        dct:modified         "2016-06-28T00:44:00"^^xsd:dateTime ;
        dct:title            "causes"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "A Context.ObjectComponent.Event may influence an Activity, by causing (triggering) a set of Actions."@en ;
        skos:editorialNote   "The relationship between an Activity and a Context is throughout a Session, which connects also the Subject (who performs the Activity while interacting with the Context)."@en ;
        skos:prefLabel       "causes"@en ;
        skos:scopeNote       "Connecting a Context.ObjectComponent.Event individual with a correspondent Action set."@en ;
        wdrs:describedby     bci:causes.POWDER .

bci:hasMQTT.Topic  a         owl:FunctionalProperty , owl:DatatypeProperty ;
        rdfs:domain          bci:AccessMethod.MQTT ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           rdfs:Literal ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "RecordedData_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:conformsTo       "[Associated data type spec]."@en , "A Topic conforms to the following definitions in the latest OASIS MQTT specification: MQTT Version 3.1.1 Plus Errata 01(OASIS Standard Incorporating Approved Errata 01 10 December 2015) -- (*) 3. MQTT Control Packets / 3.3 PUBLISH -- Publish message -- (3.3.2.1. Topic Name). (*) 3. MQTT Control Packets / 3.8 SUBSCRIBE -- Subscribe to topics -- (3.8.3 Payload)."@en ;
        dct:format           "The Topic MUST be a UTF-8 encoded string as defined in Section 1.5.3 of the latest OASIS MQTT specification: MQTT Version 3.1.1 Plus Errata 01 (OASIS Standard Incorporating Approved Errata 01 10 December 2015) -- 1. Introduction -- (1.5 Data representations)."@en ;
        dct:modified         "2016-07-05T04:35:00"^^xsd:dateTime ;
        dct:title            "hasMQTT.Topic"@en ;
        owl:deprecated       "--This ontology should be agnostic to the data access-- $ 04:35 AM 2016-07-05 $"^^rdfs:Literal , true ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Describes the Topic (name or filter) parameter in an AccessMethod.MQTT connection. This parameter identifies either: (*) The Topic Name (for the PUBLISH message), which identifies the information channel to which payload data is published. (*) The Topic Filter (for the SUBSCRIBE message), which corresponds to the Clients interest in one or more Topics (each subscription registers a Clients interest in a Server).The payload of a SUBSCRIBE packet contains at least one Topic Filter."@en ;
        skos:prefLabel       "has MQTT topic"@en ;
        skos:scopeNote       "The usage of this parameter (for either subscribe to specific topics) depends on the purpose and implementation of the BCI application."@en ;
        wdrs:describedby     bci:hasMQTT.Topic.POWDER .

bci:Context.ObjectComponent
        a                    owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      [ a            owl:Class ;
                               owl:unionOf  ( DUL:Event DUL:Object )
                             ] ;
        rdfs:subClassOf      [ a                   owl:Restriction ;
                               owl:maxCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onProperty      bci:hasTitle
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "0"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Context.ObjectComponent ;
                               owl:onProperty               bci:hasObjectComponent
                             ] ;
        terms:part           "Context"^^rdfs:Literal ;
        DCMIType:StillImage  "Context.ObjectComponent.png"^^rdfs:Literal ;
        dct:modified         "2016-08-22T01:35:00"^^xsd:dateTime ;
        dct:source           "[Unity]"^^rdfs:Literal ;
        dct:title            "Context.ObjectComponent"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Captures the architectural description of a stand-alone entity (\"logical\" or \"physical\") that structurally forms part of a Context.Object.A Context.ObjectComponent can be compose of Context.ObjectComponents."@en ;
        skos:example         "(*) Audio: A Context.ObjectComponent with audio capabilities. (*) Camera: A Context.ObjectComponent that defines a specific visual perspective for the Subject. (*) Effects: A Context.ObjectComponent that can define specific visual effects. (*) Layout: A Context.ObjectComponent that can define specific layout configurations. (*) Physics: A Context.ObjectComponent that can define specific behaviour based on Physics models. (*) Transform: A Context.ObjectComponent that defines the logic of how an entity can move. (*) Protocol or Procedure: some BCI applications may need to define a set of Context.Objects that the Subject needs to pay attention to.A specific type of a Transform could be defined to represent the logical behaviour or movement of an entity based on an algorithm. (*) Video: A Context.ObjectComponent with video recording capabilities."@en ;
        skos:prefLabel       "context object component"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe the entities that can form any Context.Object."@en ;
        wdrs:describedby     bci:Context.ObjectComponent.POWDER .

oldssn:observes  a  owl:ObjectProperty .

bci:ActuationTarget  a       owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      sosa:FeatureOfInterest , bci:Context.Object ;
        terms:part           "Actuation,Context"^^rdfs:Literal ;
        DCMIType:StillImage  "Actuation.png"@en ;
        dct:modified         "2017-11-02T00:35:00"^^xsd:dateTime ;
        dct:source           "[SSN], [Seydoux2016]"^^rdfs:Literal ;
        dct:title            "ActuationTarget"@en ;
        owl:disjointWith     bci:Aspect ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "The following concepts encompass its modeling depiction: (*) [SSN] A sosa:FeatureOfInterest: the thing whose property is being manipulated by an Actuator. (*) [SSN] Related from an sosa:Actuation via the property sosa:hasFeatureOfInterest: a relation between an Actuation and the entity whose property was modified (ActuationTarget). (*) A Context.Object: a thing (object) in the interaction Context of the Session. [Seydoux2016] Following the Action-Actuator-Effect (AAE) design pattern proposed for the IoT Ontology (IoT-O), this concept captures the definition of FeatureOfInterest from the following relation: [ImpactedProperty] ------ (is property of) ------ [FeatureOfInterest]"@en ;
        skos:example         "[SSN] A window is an ActuationTarget (sosa:FeatureOfInterest) for an automatic window control Actuator."@en ;
        skos:prefLabel       "actuation target"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe any relevant ActuationTarget classification that Subjects interacts with (changes its state) in Sessions."@en ;
        wdrs:describedby     bci:ActuationTarget.POWDER .

skos:definition  a  owl:AnnotationProperty .

bci:hasRecordChannelingSpec
        a                    owl:ObjectProperty , owl:FunctionalProperty ;
        rdfs:domain          bci:Record ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:RecordChannelingSpec ;
        rdfs:subPropertyOf   bci:hasDescriptor ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "Record_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-07-18T03:24:00"^^xsd:dateTime ;
        dct:title            "hasRecordChannelingSpec"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a Record with its related RecordChannelingSpec."@en ;
        skos:prefLabel       "has record channeling schema spec"@en ;
        skos:scopeNote       "A hasDescriptor sub property for connecting a Record with its related RecordChannelingSpec."@en ;
        wdrs:describedby     bci:hasRecordChannelingSpec.POWDER .

bci:EegNonChannel  a         owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      bci:NonChannel ;
        terms:part           "EEG"^^rdfs:Literal ;
        DCMIType:StillImage  "MeasurementCapability_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-08-10T06:03:00"^^xsd:dateTime ;
        dct:title            "EegNonChannel"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "The NonChannel of a specific EegDevice."@en ;
        skos:editorialNote   "See general remark about: EEG-CONCEPTS"@en ;
        skos:prefLabel       "non-channeling EEG data component (other EEG measurement capability)"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe any relevant NonChannels specific for an EegDevice."@en ;
        wdrs:describedby     bci:EegNonChannel.POWDER .

[ a            owl:AllDisjointProperties ;
  owl:members  ( bci:hasConfidence bci:hasDateTime bci:hasEndChannel bci:hasEndTime bci:hasIntensityLevel bci:hasLabel bci:hasLocator bci:hasMQTT.Broker bci:hasMQTT.ID bci:hasMQTT.Topic bci:hasModelIRI bci:hasNumberOfChannels bci:hasOffset bci:hasOrdinalPosition bci:hasSampleCount bci:hasSamplingRate bci:hasStartChannel bci:hasStartTime bci:hasState bci:hasTimeStamp bci:hasTitle bci:hasType )
] .

dct:format  a   owl:AnnotationProperty .

vann:preferredNamespaceUri
        a       owl:AnnotationProperty .

bci:hasMeasurementProperty
        a                    owl:ObjectProperty ;
        rdfs:domain          bci:Record ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           ssn-system:SystemProperty ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "Record_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-08-30T23:26:00"^^xsd:dateTime ;
        dct:title            "hasMeasurementProperty"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a Record with a set of ssn-system:SystemProperty-ies (see ssn-system:SystemProperty). Through this relationship, BCI applications may extend the relevant metadata set related to the Record concept."@en ;
        skos:prefLabel       "has SSN system property"@en ;
        skos:scopeNote       "Connecting a Record with a ssn-system:SystemProperty set."@en ;
        wdrs:describedby     bci:hasMeasurementProperty.POWDER .

bci:observedModality  a      owl:FunctionalProperty , owl:ObjectProperty ;
        rdfs:domain          bci:Record ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:Modality ;
        rdfs:subPropertyOf   sosa:observedProperty ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "Record_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-09-06T05:10:00"^^xsd:dateTime ;
        dct:source           "[SSN], [ESS]"^^rdfs:Literal ;
        dct:title            "observedModality"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a Record with its correspondent Modality. This can be read, as follow: \"A Record observes a Modality\". This object property is a subproperty of sosa:observedProperty: [sosa:Observation] ------ (sosa:observedProperty) ------ [sosa:ObservableProperty] [Record] -------------- (observedModality) -------------------- [Modality]"@en ;
        skos:historyNote     "[ESS 1.0]: A record (bci:Record) has a specific (single) defined modality (bci:Modality). [ESS 2.0]: A record (bci:Session) has a specific defined RecordedParameterSet, which groups various (multiple) RecordedModality (Modality-ies). Therefore, a record (bci:Session) can be associated with multiple RecordedModality (bci:Modality) definitions."@en ;
        skos:prefLabel       "observed modality"@en ;
        skos:scopeNote       "Connecting a Record individual with its correspondent Modality"@en ;
        wdrs:describedby     bci:observedModality.POWDER .

oldssn:ObservationValue
        a       owl:Class .

ssn-system:hasSystemCapability
        a       owl:ObjectProperty .

oldssn:featureOfInterest
        a       owl:ObjectProperty .

bci:PlayoutInstant  a        owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onDataRange           xsd:dateTimeStamp ;
                               owl:onProperty            bci:hasTimeStamp ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        terms:part           "Context"^^rdfs:Literal ;
        DCMIType:StillImage  "PlayoutInstant.png"^^rdfs:Literal ;
        dct:modified         "2016-05-18T23:03:00"^^xsd:dateTime ;
        dct:title            "PlayoutInstant"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Captures any relevant entry log in a Playout. Two specific type of instances are defined: (*) PlayoutInstant.SubjectAction. (*) PlayoutInstant.ContextEvent."@en ;
        skos:prefLabel       "playout instant"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe the types of log entries in a Playout. Two important types of log entries are defined in this ontology."@en , "Describing entities that form any log entry in a Playout."@en ;
        wdrs:describedby     bci:PlayoutInstant.POWDER .

DUL:includesEvent  a  owl:ObjectProperty .

bci:hasModel  a              owl:ObjectProperty , owl:FunctionalProperty ;
        rdfs:domain          [ a            owl:Class ;
                               owl:unionOf  ( bci:FeatureParameter bci:ResponseTag )
                             ] ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:Model ;
        terms:part           "AnnotationTag"^^rdfs:Literal ;
        DCMIType:StillImage  "Model_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2018-01-02T02:37:00"^^xsd:dateTime ;
        dct:title            "hasModel"@en ;
        owl:inverseOf        bci:isModelOf ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "A ResponseTag or FeatureParameter is associated with (has) a Model."@en ;
        skos:prefLabel       "has model"@en ;
        skos:scopeNote       "Connecting a ResponseTag or FeatureParameter with its correspondent Model."@en ;
        wdrs:describedby     bci:hasModel.POWDER .

bci:hasDataBlock  a          owl:ObjectProperty ;
        rdfs:domain          [ a            owl:Class ;
                               owl:unionOf  ( bci:DataSegment bci:RecordedData )
                             ] ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:DataBlock ;
        terms:part           "Results,AnnotationTag"^^rdfs:Literal ;
        DCMIType:StillImage  "DataSegment.png"^^rdfs:Literal ;
        dct:modified         "2018-01-17T05:39:44"^^xsd:dateTime ;
        dct:title            "hasDataBlock"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a (RecordedData or DataSegment) with its correspondent DataBlock set."@en ;
        skos:prefLabel       "has data block set"@en ;
        skos:scopeNote       "Connecting a (RecordedData or DataSegment) individual with its correspondent DataBlock set."@en ;
        wdrs:describedby     bci:hasDataBlock.POWDER .

bci:hasObject  a             owl:ObjectProperty ;
        rdfs:domain          [ a            owl:Class ;
                               owl:unionOf  ( bci:Context.Object bci:Context.Scene )
                             ] ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:Context.Object ;
        terms:part           "Context"^^rdfs:Literal ;
        DCMIType:StillImage  "Context.Object.png"^^rdfs:Literal ;
        dct:modified         "2016-05-16T21:27:00"^^xsd:dateTime ;
        dct:source           "[Unity]"^^rdfs:Literal ;
        dct:title            "hasObject"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a (Context.Scene or Context.Object) with the set of Context.Objects that comprises its internal structure."@en ;
        skos:prefLabel       "has object"@en ;
        skos:scopeNote       "Connecting a (Context.Scene or Context.Object) with its Context.Objects"@en ;
        wdrs:describedby     bci:hasObject.POWDER .

bci:hasLocation  a          owl:ObjectProperty ;
        rdfs:domain         bci:Context ;
        rdfs:isDefinedBy    bci: ;
        rdfs:range          owl:Thing ;
        rdfs:subPropertyOf  DUL:hasLocation ;
        terms:part          "Context"^^rdfs:Literal ;
        dct:modified        "2016-08-14T06:22:00"^^xsd:dateTime ;
        dct:title           "hasLocation"@en ;
        owl:deprecated      true , "--This ontology will not define a \"location\" concept of a Context. BCI applications may extend its own ontology to include this definition if necessary.-- $ 06:26 AM 2016-08-14 $"^^rdfs:Literal ;
        skos:changeNote     "Status: *STABLE*"@en ;
        skos:definition     "Connects a Context with an entity that represents or describes its location."@en ;
        skos:prefLabel      "has location"@en ;
        skos:scopeNote      "Connecting a Context with an entity that represents or describes its location."@en ;
        wdrs:describedby    bci:hasLocation.POWDER .

bci:DataBlock  a             owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      DUL:InformationObject ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onDataRange           xsd:positiveInteger ;
                               owl:onProperty            bci:hasOrdinalPosition ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:maxQualifiedCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:DataBlock ;
                               owl:onProperty               bci:hasPrevious
                             ] ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onDataRange           xsd:dateTimeStamp ;
                               owl:onProperty            bci:hasTimeStamp ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onDataRange           xsd:long ;
                               owl:onProperty            bci:hasOffset ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:maxQualifiedCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:DataBlock ;
                               owl:onProperty               bci:hasNext
                             ] ;
        terms:part           "Results"^^rdfs:Literal ;
        DCMIType:StillImage  "DataBlock_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:description      "=== ** previous definition of isValueOf ** <rdfs:subClassOf> <owl:Restriction> [ [1] [ ] ] ==="@en ;
        dct:modified         "2018-01-17T05:25:00"^^xsd:dateTime ;
        dct:source           "[oldSSN], [SSN]"^^rdfs:Literal ;
        dct:title            "DataBlock"@en ;
        owl:disjointWith     bci:Descriptor ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "A DataBlock represents the basic/atomic physical data unit value of a RecordedData. Hence and following the previous definition in [oldSSN], a RecordedData [has as for Value] a non-empty sequence (with not allowed repetitions) of DataBlocks. In the BCI domain: (*) A RecordedData is compose of a non-empty sequence (with not allowed repetitions) of DataBlocks. (*) A DataBlock is considered a logical data entity). (*) A DataBlock is related to another DataBlock based on its temporality: occurrence in its sequence. Therefore, a DataBlock may be sequentially linked to a following and a previous DataBlocks. (*) All the sequentially linked DataBlocks compose the value of a RecordedData. (*) The mechanism to access a DataBlock is the following: (*) First, one retrieves the locators of the AccessMethods associated to desired RecordedData. With this, one can have the access to the \"data file\". (*) Then, one can derived the correspondent DataBlocks locators, using the positional attributes: ordinal position, offset or timestamp."@en ;
        skos:editorialNote   "Depending on its implementation nature, a BCI application may choose to use any (or both) of the positional attributes: (*) hasTimeStamp. (*) hasOffset."@en , "\"In mathematics, a sequence is an ordered collection of objects in which repetitions are allowed. (...) Unlike a set, order matters, and exactly the same elements can appear multiple times at different positions in the sequence\". Reference: [Wikipedia: Sequence] For this specific concept, a sequence of DataBlocks does not allow repetitions."@en , "See general remark about: 1_MAPPINGS-TO-SOSA-SSN"@en ;
        skos:prefLabel       "BCI data block"@en ;
        wdrs:describedby     bci:DataBlock.POWDER .

bci:extendsChannelingSpec
        a                    owl:FunctionalProperty , owl:ObjectProperty ;
        rdfs:domain          bci:DeviceChannelingSpec ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:ChannelingSpec ;
        rdfs:subPropertyOf   bci:hasDescriptor ;
        terms:part           "Descriptor,Sensors"^^rdfs:Literal ;
        DCMIType:StillImage  "Aspect-and-Modality_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-07-29T03:18:00"^^xsd:dateTime ;
        dct:title            "extendsChannelingSpec"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a DeviceChannelingSpec with its related ChannelingSpec. This relation states that a DeviceChannelingSpec individual extends its related ChannelingSpec from which was derivated."@en ;
        skos:prefLabel       "extends its modality channeling schema spec"@en ;
        skos:scopeNote       "A hasDescriptor sub property that connects a DeviceChannelingSpec with its related ChannelingSpec."@en ;
        wdrs:describedby     bci:extendsChannelingSpec.POWDER .

bci:hasScene  a              owl:ObjectProperty ;
        rdfs:domain          [ a            owl:Class ;
                               owl:unionOf  ( bci:Context bci:Context.Scene )
                             ] ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:Context.Scene ;
        terms:part           "Context"^^rdfs:Literal ;
        DCMIType:StillImage  "Context.Scene.png"^^rdfs:Literal ;
        dct:modified         "2016-04-14T01:06:00"^^xsd:dateTime ;
        dct:title            "hasScene"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a (Context or Context.Scene) with its Context.Scenes."@en ;
        skos:prefLabel       "has scene"@en ;
        skos:scopeNote       "Connecting a (Context or Context.Scene) with its Context.Scenes"@en ;
        wdrs:describedby     bci:hasScene.POWDER .

ssn-system:SystemProperty
        a       owl:Class .

[ a            owl:AllDisjointProperties ;
  owl:members  ( bci:analizes bci:aspectOfInterest bci:causes bci:changes bci:consumesInputFrom bci:detects bci:executes bci:extendsChannelingSpec bci:extendsDeviceChannelingSpec bci:forModality bci:hasAccessMethod bci:hasAction bci:hasActivity bci:hasActuation bci:hasActuatorSpec bci:hasChannelData bci:hasChannelingSpec bci:hasDataBlock bci:hasDataFormat bci:hasDeviceChannelingSpec bci:hasDeviceSpec bci:hasFeatureParameter bci:hasLocation bci:hasMeasurementProperty bci:hasModality bci:hasModel bci:hasNext bci:hasNonChannelData bci:hasObject bci:hasObjectComponent bci:hasPlayout bci:hasPlayoutInstant bci:hasPrevious bci:hasRecord bci:hasRecordChannelingSpec bci:hasRecordSpec bci:hasRole bci:hasScene bci:hasSession bci:hasSituation bci:hasStimulusEvent bci:hasSubject bci:hasSubjectState bci:hasValue bci:includesEvent bci:involves bci:isActuationOf bci:isChannelDataOf bci:isExecutedBy bci:isInputFor bci:isModalityOf bci:isModelOf bci:isObservationResultOf bci:isPlayoutInstantOf bci:isPlayoutOf bci:isProxyFor bci:isRecordOf bci:isReferencedBy bci:isSessionOf bci:isSituationOf bci:isStimulusEventOf bci:isSubjectOf bci:isValueOf bci:madeRecord bci:observationResult bci:observedByDevice bci:observedModality bci:ofAspect bci:pointsTo bci:triggers )
] .

dct:identifier  a  owl:AnnotationProperty .

bci:Marker  a                owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onClass               bci:DataSegment ;
                               owl:onProperty            bci:pointsTo ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        rdfs:subClassOf      [ a                   owl:Restriction ;
                               owl:maxCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onProperty      bci:hasLabel
                             ] ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onDataRange           xsd:dateTimeStamp ;
                               owl:onProperty            bci:hasTimeStamp ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        terms:part           "AnnotationTag"^^rdfs:Literal ;
        DCMIType:StillImage  "Marker_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-05-25T23:10:00"^^xsd:dateTime ;
        dct:title            "Marker"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Corresponds to the \"entry points\" of the annotation tags of the data."@en ;
        skos:prefLabel       "annotation tag (or data segment pointer)"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe the type of Markers (or Annotation Tags) that define \"entry points\" in DataSegments. This ontology defines two types of Markers: the ResponseTag and the StimulusTag."@en ;
        wdrs:describedby     bci:Marker.POWDER .

bci:isSituationOf  a      owl:ObjectProperty ;
        rdfs:domain       [ a            owl:Class ;
                            owl:unionOf  ( bci:Interaction bci:Session )
                          ] ;
        rdfs:isDefinedBy  bci: ;
        rdfs:range        bci:Collection ;
        terms:part        "Session,Subject"^^rdfs:Literal ;
        dct:modified      "2016-06-28T04:46:00"^^xsd:dateTime ;
        dct:title         "isSituationOf"@en ;
        skos:changeNote   "Status: *STABLE*"@en ;
        skos:definition   "Connects a (Session set and/or an Interaction set) that are associated with a Collection."@en ;
        skos:prefLabel    "is situation of"@en ;
        skos:scopeNote    "Connecting a (Session set and/or an Interaction set) with its related Collection."@en ;
        wdrs:describedby  bci:isSituationOf.POWDER .

skos:prefLabel  a  owl:AnnotationProperty .

bci:hasAction  a             owl:ObjectProperty ;
        rdfs:domain          bci:Activity ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:Action ;
        terms:part           "Session,Subject"^^rdfs:Literal ;
        DCMIType:StillImage  "Activity.png"^^rdfs:Literal ;
        dct:modified         "2016-06-24T18:38:00"^^xsd:dateTime ;
        dct:title            "hasAction"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects an Activity with its correspondent Action set."@en ;
        skos:prefLabel       "has action"@en ;
        skos:scopeNote       "Connecting an Activity individual with its correspondent Action set."@en ;
        wdrs:describedby     bci:hasAction.POWDER .

oldssn:SensorDataSheet
        a       owl:Class .

bci:RecordSpec  a            owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      bci:Descriptor ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "0"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:RecordSpec ;
                               owl:onProperty               bci:hasRecordSpec
                             ] ;
        terms:part           "Descriptor,Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "Descriptor_(SOSA-SSN).png"^^rdfs:Literal , "Record_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-07-19T03:23:00"^^xsd:dateTime ;
        dct:source           "[XDF], [ESS]"^^rdfs:Literal ;
        dct:title            "RecordSpec"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "A RecordSpec is an information object that records (describes) specific properties (such as: specs of assistant materials, ambience settings, tools, etc.) regarding how a Record was made. Similarly to DeviceSpec, the structure of RecordSpec has been modeled as a composite object so that it can be composed as a set of RecordSpecs to describe specific parts on how a Record was made. In this way, a RecordSpec is considered as a bag of general, extended and descriptive properties about the Record settings. A RecordSpec is a specialized Descriptor. RecordSpecs can be used to record any other descriptive and extended information related to any settings or conditions on how the Record was made."@en ;
        skos:editorialNote   "(*) The channeling schema of a Record is defined as an independent component from the RecordSpec. A Record's channeling schema (RecordChannelingSchema) is a subset of the DeviceChannelingSchema defined for its correspondent Device. (*) This ontology does not define any information object in particular of a RecordSpec."@en ;
        skos:example         "Some BCI applications based on [XDF], find important to keep information regarding what assistant materials (hardware) and how they were used when the Record was made. Hence, a BCI application could define a classification for different type of specifications, such as: (*) Hardware specs for EegRecords: (*) Coupling (source [XDF]): type of coupling used (e.g. Capacitive, Dry, Gel, Saline). (*) Surface (source [XDF]): type of the contact surface (e.g. Bristle, Pad, Pins, Plate)."@en ;
        skos:prefLabel       "record specification"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe specific types of RecordSpec."@en ;
        wdrs:describedby     bci:RecordSpec.POWDER .

dct:conformsTo  a  owl:AnnotationProperty .

bci:changes  a               owl:FunctionalProperty , owl:ObjectProperty ;
        rdfs:domain          bci:ActuationEffect ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:ActuationTarget ;
        terms:part           "Actuation"^^rdfs:Literal ;
        DCMIType:StillImage  "Actuation.png"@en ;
        dct:modified         "2018-01-16T06:28:00"^^xsd:dateTime ;
        dct:source           "[SSN]"^^rdfs:Literal ;
        dct:title            "changes"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Represents the relationship from an ActuationEffect to the thing or entity (ActuationTarget) whose property is being manipulated by an Actuator."@en ;
        skos:editorialNote   "Loosely speaking, this relationship acts as an \"inverse sub-property\" for (Context.Object).hasObjectComponent."@en ;
        skos:prefLabel       "changes"@en ;
        wdrs:describedby     bci:changes.POWDER .

bci:hasActuatorSpec  a       owl:ObjectProperty ;
        rdfs:domain          [ a            owl:Class ;
                               owl:unionOf  ( bci:Actuator bci:ActuatorSpec )
                             ] ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:ActuatorSpec ;
        rdfs:subPropertyOf   bci:hasDescriptor ;
        terms:part           "Descriptor,Actuation"^^rdfs:Literal ;
        DCMIType:StillImage  "Actuation.png"^^rdfs:Literal ;
        dct:modified         "2017-12-11T02:30:00"^^xsd:dateTime ;
        dct:title            "hasActuatorSpec"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects an (Actuator or ActuatorSpec) with its set of related ActuatorSpecs."@en ;
        skos:prefLabel       "has actuator spec"@en ;
        skos:scopeNote       "A hasDescriptor sub property for connecting an (Actuator or ActuatorSpec) with its set of ActuatorSpecs."@en ;
        wdrs:describedby     bci:hasActuatorSpec.POWDER .

bci:observationResult
        a                    owl:ObjectProperty , owl:InverseFunctionalProperty ;
        rdfs:domain          bci:Record ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:RecordedData ;
        rdfs:subPropertyOf   sosa:hasResult ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "Record_(SOSA-SSN).png"^^rdfs:Literal , "RecordedData_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2017-09-14T03:30:00"^^xsd:dateTime ;
        dct:source           "[oldSSN], [SSN]"^^rdfs:Literal ;
        dct:title            "observationResult"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a Record with its correspondent RecordedData set. This can be read, as follow: \"A Record has as its observation result a RecordedData set\". This object property is a subproperty of sosa:hasResult (previously was of oldssn:observationResult): [sosa:Observation] ------ (sosa:hasResult) ------ [oldssn:SensorOutput] [Record] ---------- (observationResult) ------ [RecordedData]"@en ;
        skos:prefLabel       "observation result (of a BCI record)"@en ;
        skos:scopeNote       "Connecting a Record individual with its correspondent RecordedData set"@en ;
        wdrs:describedby     bci:observationResult.POWDER .

bci:SubjectState  a          owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      bci:Descriptor ;
        terms:part           "Descriptor,Session,Subject"^^rdfs:Literal ;
        DCMIType:StillImage  "Descriptor_(SOSA-SSN).png"^^rdfs:Literal , "Session.png"^^rdfs:Literal ;
        dct:modified         "2016-06-29T05:00:00"^^xsd:dateTime ;
        dct:source           "[ESS], [HED]"^^rdfs:Literal ;
        dct:title            "SubjectState"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Describes the state of the Subject during the Session, throughout a collection of external specifications which capture extended metadata of the Subject's overall state. A state can be further classified properly to document more accurately the nature of the metadata (such as physiological state, cognitive state or emotional state). The nature of this concept is \"transient\" and depends directly on the Session: it is considered as an extended collection of metadata related to the Session that captures the overall state of the Subject during the data recording. A SubjectState is, itself, a specialized Descriptor that may have multiple Descriptors associated with, which describe extended metadata sets such as the HL7 Record."@en ;
        skos:example         "Some examples of SubjectState may include descriptions regarding: (*) Physiological state: (*) [ESS] Age: Subject's age (in years) at the time of the Session. (*) [ESS] Height: Subject's height in centimeters (at the moment of the Session). (*) [ESS] Weight: Subject's weight in kilograms (at the moment of the Session). (*) [ESS] Hearing: Subject's hearing (e.g. \"CorrectedToNormal\", \"Impaired\", \"Normal\"). (*) [ESS] Vision: Subject's vision (e.g. \"CorrectedToNormal\", \"Impaired\", \"Normal\"). (*) [ESS] Caffeine: number of hours since last caffeine intake, if less than 12 hours. (*) [ESS] Alcohol: whether the Subject has consumed alcohol within 24 hours before the Session (a logical value). (*) [ESS] Medication: specification of the medication intake based on different parameters (time, chemical compounds, etc.). (*) Drowsiness: identified in [HED 1.31] as \"awake\". (*) Stress level. (*) [HED 1.31] Emotional state: (*) Alertness. Some additional metadata related to this concept used for research purposes could be: (*) A set of attributes to label the identity of the Subject in the Session. Example: (*) [ESS] A Lab. ID as a de-personalized Subject identifier in the research lab. (*) [ESS] A sequential ID to identify the Subject in a collection of Sessions. (Case: \"InSessionNumber\" attribute in [ESS 2.0]). (*) [ESS] An attribute to identify the group type that the Subject belongs to based on the research nature of the Sessions. Example: a Session Group to identify the Subject's group (e.g. \"Autistic\", \"Normal\", \"Control\", etc.)."@en ;
        skos:prefLabel       "Subject's state during a specific session"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe the different types of SubjectStates that can be found in a Session."@en ;
        wdrs:describedby     bci:SubjectState.POWDER .

[ a            owl:AllDisjointClasses ;
  owl:members  ( bci:AccessMethod bci:Activity bci:Actuation bci:Aspect bci:Channel bci:Collection bci:Context bci:Context.Role bci:Context.Scene bci:DataFormat bci:DataSegment bci:Marker bci:NonChannel bci:Playout bci:PlayoutInstant bci:SamplingRate )
] .

bci:isModelOf  a             owl:InverseFunctionalProperty , owl:ObjectProperty ;
        rdfs:domain          bci:Model ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           [ a            owl:Class ;
                               owl:unionOf  ( bci:FeatureParameter bci:ResponseTag )
                             ] ;
        terms:part           "AnnotationTag"^^rdfs:Literal ;
        DCMIType:StillImage  "Model_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2018-01-02T02:45:00"^^xsd:dateTime ;
        dct:title            "isModelOf"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "A Model has associated a set of ResponseTags or FeatureParameters."@en ;
        skos:prefLabel       "is model of"@en ;
        skos:scopeNote       "Connecting a Model with its correspondent set of ResponseTags or FeatureParameters."@en ;
        wdrs:describedby     bci:isModelOf.POWDER .

bci:ResponseTag  a           owl:Class ;
        rdfs:subClassOf      bci:Marker ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onDataRange           xsd:float ;
                               owl:onProperty            bci:hasConfidence ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        rdfs:subClassOf      [ a                owl:Restriction ;
                               owl:cardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onProperty   bci:hasState
                             ] ;
        rdfs:subClassOf      [ a                   owl:Restriction ;
                               owl:onProperty      bci:hasFeatureParameter ;
                               owl:someValuesFrom  bci:FeatureParameter
                             ] ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onClass               bci:Model ;
                               owl:onProperty            bci:hasModel ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        terms:part           "AnnotationTag"^^rdfs:Literal ;
        DCMIType:StillImage  "Marker_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2018-01-02T03:01:00"^^xsd:dateTime ;
        dct:title            "ResponseTag"@en ;
        owl:disjointWith     bci:StimulusTag ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Information object that captures a Marker issued by a Model. In the BCI domain, a natural (physiological or neurological) change in the Subject's state while doing an Activity, is simply called a State. A ResponseTag could not be directly linked to a change in the Context (issued by a Context.ObjectComponent.Event, specifically a StimulusEvent) in a Session. A ResponseTag represents \"something\" detected by a Machine Learning Model (Model). Its content is represented by a set of related FeatureParameters."@en ;
        skos:editorialNote   "Right after a set of DataSegments is created, two consecutive tasks occur: (*) A set of editing processes is run on the recordings, which classify the data sets based on different Models. (*) A set of ResponseTags ;is created, which capture the information related to \"what is so special about\" a particular DataSegment."@en , "This is one of the most important concepts in this ontology."@en ;
        skos:example         "In a common M2M semantic search query, the following input parameters may be used to retrieve a set of ResponseTags related to its DataSegments: (*) Activity: for example, driving. (*) Aspect: for example, vigilance and alert. (*) Modality: for example, EEG, EOG. (*) Subject: filtered by gender, age, etc."@en ;
        skos:prefLabel       "state (response tag)"@en ;
        wdrs:describedby     bci:ResponseTag.POWDER .

bci:Model  a                 owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      DUL:FormalEntity ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:ResponseTag ;
                               owl:onProperty               bci:isModelOf
                             ] ;
        rdfs:subClassOf      [ a                   owl:Restriction ;
                               owl:maxCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onProperty      bci:hasTitle
                             ] ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onDataRange           xsd:anyURI ;
                               owl:onProperty            bci:hasModelIRI ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onClass               bci:Aspect ;
                               owl:onProperty            bci:analizes ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:FeatureParameter ;
                               owl:onProperty               bci:isModelOf
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "0"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Descriptor ;
                               owl:onProperty               bci:hasDescriptor
                             ] ;
        terms:part           "AnnotationTag"^^rdfs:Literal ;
        DCMIType:StillImage  "Model_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2018-01-03T00:08:00"^^xsd:dateTime ;
        dct:title            "Model"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Describes a Machine Learning Model (commonly, a mathematical optimization or computational statistics algorithm for predictive analytics) that \"detects something\" in a DataSegment. A common name given for a Model is Classifier."@en ;
        skos:editorialNote   "Right after a set of DataSegments is created, two consecutive tasks occur: (*) A set of editing processes is run on the recordings, which classify the data sets based on different Models. (*) A set of ResponseTags ;is created, which capture the information related to \"what is so special about\" a particular DataSegment."@en , "In the BCI domain, all the Machine Learning processes can generate many different results. These results are called \"feature is a transient information object, i.e., it has an expiration date. This concept is not defined in this ontology."@en ;
        skos:prefLabel       "model"@en ;
        wdrs:describedby     bci:Model.POWDER .

bci:Interaction  a           owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      DUL:Situation ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "0"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Collection ;
                               owl:onProperty               bci:isSituationOf
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "2"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Session ;
                               owl:onProperty               bci:hasSession
                             ] ;
        rdfs:subClassOf      [ a                   owl:Restriction ;
                               owl:maxCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onProperty      bci:hasTitle
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "2"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Subject ;
                               owl:onProperty               bci:hasSubject
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "0"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Descriptor ;
                               owl:onProperty               bci:hasDescriptor
                             ] ;
        terms:part           "Session,Subject"^^rdfs:Literal ;
        DCMIType:StillImage  "Subject.png"^^rdfs:Literal ;
        dct:modified         "2016-06-23T01:05:00"^^xsd:dateTime ;
        dct:title            "Interaction"@en ;
        owl:disjointWith     bci:Session ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "A situation where multiple (more than one) Subjects interact with each other, while each is performing a single Activity. Commonly, it's expected that all the Subjects in an Interaction engage in the same Activity, but it's not required. Due that an Interaction group a set of Sessions (potentially many for each Subject), BCI applications can make correlations among these Sessions."@en ;
        skos:editorialNote   "This concept defines a Cluster of Sessions: a cross-sectional collection of multiple related Sessions that occur at the same time."@en ;
        skos:prefLabel       "Interaction of multiple subjects"@en ;
        wdrs:describedby     bci:Interaction.POWDER .

bci:hasDataFormat  a         owl:ObjectProperty , owl:FunctionalProperty ;
        rdfs:domain          bci:RecordedData ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:DataFormat ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "RecordedData_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-06-01T01:24:32"^^xsd:dateTime ;
        dct:title            "hasDataFormat"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a RecordedData with its corresponding DataFormat that describes the representation of the data observed by a Device."@en ;
        skos:prefLabel       "has BCI data format"@en ;
        skos:scopeNote       "Connecting a RecordedData with its corresponding DataFormat"@en ;
        wdrs:describedby     bci:hasDataFormat.POWDER .

bci:hasSituation  a          owl:ObjectProperty ;
        rdfs:domain          bci:Collection ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           [ a            owl:Class ;
                               owl:unionOf  ( bci:Interaction bci:Session )
                             ] ;
        terms:part           "Session"^^rdfs:Literal ;
        DCMIType:StillImage  "Session.png"^^rdfs:Literal ;
        dct:modified         "2016-06-28T04:43:00"^^xsd:dateTime ;
        dct:title            "hasSituation"@en ;
        owl:inverseOf        bci:isSituationOf ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a Collection with a Session set and/or an Interaction set that are associated with it."@en ;
        skos:prefLabel       "has situation"@en ;
        skos:scopeNote       "Connecting a Collection with its related Session set and/or Interaction set."@en ;
        wdrs:describedby     bci:hasSituation.POWDER .

skos:scopeNote  a  owl:AnnotationProperty .

bci:isEegChannelDataOf
        a                    owl:ObjectProperty ;
        rdfs:domain          bci:EegChannel ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:DeviceChannelingSpec ;
        rdfs:subPropertyOf   bci:isChannelDataOf ;
        terms:part           "EEG"^^rdfs:Literal ;
        DCMIType:StillImage  "MeasurementCapability_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-08-14T05:45:00"^^xsd:dateTime ;
        dct:source           "[XDF]"^^rdfs:Literal ;
        dct:title            "isEegChannelDataOf"@en ;
        owl:deprecated       true , "--Concerning EEG, this ontology only defines its related classes. It does not extend or define any specific properties for EEG.-- $ 04:27 AM 2016-07-29 $"^^rdfs:Literal ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects an EegChannel with its associated EegDeviceChannelingSpec."@en ;
        skos:editorialNote   "See general remark about: EEG-CONCEPTS"@en ;
        skos:prefLabel       "is EEG channel data of"@en ;
        skos:scopeNote       "Connecting an EegChannel with its associated EegDeviceChannelingSpec definition."@en ;
        wdrs:describedby     bci:isEegChannelDataOf.POWDER .

bci:isExecutedBy  a          owl:ObjectProperty ;
        rdfs:domain          bci:Command ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:Actuator ;
        terms:part           "Actuation"^^rdfs:Literal ;
        DCMIType:StillImage  "Actuation.png"@en ;
        dct:modified         "2018-01-10T05:23:00"^^xsd:dateTime ;
        dct:title            "isExecutedBy"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "A Command is executed by an Actuator."@en ;
        skos:prefLabel       "is executed by"@en ;
        skos:scopeNote       "Connecting a Command with an Actuator."@en ;
        wdrs:describedby     bci:isExecutedBy.POWDER .

bci:hasOffset  a             owl:DatatypeProperty , owl:FunctionalProperty ;
        rdfs:domain          bci:DataBlock ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           xsd:long ;
        terms:part           "Results"^^rdfs:Literal ;
        DCMIType:StillImage  "DataBlock_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:conformsTo       "[Associated data type spec]."@en ;
        dct:modified         "2016-06-12T04:17:00"^^xsd:dateTime ;
        dct:title            "hasOffset"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Indicates the milliseconds."@en ;
        skos:prefLabel       "has offset"@en ;
        wdrs:describedby     bci:hasOffset.POWDER .

bci:hasTimeStamp  a          owl:FunctionalProperty , owl:DatatypeProperty ;
        rdfs:domain          [ a            owl:Class ;
                               owl:unionOf  ( bci:Channel bci:DataBlock bci:Marker bci:PlayoutInstant )
                             ] ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           xsd:dateTimeStamp ;
        terms:part           "AnnotationTag,Context,Results,SystemCapabilities"^^rdfs:Literal ;
        DCMIType:StillImage  "Marker_(SOSA-SSN).png"^^rdfs:Literal , "PlayoutInstant.png"^^rdfs:Literal ;
        dct:conformsTo       "[Associated data type spec]."@en ;
        dct:modified         "2016-06-29T00:34:00"^^xsd:dateTime ;
        dct:source           "[OWL-Time]"^^rdfs:Literal ;
        dct:title            "hasTimeStamp"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "XSD dateTimeStamp of a specific time instant. BCI applications are recommended to measure the time with high precision, in order to keep a proper granularity for this measurement unit. BCI applications should, at least, measure the time instants in milliseconds."@en ;
        skos:prefLabel       "has time stamp"@en ;
        wdrs:describedby     bci:hasTimeStamp.POWDER .

bci:AccessMethod.CoAP
        a                    owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      bci:AccessMethod ;
        rdfs:subClassOf      [ a               owl:Restriction ;
                               owl:hasValue    "File"^^xsd:string ;
                               owl:onProperty  bci:hasType
                             ] ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "RecordedData_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-07-05T04:35:00"^^xsd:dateTime ;
        dct:title            "AccessMethod.CoAP"@en ;
        owl:deprecated       "--This ontology should be agnostic to the data access-- $ 04:35 AM 2016-07-05 $"^^rdfs:Literal , true ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Represents a CoAP AccessMethod. Similarly as HTTP, this software protocol supports IRI and content-type negotiation."@en ;
        skos:prefLabel       "CoAP access method"@en ;
        wdrs:describedby     bci:AccessMethod.CoAP.POWDER .

bci:hasStartChannel  a       owl:DatatypeProperty , owl:FunctionalProperty ;
        rdfs:domain          bci:RecordChannelingSpec ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           xsd:nonNegativeInteger ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "Record_(SOSA-SSN).png"^^rdfs:Literal , "Descriptor_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:conformsTo       "[Associated data type spec]."@en ;
        dct:modified         "2016-07-19T01:59:00"^^xsd:dateTime ;
        dct:source           "[ESS], [XDF]"^^rdfs:Literal ;
        dct:title            "hasStartChannel"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "The channel number in the recording where the modality block starts."@en ;
        skos:prefLabel       "has start channel"@en ;
        wdrs:describedby     bci:hasStartChannel.POWDER .

bci:executes  a              owl:ObjectProperty ;
        rdfs:domain          bci:Actuator ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:Command ;
        terms:part           "Actuation"^^rdfs:Literal ;
        DCMIType:StillImage  "Actuation.png"@en ;
        dct:modified         "2018-01-10T05:13:00"^^xsd:dateTime ;
        dct:source           "[Seydoux2016]"^^rdfs:Literal ;
        dct:title            "executes"@en ;
        owl:inverseOf        bci:isExecutedBy ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "An Actuator executes a Command. Following the Action-Actuator-Effect (AAE) design pattern proposed for the IoT Ontology (IoT-O), this relationship expands the following definition: [Actuator] ------ (consumes) ------ [Input]** ** The Input from a Record via the execution of a Command."@en ;
        skos:prefLabel       "executes"@en ;
        skos:scopeNote       "Connecting an Actuator with a Command."@en ;
        wdrs:describedby     bci:executes.POWDER .

bci:DeviceSpec  a            owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      oldssn:SensorDataSheet , bci:Descriptor ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "0"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:DeviceSpec ;
                               owl:onProperty               bci:hasDeviceSpec
                             ] ;
        terms:part           "Descriptor,Sensors"^^rdfs:Literal ;
        DCMIType:StillImage  "Device_(SOSA-SSN).png"^^rdfs:Literal , "Descriptor_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:description      "=== ** scopeNote ** (*) Manufacturer (source [XDF], [ESS]): manufacturer of the sensor (device). { History note } (*) [ESS 1.0] Corresponds to the (/study/summary/recordedModalities/modality/recordingDevice) node definition: name or type of recording device used to acquire data (manufacturer name). (*) [ESS 2.0] Corresponds to the (/study/recordingParameterSets/recordingParameterSet/channelType/modality/name) node definition: the name (brand) of the sensor device. For example: BioSemi, OptiTrack, SMI, etc. ==="@en ;
        dct:modified         "2017-08-31T00:21:00"^^xsd:dateTime ;
        dct:source           "[SSN], [XDF], [ESS]"^^rdfs:Literal ;
        dct:title            "DeviceSpec"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "[SSN], [XDF] A DeviceSpec is an oldssn:SensorDataSheet (information object) that records (describes) specific properties (such as: hardware specs, power used, types of connectors, etc.) of a Device. It has been modeled as a composite object so that it can be composed as a set of DeviceSpecs to describe specific parts of a Device. In this way, a DeviceSpec is considered as a bag of descriptive properties about the Device. A DeviceSpec is a specialized Descriptor. The relevant set of a Device's properties are recorded directly (with hasChannelData and hasNonChannelData), but the DeviceSpecs can be used to record any other descriptive information related to the physical device, such as: (*) to record the manufacturers' specifications verses observed capabilities, or (*) if more is known than the manufacturer specifies, etc."@en ;
        skos:editorialNote   "(*) The channeling schema that supports a Device is defined as an independent component from the DeviceSpec. A Device's channeling schema (DeviceChannelingSchema) is a subset of the generic ChannelingSchema defined for its correspondent Modality. (*) This ontology does not define any information object in particular of a DeviceSpec."@en ;
        skos:example         "Some BCI applications based on [XDF], find important to keep information regarding the hardware specifications of its Devices. Hence, a BCI application could define a classification for different type of specifications, such as: (*) Hardware specs: (*) Manufacturer (source [XDF], [ESS]): manufacturer of the sensor (device). (*) Material (source [XDF]): conductive material of the sensor (e.g. Ag-AgCl, Foam, Plastic, Rubber). (*) Model (source [XDF]): model of the sensor. (*) Serial number (source [XDF]): serial number of the device. Its generalization was taken from the description of the \"Gaze meta data\". (*) Ownership specs: (*) Name / Label: a logical human-readable name or label of the device. (*) Organization: organization name that owns the device."@en ;
        skos:prefLabel       "device specification"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe specific types of DeviceSpec."@en ;
        wdrs:describedby     bci:DeviceSpec.POWDER .

bci:hasStartTime  a          owl:DatatypeProperty , owl:FunctionalProperty ;
        rdfs:domain          [ a            owl:Class ;
                               owl:unionOf  ( bci:Playout bci:Record bci:Session )
                             ] ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           xsd:dateTime ;
        terms:part           "Context,Session,Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "TimeInterval.png"^^rdfs:Literal ;
        dct:conformsTo       "[Associated data type spec]."@en ;
        dct:modified         "2016-06-30T02:44:00"^^xsd:dateTime ;
        dct:source           "[OWL-Time]"^^rdfs:Literal ;
        dct:title            "hasStartTime"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "XSD dateTime associated to an entity, that indicates the starting-point of a time interval. BCI applications should, at least, measure these time values in seconds."@en ;
        skos:editorialNote   "For simplicity, this ontology does not define explicitly a TimeInterval concept."@en ;
        skos:prefLabel       "has start (initial) date time"@en ;
        wdrs:describedby     bci:hasStartTime.POWDER .

bci:hasConfidence  a         owl:FunctionalProperty , owl:DatatypeProperty ;
        rdfs:domain          bci:ResponseTag ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           xsd:float ;
        terms:part           "AnnotationTag"^^rdfs:Literal ;
        DCMIType:StillImage  "Marker_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:conformsTo       "[Associated data type spec]. Its Domain value consists of approximated arbitrary real numbers in the close range of [0..1]."@en ;
        dct:modified         "2016-05-22T21:23:00"^^xsd:dateTime ;
        dct:title            "hasConfidence"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Captures the accuracy (statistical level of confidence) of the ResponseTag."@en ;
        skos:example         "Example: 0.75"@en ;
        skos:prefLabel       "has confidence"@en ;
        wdrs:describedby     bci:hasConfidence.POWDER .

bci:isStimulusEventOf
        a                    owl:InverseFunctionalProperty , owl:ObjectProperty ;
        rdfs:domain          bci:StimulusEvent ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:StimulusTag ;
        terms:part           "Context,Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "Marker_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-06-23T01:55:00"^^xsd:dateTime ;
        dct:title            "isStimulusEventOf"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "A StimulusEvent generates a set of StimulusTags."@en ;
        skos:prefLabel       "is stimulus event of (generates)"@en ;
        skos:scopeNote       "Connecting a StimulusEvent with its set of StimulusTags."@en ;
        wdrs:describedby     bci:isStimulusEventOf.POWDER .

skos:historyNote  a  owl:AnnotationProperty .

dct:tableOfContents  a  owl:AnnotationProperty .

bci:hasNumberOfChannels
        a                    owl:FunctionalProperty , owl:DatatypeProperty ;
        rdfs:domain          [ a            owl:Class ;
                               owl:unionOf  ( bci:DeviceChannelingSpec bci:RecordChannelingSpec )
                             ] ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           xsd:positiveInteger ;
        terms:part           "Sensors,Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "Descriptor_(SOSA-SSN).png"^^rdfs:Literal , "Record_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:conformsTo       "[Associated data type spec]."@en ;
        dct:description      "=== EEG 10/20 system channeling schema. ==="@en ;
        dct:modified         "2016-10-12T01:57:00"^^xsd:dateTime ;
        dct:source           "[ESS], [XDF]"^^rdfs:Literal ;
        dct:title            "hasNumberOfChannels"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Captures the number of channels used in a Record or supported by a Device. Its value is expected to be a positive integer."@en ;
        skos:editorialNote   "[XDF]: channel_count is a non-negative integer that encodes the number of channels in the stream. [ESS 1.0]: number of (used) data channels."@en ;
        skos:example         "Instead of using this generic datatype property, some BCI applications could define the following specific attributes, according to the recording setup, DeviceChannelingSpec and Record's Modality: (*) Number of used LEDs. (*) Number of used cameras."@en ;
        skos:prefLabel       "has number of channels"@en ;
        wdrs:describedby     bci:hasNumberOfChannels.POWDER .

bci:hasDeviceChannelingSpec
        a                    owl:FunctionalProperty , owl:ObjectProperty ;
        rdfs:domain          bci:Device ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:DeviceChannelingSpec ;
        rdfs:subPropertyOf   bci:hasDescriptor ;
        terms:part           "Sensors"^^rdfs:Literal ;
        DCMIType:StillImage  "Device_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-07-19T04:33:00"^^xsd:dateTime ;
        dct:title            "hasDeviceChannelingSpec"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a Device with its related DeviceChannelingSpec."@en ;
        skos:prefLabel       "has device channeling schema spec"@en ;
        skos:scopeNote       "A sub property of hasDescriptor for connecting a Device with its related DeviceChannelingSpec."@en ;
        wdrs:describedby     bci:hasDeviceChannelingSpec.POWDER .

[ a            owl:AllDisjointClasses ;
  owl:members  ( bci:Context.Object bci:Subject bci:Command bci:DataBlock bci:Descriptor bci:Interaction bci:Session bci:Actuator bci:Device )
] .

bci:EegRecord  a             owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      bci:Record ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onClass               bci:EegDevice ;
                               owl:onProperty            bci:observedByEegDevice ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        terms:part           "EEG"^^rdfs:Literal ;
        DCMIType:StillImage  "Record_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-08-05T04:09:00"^^xsd:dateTime ;
        dct:title            "EegRecord"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Defines a broader type of an EEG Record, which represents the class of observations for EEG (Electroencephalography) data."@en ;
        skos:editorialNote   "See general remark about: EEG-CONCEPTS"@en ;
        skos:prefLabel       "EEG record"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe any relevant EegRecords, based on specialized EegModality(ies), that BCI applications may require."@en ;
        wdrs:describedby     bci:EegRecord.POWDER .

dct:creator  a  owl:AnnotationProperty .

skos:changeNote  a  owl:AnnotationProperty .

bci:hasEndTime  a            owl:FunctionalProperty , owl:DatatypeProperty ;
        rdfs:domain          [ a            owl:Class ;
                               owl:unionOf  ( bci:Playout bci:Record bci:Session )
                             ] ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           xsd:dateTime ;
        terms:part           "Context,Session,Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "TimeInterval.png"^^rdfs:Literal ;
        dct:conformsTo       "[Associated data type spec]."@en ;
        dct:modified         "2016-06-30T02:44:00"^^xsd:dateTime ;
        dct:source           "[OWL-Time]"^^rdfs:Literal ;
        dct:title            "hasEndTime"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "XSD dateTime associated to an entity, that indicates the ending-point of a time interval. BCI applications should, at least, measure these time values in seconds."@en ;
        skos:editorialNote   "For simplicity, this ontology does not define explicitly a TimeInterval concept."@en ;
        skos:prefLabel       "has end (final) date time"@en ;
        wdrs:describedby     bci:hasEndTime.POWDER .

DUL:hasLocation  a  owl:ObjectProperty .

bci:detects  a               owl:ObjectProperty ;
        rdfs:domain          bci:Device ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:StimulusEvent ;
        rdfs:subPropertyOf   ssn:detects ;
        terms:part           "Sensors"^^rdfs:Literal ;
        DCMIType:StillImage  "StimulusEvent_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2017-09-14T02:02:00"^^xsd:dateTime ;
        dct:source           "[SSN]"^^rdfs:Literal ;
        dct:title            "detects"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a Device with its correspondent StimulusEvent set. This can be read, as follow: \"A Device detects StimulusEvent\". This object property is a subproperty of ssn:detects: [sosa:Sensor] ------ (ssn:detects) ------ [ssn:Stimulus] [Device] ---------- (detects) -------- [StimulusEvent] [SSN] A relation from a sosa:Sensor to the ssn:Stimulus that the sosa:Sensor can detect."@en ;
        skos:prefLabel       "detects"@en ;
        skos:scopeNote       "Connecting a Device individual with its correspondent StimulusEvent set."@en ;
        wdrs:describedby     bci:detects.POWDER .

dct:created  a  owl:AnnotationProperty .

bci:consumesInputFrom
        a                    owl:ObjectProperty ;
        rdfs:domain          bci:Command ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:Record ;
        terms:part           "Actuation"^^rdfs:Literal ;
        DCMIType:StillImage  "Actuation.png"@en ;
        dct:modified         "2018-01-10T05:13:00"^^xsd:dateTime ;
        dct:source           "[Seydoux2016]"^^rdfs:Literal ;
        dct:title            "consumesInputFrom"@en ;
        owl:inverseOf        bci:isInputFor ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "A Command consumes its input from a Record. Following the Action-Actuator-Effect (AAE) design pattern proposed for the IoT Ontology (IoT-O), this relationship is based on the following definition: [Actuator]** ------ (consumes) ------ [Input] ** Via the execution of a Command."@en ;
        skos:prefLabel       "consumes input from"@en ;
        skos:scopeNote       "Connecting a Command with a Record."@en ;
        wdrs:describedby     bci:consumesInputFrom.POWDER .

bci:hasRecordSpec  a         owl:ObjectProperty ;
        rdfs:domain          [ a            owl:Class ;
                               owl:unionOf  ( bci:Record bci:RecordSpec )
                             ] ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:RecordSpec ;
        rdfs:subPropertyOf   bci:hasDescriptor ;
        terms:part           "Descriptor,Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "Record_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-07-18T03:01:00"^^xsd:dateTime ;
        dct:source           "[XDF], [ESS]"^^rdfs:Literal ;
        dct:title            "hasRecordSpec"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a (Record or RecordSpec) with its set of related RecordSpecs."@en ;
        skos:prefLabel       "has record spec"@en ;
        skos:scopeNote       "A hasDescriptor sub property for connecting a (Record or RecordSpec) with its set of RecordSpecs."@en ;
        wdrs:describedby     bci:hasRecordSpec.POWDER .

bci:isPlayoutOf  a           owl:ObjectProperty , owl:FunctionalProperty ;
        rdfs:domain          bci:Playout ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           [ a            owl:Class ;
                               owl:unionOf  ( bci:Context bci:Session )
                             ] ;
        terms:part           "Context"^^rdfs:Literal ;
        DCMIType:StillImage  "Playout.png"^^rdfs:Literal ;
        dct:modified         "2016-06-23T02:17:00"^^xsd:dateTime ;
        dct:title            "isPlayoutOf"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a set of Playouts with its corresponding (Context or Session)."@en ;
        skos:prefLabel       "is playout record of"@en ;
        skos:scopeNote       "Connecting an individual with exactly one (Context or Session)"@en ;
        wdrs:describedby     bci:isPlayoutOf.POWDER .

bci:Command  a               owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      DUL:Method ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Record ;
                               owl:onProperty               bci:consumesInputFrom
                             ] ;
        rdfs:subClassOf      [ a                   owl:Restriction ;
                               owl:onProperty      bci:isExecutedBy ;
                               owl:someValuesFrom  bci:Actuator
                             ] ;
        terms:part           "Actuation"^^rdfs:Literal ;
        DCMIType:StillImage  "Actuation.png"^^rdfs:Literal ;
        dct:modified         "2018-01-10T04:45:00"^^xsd:dateTime ;
        dct:source           "[Seydoux2016]"^^rdfs:Literal ;
        dct:title            "Command"@en ;
        owl:disjointWith     sosa:Procedure ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Represents a specific order (based on a Record) to an Actuator to perform an Actuation. Typically, it depicts an instruction (or signal) that causes an Actuator to perform (executes) one of its basic functions, and thus, triggering an Actuation. A Command has the following intrinsic characteristics: (*) Defines the input for a set of Actuators. (*) Its source is a set of Records. From the Action-Actuator-Effect (AAE) design pattern proposed for the IoT Ontology (IoT-O), this concept is based on the following definition: [Actuator] ------ (consumes) ------ [Input] [Actuator] -------- (executes) ---- [Command]"@en ;
        skos:prefLabel       "command"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe specific types of Commands."@en ;
        wdrs:describedby     bci:Command.POWDER .

bci:isInputFor  a            owl:ObjectProperty ;
        rdfs:domain          bci:Record ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:Command ;
        terms:part           "Actuation"^^rdfs:Literal ;
        DCMIType:StillImage  "Actuation.png"@en ;
        dct:modified         "2018-01-10T05:23:00"^^xsd:dateTime ;
        dct:title            "isInputFor"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "A Record is input for a Command."@en ;
        skos:prefLabel       "is input for"@en ;
        skos:scopeNote       "Connecting a Record with a Command."@en ;
        wdrs:describedby     bci:isInputFor.POWDER .

<https://w3id.org/BCI-ontology>
        a                              owl:Ontology ;
        rdfs:comment                   "The BCI ontology describes a framework of core concepts of the specialized metadata set for multimodal \"Brain-Computer Interaction\" (BCI) data capture activities. It is being developed by the \"Pervasive Embedded Technologies\" Laboratory (PET Lab) at the Computer Science Department of the National Chiao Tung University (NCTU), Taiwan (Republic of China, R.O.C). Its concepts and structure depict a foundational metadata model for BCI data capture activities, that BCI applications can extend and use in their implementations. Any feedback is welcome. Please mail it to srodriguez@pet.cs.nctu.edu.tw"@en ;
        cc:license                     <https://creativecommons.org/licenses/by-sa/4.0/> ;
        DCMIType:InteractiveResource   "https://prezi.com/embed/rbzrzgr2wgdi/?bgcolor=fffffflock_to_path=0autoplay=0autohide_ctrls=0landing_data=bHVZZmNaNDBIWnNjdEVENDRhZDFNZGNIUE43MHdLNWpsdFJLb2ZHanI5dkZweDNiZU81eHVOeXJmaXc3dHZqbDZ3PT0landing_sign=Ii6-aqCRCG-IH0yUy4W_Jn7_iNjByu-fX1rhDJszodA"^^rdfs:Literal ;
        DCMIType:StillImage            "02-complete-UML-diagram.png"^^rdfs:Literal , "04-OWLGrEd-preview.png"^^rdfs:Literal , "03-webvowl-preview.png"^^rdfs:Literal , "01-core-structure.png"^^rdfs:Literal ;
        dct:abstract                   "The BCI ontology specifies a foundational metadata model set for real-world multimodal Brain-Computer Interaction (BCI) data capture activities.Its structure depicts a conceptual framework that BCI applications can extend and use in their implementations, to define core concepts that capture a relevant and interoperable metadata vocabulary. This ontology is aligned to the Semantic Sensor Network Ontology (SSN): a domain-independent and end-to-end model for sensor/actuator applications. Hence, its structure has been normalized to assist its use in conjunction with other ontologies or linked data resources to specify any particular definitions (such as units of measurement, time and time series, and location and mobility), that specialized applications in the BCI domain might need. Also, this spec provides general alignment data modeling guidelines for core concepts, to help BCI applications in their design."@en ;
        dct:created                    "2014-03-27"^^xsd:date ;
        dct:creator                    "Sergio Jos&#233; Rodr&#237;guez M&#233;ndez. Pervasive Embedded Technologies Laboratory (PET Lab), Computer Science Department, NCTU, Taiwan. John K. Zao. Pervasive Embedded Technologies Laboratory (PET Lab), Computer Science Department, NCTU, Taiwan and CerebraTek, Taiwan."@en ;
        dct:description                "The BCI ontology (BCI-O) provides a high level semantic structure specialized metadata vocabulary set for real-world multimodal BCI data capture activities. It defines a minimalist and simple abstract metadata foundational model for real-world BCI applications that monitors human activity in any scenario. BCI multimodal domain applications are encouraged to extend and use this ontology in their implementations. BCI-O was developed following W3C Semantic Web ontology standards and guidelines, so that BCI applications can express reusable, interoperable and extendable machine-readable BCI metadata models, especially in pervasive M2M environments. For this purpose, its design was aligned to the Semantic Sensor Network Ontology (SSN), following closely its Stimulus-Sensor-Observation Ontology Design Pattern. The core set of relevant metadata definitions for real-world BCI activities were taken from different proposed vocabularies and formats in the BCI domain, such as: XDF, ESS and HED. BCI-O concepts are logically grouped into 11 modules. Each module represents a central topic of the ontology structure where the related concepts give a consistent explanation about its functional data model. The modules are: (*) Subject: concepts related to the depiction of a human being (or human subject) engaging in an activity and its associate state. (*) Context: captures the architectural description of an environment (or context). A human being interacts with a context. (*) Session: represents the interaction between a subject and a context while performing a single activity, under specific settings and conditions. (*) Observations (was SSN-Skeleton): specific concepts for BCI activities aligned to the SOSA/SSN axioms for modeling Observations (the initial alignment was to the Skeleton of [oldSSN]). Metadata related to records, modality types (such as EEG), channeling information, output streams (file formats and access) and stimulus events, are found in this module. (*) Sensors (was SSN-Device): specific related concepts for BCI activities aligned to the SOSA/SSN axioms for modeling Sensors (under Observations) (the initial alignment was to the Device module of [oldSSN]). Metadata related to devices and their channeling specification are found in this module. (*) System Capabilities (was SSN-MeasurementCapability): specific related concepts for BCI activities aligned to the SSN horizontal segmentation module for System Capabilities (the initial alignment was to the Measurement Capability module of [oldSSN]). Metadata related to channels and other measurement properties are found in this module. (*) Results (was SSN-Data): specific related concepts for BCI activities aligned to the SOSA axioms for modeling Results (the initial alignment was to the Data module of [oldSSN]). Metadata related to data blocks are defined in this module. (*) data tagging). (*) Actuation: specific related concepts for BCI activities aligned to the SOSA axioms for modeling Actuations. Similarly as described in [Seydoux2016], this module depicts how a subject can interact with the physical/virtual world (context) in BCI activities. Its main classes, actuator and actuation, are modeled following the Action-Actuator-Effect (AAE) design pattern: a core model for the IoT Ontology (IoT-O). (*) Descriptor: a descriptor represent an external resource set that extends the description of entities in the ontology. A descriptor complements the information associated to the relevant metadata set, defined in this ontology. (*) EEG: specific concepts for EEG (Electroencephalography) applications. As one of the ontologies (\"concept producers\") that reuse SSN, BCI-O was selected as part of the analysis on the usage of SSN."@en ;
        dct:identifier                 "https://w3id.org/BCI-ontology#"^^xsd:anyURI ;
        dct:issued                     "2014-03-27"^^xsd:date ;
        dct:modified                   "2018-01-18T02:42:22"^^xsd:dateTime ;
        dct:references                 "(*) [Compton2009] Compton, M.; Neuhaus, H.; Taylor K. and Tran, K. Reasoning about Sensors and Compositions. In Proceedings of the 2nd International Workshop on Semantic Sensor Networks (SSN 09) at ISWC 2009, pp. 33-48, 2009. URL=http://ceur-ws.org/Vol-522/p7.pdf. (*) [ESS] SCCN, \"EEG Study Schema (ESS)\". Resources: [ESS@SCCN], [ESS v2.0]. (*) [HED] N. Bigdely-Shamlo, K. Kreutz-Delgado, M. Miyakoshi, M. Westerfield, T. Bel-Bahar, C. Kothe and K. Robbins, \"Hierarchical event descriptor (HED) tags for analysis of event-related EEG studies\". Resources: [HED@SCCN], [HED v2.0]. (*) [OWL-Time] OGC W3C, \"Time Ontology in OWL (W3C Recommendation 19 October 2017)\", https://www.w3.org/TR/owl-time/ (*) [Seydoux2016] Seydoux, Nicolas; Drira, Khalil; Hernandez, Nathalie; Monteil, Thierry. IoT-O, a Core-Domain IoT Ontology to Represent Connected Devices Networks. 20th International Conference on Knowledge Engineering and Knowledge Management - Volume 10024 (EKAW 2016). Bologna, Italy. 2016. Pp. 561-576. DOI=http://dx.doi.org/10.1007/978-3-319-49004-5_36. URL=https://dl.acm.org/citation.cfm?id=3092997. (*) [Shafer2001] Shafer, Steven A. N.; Brumitt, Barry; Cadiz, J. J. Interaction Issues in Context-aware Intelligent Environments. Human-Computer Interaction. Volumen 16, Issue 2 (December 2001), Pp. 363-378. DOI=http://dx.doi.org/10.1207/S15327051HCI16234_16. URL=http://dl.acm.org/citation.cfm?id=1463124. (*) [SSN] OGC W3C, \"Semantic Sensor Network (W3C Recommendation 19 October 2017)\", https://www.w3.org/TR/vocab-ssn/.W3C Spatial Data on the Web Working Group, \"W3C Spatial Data on the Web Working Group\", https://www.w3.org/2015/spatial/wiki/Main_Page. (*) [oldSSN] W3C, \"Semantic Sensor Network (SSN) Ontology\", http://www.w3.org/2005/Incubator/ssn/ssnx/ssn.html.W3C Semantic Sensor Network Incubator Group, \"Semantic Sensor Network XG Final Report\", http://www.w3.org/2005/Incubator/ssn/XGR-ssn-20110628/. (*) [Unity] Unity Gaming Platform (http://unity3d.com/), Unity's Gaming Modeling Architecture Manual http://docs.unity3d.com/Manual/index.html (*) [XDF] C. Kothe and C. Brunner, \"XDF (Extensible Data Format)\", https://code.google.com/p/xdf/"@en ;
        dct:rights                     "Copyright 2014 - 2018 PET Lab, Computer Science Department, NCTU, Taiwan."@en ;
        dct:tableOfContents            "http://www.essepuntato.it/lode/owlapi/https://w3id.org/BCI-ontology# (visualise the BCI-ontology with LODE)"^^rdfs:Literal ;
        dct:title                      "Brain-Computer Interaction (BCI) Ontology"@en ;
        vann:preferredNamespacePrefix  "bci"^^rdfs:Literal ;
        vann:preferredNamespaceUri     "https://w3id.org/BCI-ontology#"^^xsd:anyURI ;
        owl:imports                    dbp: , ssn:dul ;
        owl:priorVersion               "0.9.4,0.9.3,0.9.2,0.9.1,0.8.9,0.7.5,0.6.1"^^rdfs:Literal ;
        owl:versionInfo                "0.9.5"^^rdfs:Literal ;
        skos:editorialNote             "Regarding EEG concepts: This ontology EEG concepts: (*) EegModality. (*) EegNonChannel. (*) EegDevice. (*) EegRecord. (*) EegChannel. If necessary, BCI applications may define a set of restrictions and specialized connections (subproperties) for the relations among the EEG concepts."@en , "Regarding the treatment of measurement units: This ontology leaves open to BCI applications, the way how they should handle the semantic expressiveness level of measurement units. In general, there are two possible ways (based on their data requirements): (*) data type properties (with its previously-known units of measurements), implies that it's not necessary to incorporate into their ontology's definition a semantic structure to describe properly units of measurement. (*) For semantic-centric applications: it's necessary to incorporate into their ontology's definition a structure to describe properly units of measurement, depending on their required semantic level of expressiveness. The vast majority of BCI applications are heavily data-centric. Well-known measurement units for a wide range of metadata attributes are used in different specs (such as [XDF] and [ESS]), e.g., pixels, mm, degrees and microvolts. For them, defining a relevant data type property set without specifying measurement units is suffice. For BCI applications that require a proper semantic expressiveness level of measurement units, this ontology provides the following guideline: (*) The BCI concepts that are subject to be extended are those related to Device and Record (including the channeling spec definitions). (*) From the perspective of the BCI ontology alignment to the Stimulus-Sensor-Observation Ontology Design Pattern, the core SSN concepts that \"map\" to quantities (and, therefore, to units of measurement) are ssn-system:SystemCapability and ssn-system:SystemProperty. Thus, BCI applications should pay special attention to extend the semantic structure of the concepts: (*) Channel, and (*) NonChannel. (*) BCI applications should extend the BCI ontology based on the [oldSSN] guidelines, explained in: (*) (5.3.10 Data -- 5.3.10.2 How to attach a data value to a property?), (*) (5.3.13 Energy -- 5.3.13.3 How to represent a WSN node with information about its energy consumption), (*) (5.4.2 Smart product example -- 5.4.2.2 Sensor), (*) (5.4.2 Smart product example -- 5.4.2.3 Measurement capabilities), (*) (5.4.2 Smart product example -- 5.4.2.4 Observation), (*) (5.4.4 Agriculture Meteorology Sensor Network -- 5.4.4.1.3 Sensor view), (*) (5.4.4 Agriculture Meteorology Sensor Network -- 5.4.4.2.3 Units of measurement and quantity ontologies). (*) It's recommended to incorporate the semantic extensions through their alignment to a proper ontology for units of measurement. Recommended ontologies for units of measurement are: (*) QUDT - Quantities, Units, Dimensions and Data Types Ontologies, developed by the NExIOM project (NASA, TopQuadrant). (*) Ontology of units of Measure (OM): om-1.8.2, developed by a team of researchers at Wageningen UR (wurvoc.org)."@en , "Regarding the Procedure concept: [SSN] defines a general concept about Procedures, which encompasses any kind of Observations and Actuations. Thus, it fits properly the domain of BCI data capture activities. Following ontology engineering good practices, and given that there is not a specific description of Procedures for BCI data capture activities, this ontology does not define any new concept for them. Therefore, BCI-O applications that needs to model \"Procedure\" into their metadata definitions, should align directly to the concept sosa:Procedure. It is worth noting that this practice applies to any other high-level concepts that BCI-O applications might include into their vocabulary."@en , "Regarding Aspect and Modality: The importance and relationship between the concepts sosa:FeatureOfInterest (superclass of Aspect) and sosa:ObservableProperty (superclass of Modality) are shown and explained in ([oldSSN]): (*) (5.4.4 Agriculture Meteorology Sensor Network -- 5.4.4.1.1 Sensor selection), (*) (5.4.4 Agriculture Meteorology Sensor Network -- 5.4.4.2.2 CF (Climate and Forecast) ontologies), (*) (5.4.3 Wind sensor (WM30) -- 5.4.3.6 Wind Feature and properties), (*) (Wind Sensor example -- Wind Sensor example: Feature of interest). As a SSN domain application ontology, these concepts are defined and adjusted properly for describing the nature of BCI Activities observations."@en , "Mappings to SOSA/SSN: At the beginning, the BCI ontology was developed following closely its alignment to the [oldSSN] spec. By mid-July 2017, as the new version of SSN released by W3C ([SSN]) had reached the Candidate Recommendation <a title=\"Semantic Sensor Network Ontology | W3C Candidate Recommendation (11 July 2017) status, the core concepts were \"remapped\" to the new SOSA/SSN definitions based on its <a title=\"Semantic Sensor Network Ontology | W3C Recommendation (19 October 2017): (6) Vertical Segmentation -- (6.2) SSNX Alignment Module SSNX Vertical Alignment: [ [ [<th style=\"text-align: center;\" width=\"100 bci<th style=\"text-align: center;\" width=\"60 (mapping)<th style=\"text-align: center;\" width=\"160 Initial mapping: oldssn<th style=\"text-align: center;\" width=\"170 New mapping: SOSA/SSN<th style=\"text-align: center;\" width=\"335 SSNX & BCI-O Remarks] [<th style=\"text-align: center;\" colspan=\"5 Classes] [ [bci:Aspect] [] [oldssn:FeatureOfInterest] [sosa:FeatureOfInterest] [; (distinction between observation and actuation targets)] ] [ [bci:Modality] [] [oldssn:Property] [sosa:ObservableProperty] [(oldssn:Property ssn:Property);(sosa:ObservableProperty ssn:Property)] ] [ [bci:StimulusEvent] [] [oldssn:Stimulus] [ssn:Stimulus] [] ] [ [bci:Device] [] [oldssn:SensingDevice] [sosa:Sensor] [(sosa:Sensor oldssn:Sensor); (oldssn:SensingDevice oldssn:Sensor)] ] [ [bci:Record] [] [oldssn:Observation] [sosa:Observation] [oldssn:Observation: combination of oldssn axiomatic statements.] ] [ [bci:RecordedData] [] [oldssn:SensorOutput] [sosa:Result] [(oldssn:SensorOutput sosa:Result) and (combination of oldssn axiomatic statements); (alignment to sosa:Result)] ] [ [bci:DataBlock] [] [oldssn:ObservationValue] [sosa:Result] [(oldssn:ObservationValue sosa:Result) and (combination of oldssn axiomatic statements); (alignment removed)] ] [ [bci:Channel] [] [oldssn:MeasurementCapability] [ssn-system:SystemCapability] [(oldssn:MeasurementCapability ssn-system:SystemCapability) and (combination of oldssn axiomatic statements)] ] [ [bci:NonChannel] [] [oldssn:MeasurementCapability] [ssn-system:SystemCapability] [(oldssn:MeasurementCapability ssn-system:SystemCapability) and (combination of oldssn axiomatic statements)] ] [ [bci:SamplingRate] [] [oldssn:Frequency] [ssn-system:Frequency] [(oldssn:Frequency ssn-system:Frequency)] ] [ [bci:DeviceSpec] [] [oldssn:SensorDataSheet] [ ] [unchanged] ] [ [bci:Actuation] [] [ ] [sosa:Actuation] [new] ] [ [bci:Actuator] [] [ ] [sosa:Actuator] [new] ] [ [bci:ActuationEffect] [] [ ] [sosa:ActuatableProperty] [new] ] [<th style=\"text-align: center;\" colspan=\"5 Object Properties] [ [bci:hasModality] [] [oldssn:hasProperty] [ssn:hasProperty] [] ] [ [bci:isModalityOf] [] [oldssn:isPropertyOf] [ssn:isPropertyOf] [] ] [ [bci:aspectOfInterest] [] [oldssn:featureOfInterest] [sosa:hasFeatureOfInterest] [] ] [ [bci:madeRecord] [] [oldssn:madeObservation] [sosa:madeObservation] [] ] [ [bci:observedByDevice] [] [oldssn:observedBy] [sosa:madeBySensor] [] ] [ [bci:observedModality] [] [oldssn:observedProperty] [sosa:observedProperty] [] ] [ [bci:detects] [] [oldssn:detects] [ssn:detects] [] ] [ [bci:isProxyFor] [] [oldssn:isProxyFor] [ssn:isProxyFor] [] ] [ [bci:hasValue] [] [oldssn:hasValue] [sosa:hasResult] [; (deprecated to simplify the model)] ] [ [bci:isProducedByDevice] [] [oldssn:isProducedBy] [ ] [not defined in SOSA/SSN; deprecated. defined as the following role inclusion axiom: sosa:isResultOf * sosa:madeBySensor &SubsetEqual; isProducedBy] ] [ [bci:observationResult] [] [oldssn:observationResult] [sosa:hasResult] [] ] [ [bci:forModality] [] [oldssn:forProperty] [ssn:forProperty] [] ] [ [bci:hasNonChannelData] [] [oldssn:hasMeasurementCapability] [ssn-system:hasSystemCapability] [oldssn:hasMeasurementCapability ssn-system:hasSystemCapability] ] [ [bci:observes] [] [oldssn:observes] [sosa:observes] [ in combination with the property-chain axioms] ] [ [bci:ofAspect] [] [oldssn:ofFeature] [ ] [not defined in SOSA/SSN; deprecated.] ] [ [bci:includesEvent] [] [DUL:includesEvent] [ ] [not used in SOSA/SSN; deprecated. A new property has been defined: ssn:wasOriginatedBy] ] ] ] Symbolic notation: [ [ [ [aligned to (subclass or sub-property of)] [] ] [ [equivalent concepts] [] ] [ [the new mapping implies a conceptual update] [] ] ] ] As for January 2018, due that all alignments were updated to SSN/SOSA core classes, the new mappings are based now on the <a title=\"Semantic Sensor Network Ontology | W3C Recommendation (19 October 2017): (6) Vertical Segmentation -- (6.1) Dolce-Ultralite Alignment Module Dolce-Ultralite Alignment Module of the Vertical Segmentation of [SSN]. Thus, the BCI ontology imports the ssn-dul definitions. As one of the ontologies (\"concept producers\") that reuse SSN, BCI-O was selected as part of the analysis on the usage of SSN."@en ;
        skos:prefLabel                 "BCI Ontology"@en ;
        foaf:homepage                  "https://w3id.org/BCI-ontology#"^^xsd:anyURI .

oldssn:hasProperty  a  owl:ObjectProperty .

bci:extendsDeviceChannelingSpec
        a                    owl:ObjectProperty , owl:FunctionalProperty ;
        rdfs:domain          bci:RecordChannelingSpec ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:DeviceChannelingSpec ;
        rdfs:subPropertyOf   bci:hasDescriptor ;
        terms:part           "Descriptor,Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "Aspect-and-Modality_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-07-29T02:21:00"^^xsd:dateTime ;
        dct:title            "extendsDeviceChannelingSpec"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a RecordChannelingSpec with its related DeviceChannelingSpec. This relation states that a RecordChannelingSpec individual extends its related DeviceChannelingSpec from which was derivated."@en ;
        skos:prefLabel       "extends its device channeling schema spec"@en ;
        skos:scopeNote       "A hasDescriptor sub property that connects a RecordChannelingSpec with its related DeviceChannelingSpec."@en ;
        wdrs:describedby     bci:extendsDeviceChannelingSpec.POWDER .

oldssn:isProducedBy  a  owl:ObjectProperty .

bci:StimulusEvent  a         owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      ssn:Stimulus , bci:Context.ObjectComponent.Event ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:StimulusTag ;
                               owl:onProperty               bci:isStimulusEventOf
                             ] ;
        rdfs:subClassOf      [ a                   owl:Restriction ;
                               owl:onProperty      bci:isProxyFor ;
                               owl:someValuesFrom  bci:Modality
                             ] ;
        terms:part           "Context,Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "StimulusEvent_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:description      "=== ** HED class in EXAMPLE SPEC ** [ [ [This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe any XXX] [ (*) HED.Auditory (*) HED.Pain (*) HED.Smell (*) HED.TMS (*) HED.Tactile (*) HED.Taste (*) HED.Visual ] [Defines a general bStimuli HED.] [HED.Stimulus] [HED.Stimulus_Visual.png] [[HED]] ] ** HED attribute for the HED class in EXAMPLE SPEC ** [ [ Event code tag, based on Hierarchical Event Descriptor (HED) Tags for Analysis of Event-Related EEG Studies document, (if available, otherwise leave blank).] [ ] ==="@en ;
        dct:modified         "2016-07-28T03:08:00"^^xsd:dateTime ;
        dct:source           "[SSN]"^^rdfs:Literal ;
        dct:title            "StimulusEvent"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "A StimulusEvent describes an event that triggers a stimulus to the Subject during a Session. By its own nature, it may affect the Subject's performance of the Activity (and, therefore, a set of Actions related to the Activity). A StimulusEvent is an external happening on a specific Context that generates the input for the sensors ([SSN] concepts). Thus, these events can be generated (issued) by a set of Context.Objects (architecturally speaking by Context.ObjectComponent.Events). In [SSN], this concept is a subclass of ssn:Stimulus and, therefore, a oldssn:SensorInput, which describes the (data) input for the sosa:Sensors. In the BCI domain, this concept is simply called an \"Event\": the stimuli or trigger that causes the relevant measurement to be, in fact, processed or analyzed."@en ;
        skos:editorialNote   "The following descriptions capture the definition of this concept ([oldSSN: Stimulus], 5.3.1.2.1 Stimuli) adjusted to this ontology: (*) StimulusEvents are detectable changes in the environment (Context), i.e., in the physical or a virtual world. (*) A StimulusEvent is an triggers\" the Device. (*) StimulusEvents can either be directly or indirectly related to observable Modality-ies and, therefore, to Aspects. (*) The same types of StimulusEvents can trigger different kinds of Devices and be used to reason about different Modality-ies. (*) The Modality-ies associated to the StimulusEvent may be different to eventual observed (Record) Modality. (*) It is the StimulusEvent, not the Context.Object that triggers the Device. (*) A StimulusEvent may only be usable as proxy for a specific region of an observed Modality."@en ;
        skos:example         "A StimulusEvent describes a specific component of the Context that \"generates\" an annotation tag (StimulusTag). Some examples of a StimulusEvent are: (*) Red light for 15 seconds at a 66 Hz. frequency. (*) Green light for 10 seconds at a 74 Hz. frequency."@en ;
        skos:prefLabel       "stimulus event"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe any relevant contextual event that describes the stimuli or trigger that causes a relevant BCI measurement."@en ;
        wdrs:describedby     bci:StimulusEvent.POWDER .

bci:hasSamplingRate  a       owl:DatatypeProperty , owl:FunctionalProperty ;
        rdfs:domain          bci:Record ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           xsd:float ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "Record_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:conformsTo       "[Associated data type spec]."@en ;
        dct:modified         "2017-08-30T23:58:00"^^xsd:dateTime ;
        dct:source           "[ESS], [XDF]"^^rdfs:Literal ;
        dct:title            "hasSamplingRate"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Sampling rate of the recording (Record). Its measurement unit is Hertz (Hz)."@en ;
        skos:editorialNote   "Related concept for a Device: SamplingRate."@en , "[ESS 2.0] Sampling rate of the modality may be recorded at a different sampling rate."@en ;
        skos:prefLabel       "(a record) has sampling rate"@en ;
        wdrs:describedby     bci:hasSamplingRate.POWDER .

bci:NonChannel  a            owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      ssn-system:SystemCapability ;
        terms:part           "SystemCapabilities"^^rdfs:Literal ;
        DCMIType:StillImage  "MeasurementCapability_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:description      "=== ** editorialNote ** The BCI ontology defines this modeling structure for EEG Devices: see the definition of the Object Property hasEegNonChannelData. ==="@en ;
        dct:modified         "2017-08-30T22:34:00"^^xsd:dateTime ;
        dct:source           "[SSN]"^^rdfs:Literal ;
        dct:title            "NonChannel"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "[SSN] The NonChannel of any Device describes a set of measurement properties (ssn-system:SystemProperty-ies) of a sensor (sosa:Sensor) in specific conditions, as explained in [SSN] System Capabilities Module and [oldSSN] MeasuringCapability Module, that are not related directly to any DeviceChannelingSpec. Note that the measurement properties describe in this concept are of a sensor (Device subclass of sosa:Sensor), not of a specific observed measurement (Record subclass of sosa:Observation)."@en ;
        skos:editorialNote   "This ontology leaves open to BCI applications the way how they should describe properly basic non-channeling measurement capabilities for its relevant set of different classes of sensors (Device class hierarchy) used in BCI activities. A modeling guideline (based on [oldSSN]: oldssn:MeasurementCapability) can be found at: (*) (5.3.5 MeasuringCapability -- 5.3.5.2 How to describe capabilities of a sensor?), (*) (5.4.2 Smart product example -- 5.4.2.3 Measurement capabilities). The sensor ontology does not restrict the way in which specific measurement properties (oldssn:MeasurementCapability) are described. Thus, specialized applications may defined their own values of measurement properties (oldssn:MeasurementCapability). (oldssn:MeasurementCapability maps to ssn-system:SystemCapability) If necessary, BCI applications should (but are not require to) define a set of restrictions and specialized connections (subproperties) on the property hasNonChannelData (subproperty of ssn-system:hasSystemCapability) for each particular subclass of Device (subclass of sosa:Sensor), which describes sensors for specific types. A relevant non-channeling measurement property (ssn-system:SystemProperty) related to a Device is sampling rate. Based on the modeling of the ssn-system:SystemCapability and ssn-system:SystemProperty concepts (along with the guidelines found in 5.4.2 Smart product example -- 5.4.2.2 Sensor), this ontology defines the SamplingRate concept."@en , "See general remark about: UNITS-OF-MEASUREMENT"@en , "See general remark about: 1_MAPPINGS-TO-SOSA-SSN"@en ;
        skos:prefLabel       "non-channeling data component (other BCI measurement capability)"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe a set of relevant non-channeling measurement capabilities for each type of Device."@en ;
        wdrs:describedby     bci:NonChannel.POWDER .

bci:isActuationOf  a         owl:ObjectProperty , owl:FunctionalProperty ;
        rdfs:domain          bci:Actuation ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:Session ;
        terms:part           "Session,Actuation"^^rdfs:Literal ;
        DCMIType:StillImage  "Actuation.png"^^rdfs:Literal ;
        dct:modified         "2017-11-01T19:07:00"^^xsd:dateTime ;
        dct:title            "isActuationOf"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects an Actuation with its associated Session."@en ;
        skos:prefLabel       "is actuation of"@en ;
        skos:scopeNote       "Connecting an Actuation with its related Session."@en ;
        wdrs:describedby     bci:isActuationOf.POWDER .

bci:AccessMethod.RESTful-JSON
        a                    owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      bci:AccessMethod ;
        rdfs:subClassOf      [ a               owl:Restriction ;
                               owl:hasValue    "File"^^xsd:string ;
                               owl:onProperty  bci:hasType
                             ] ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "RecordedData_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-07-05T04:35:00"^^xsd:dateTime ;
        dct:title            "AccessMethod.RESTful-JSON"@en ;
        owl:deprecated       true , "--This ontology should be agnostic to the data access-- $ 04:35 AM 2016-07-05 $"^^rdfs:Literal ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Represents a RESTful AccessMethod, where the data is exchanged in JSON format."@en ;
        skos:prefLabel       "RESTful-JSON access method"@en ;
        wdrs:describedby     bci:AccessMethod.RESTful-JSON.POWDER .

bci:Actuator  a              owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      sosa:Actuator ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Command ;
                               owl:onProperty               bci:executes
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:ActuatorSpec ;
                               owl:onProperty               bci:hasActuatorSpec
                             ] ;
        rdfs:subClassOf      [ a                   owl:Restriction ;
                               owl:onProperty      bci:triggers ;
                               owl:someValuesFrom  bci:ActuationEffect
                             ] ;
        terms:part           "Actuation"^^rdfs:Literal ;
        DCMIType:StillImage  "Actuation.png"@en ;
        dct:modified         "2018-01-10T06:49:14"^^xsd:dateTime ;
        dct:source           "[SSN], [Seydoux2016]"^^rdfs:Literal ;
        dct:title            "Actuator"@en ;
        owl:disjointWith     bci:Device ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "[SSN] A device that is used by, or implements, an (actuation) procedure that changes (triggers) the state of the world (ActuationTarget)."@en ;
        skos:editorialNote   "[Seydoux2016] Actuators are devices that transform an input signal into a physical output, making them the exact opposite of sensors. SAN (ontology) is built around Action-Actuator-Effect (AAE), a design pattern inspired from the Stimulus Sensor Observation (SSO). Based on the focus of this ontology and due that actuators are the exact opposite of sensors, the concepts of channel for Actuators, are not defined. If needed, BCI applications can model the system capabilities of an actuator following directly SOSA's structure and concepts."@en , "(*) \"An actuator is a component of a machine that is responsible for moving or controlling a mechanism or system.\". (*) \"An actuator requires a control signal and a source of energy: [ControlSignal]\". (*) \"An actuator is the mechanism by which a control system *acts* upon an environment.\". Reference: [Wikipedia: Actuator]"@en ;
        skos:prefLabel       "actuator"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe any relevant Actuator classification that Subjects can use in Sessions."@en ;
        wdrs:describedby     bci:Actuator.POWDER .

dct:source  a   owl:AnnotationProperty .

DUL:InformationObject
        a       owl:Class .

bci:hasChannelData  a        owl:ObjectProperty ;
        rdfs:domain          bci:DeviceChannelingSpec ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:Channel ;
        terms:part           "Sensors"^^rdfs:Literal ;
        DCMIType:StillImage  "MeasurementCapability_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-08-14T05:19:00"^^xsd:dateTime ;
        dct:source           "[XDF]"^^rdfs:Literal ;
        dct:title            "hasChannelData"@en ;
        owl:inverseOf        bci:isChannelDataOf ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a DeviceChannelingSpec with the set of Channels that comprises its internal structure."@en ;
        skos:editorialNote   "See general remark about: EEG-CONCEPTS"@en ;
        skos:prefLabel       "has channel data (logical component)"@en ;
        skos:scopeNote       "Connecting a DeviceChannelingSpec with its Channel set."@en ;
        wdrs:describedby     bci:hasChannelData.POWDER .

bci:ActuationEffect  a       owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      bci:Context.ObjectComponent.Event ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onClass               bci:ActuationTarget ;
                               owl:onProperty            bci:changes ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        terms:part           "Actuation,Context"^^rdfs:Literal ;
        DCMIType:StillImage  "Actuation.png"@en ;
        dct:modified         "2018-01-16T05:53:00"^^xsd:dateTime ;
        dct:source           "[Seydoux2016]"^^rdfs:Literal ;
        dct:title            "ActuationEffect"@en ;
        owl:disjointWith     bci:StimulusEvent ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "It represents the effect that involves an ActuationResult. From the Context perspective, this concept represents a Context.ObjectComponent.Event (triggers(-ed) by an Actuator) that causes an actuation effect on the ActuationTarget. [Seydoux2016] Following the Action-Actuator-Effect (AAE) design pattern proposed for the IoT Ontology (IoT-O), this concept captures the definition of Effect from the following relationships: [Actuator] ------ (triggers) ------ [Effect] [Actuation] ------ (involves) ------ [Effect]"@en ;
        skos:editorialNote   "If needed, BCI applications can time stamp an ActuationEffect."@en ;
        skos:prefLabel       "actuation effect"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe any relevant ActuationEffect classification."@en ;
        wdrs:describedby     bci:ActuationEffect.POWDER .

bci:hasAccessMethod  a       owl:ObjectProperty ;
        rdfs:domain          bci:RecordedData ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:AccessMethod ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "RecordedData_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-06-01T01:18:00"^^xsd:dateTime ;
        dct:title            "hasAccessMethod"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a RecordedData with a set of AccessMethods that describes how the data is being accessed by the BCI application."@en ;
        skos:prefLabel       "has BCI data access method"@en ;
        skos:scopeNote       "Connecting a RecordedData with its associated AccessMethods"@en ;
        wdrs:describedby     bci:hasAccessMethod.POWDER .

oldssn:observedBy  a  owl:ObjectProperty .

bci:isRecordOf  a            owl:ObjectProperty , owl:FunctionalProperty ;
        rdfs:domain          bci:Record ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           [ a            owl:Class ;
                               owl:unionOf  ( bci:Session bci:Subject )
                             ] ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "Record_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-06-24T00:16:00"^^xsd:dateTime ;
        dct:title            "isRecordOf"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a Record with its associated (Subject or Session)."@en ;
        skos:prefLabel       "is BCI record of"@en ;
        skos:scopeNote       "Connecting a Record with its related (Subject or Session)."@en ;
        wdrs:describedby     bci:isRecordOf.POWDER .

dct:description  a  owl:AnnotationProperty .

[ a            owl:AllDisjointClasses ;
  owl:members  ( bci:Context.ObjectComponent.Event bci:Record bci:StimulusEvent bci:Action )
] .

bci:madeRecord  a            owl:InverseFunctionalProperty , owl:ObjectProperty ;
        rdfs:domain          bci:Device ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:Record ;
        rdfs:subPropertyOf   sosa:madeObservation ;
        terms:part           "Sensors"^^rdfs:Literal ;
        DCMIType:StillImage  "Record_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2017-08-31T03:47:00"^^xsd:dateTime ;
        dct:source           "[SSN]"^^rdfs:Literal ;
        dct:title            "madeRecord"@en ;
        owl:inverseOf        bci:observedByDevice ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a Device with its correspondent Records. This can be read, as follow: \"A Device made Records\". This object property is a subproperty of sosa:madeObservation: [sosa:Sensor] ------ (sosa:madeObservation) ------ [sosa:Observation] [Device] -------------------- (madeRecord) ------------------ [Record]"@en ;
        skos:editorialNote   "See general remark about: EEG-CONCEPTS"@en ;
        skos:prefLabel       "made BCI record"@en ;
        skos:scopeNote       "Connecting a Device individual with its correspondent Record"@en ;
        wdrs:describedby     bci:madeRecord.POWDER .

bci:hasSubject  a            owl:ObjectProperty ;
        rdfs:domain          bci:Interaction ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:Subject ;
        terms:part           "Session,Subject"^^rdfs:Literal ;
        DCMIType:StillImage  "Subject.png"^^rdfs:Literal ;
        dct:modified         "2016-06-23T01:55:00"^^xsd:dateTime ;
        dct:title            "hasSubject"@en ;
        owl:inverseOf        bci:isSubjectOf ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects an Interaction with its set of Subjects."@en ;
        skos:prefLabel       "has subject (participant)"@en ;
        skos:scopeNote       "Connecting an Interaction with its set of Subjects"@en ;
        wdrs:describedby     bci:hasSubject.POWDER .

vann:preferredNamespacePrefix
        a       owl:AnnotationProperty .

DUL:Object  a   owl:Class .

bci:Aspect  a                owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      sosa:FeatureOfInterest ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:maxQualifiedCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onDataRange              xsd:positiveInteger ;
                               owl:onProperty               bci:hasIntensityLevel
                             ] ;
        rdfs:subClassOf      [ a                   owl:Restriction ;
                               owl:onProperty      bci:hasModality ;
                               owl:someValuesFrom  bci:Modality
                             ] ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "Aspect-and-Modality_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2017-08-20T19:50:00"^^xsd:dateTime ;
        dct:source           "[SSN], [Compton2009]"^^rdfs:Literal ;
        dct:title            "Aspect"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "[SSN] It's the classification of sosa:FeatureOfInterest in the course of an sosa:Observation for BCI Activities. This concept captures the view or interpretation for the Records, and thus, it defines the purpose and/or scope of BCI Activities observations."@en ;
        skos:editorialNote   "The following descriptions capture the definition of this concept ([oldSSN: FeatureOfInterest] and [Compton2009]) adjusted to this ontology: (*) An Aspect is an abstraction of BCI activities performed by humans, from the human body's state perspective. (*) Devices observe physiological signals (Modality-ies) of Aspects: for example, the EEG signals (Modality) of an emotion (Aspect). (*) Aspects are human body's states that are the target of sensing."@en , "See general remark about: ASPECT-and-MODALITY"@en ;
        skos:prefLabel       "aspect"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe the Aspects of the Records. Three main Aspects are defined in this ontology."@en ;
        wdrs:describedby     bci:Aspect.POWDER .

bci:RecordChannelingSpec
        a                    owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      bci:DeviceChannelingSpec ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onDataRange           xsd:nonNegativeInteger ;
                               owl:onProperty            bci:hasEndChannel ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onDataRange           xsd:nonNegativeInteger ;
                               owl:onProperty            bci:hasStartChannel ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onDataRange           xsd:positiveInteger ;
                               owl:onProperty            bci:hasNumberOfChannels ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        rdfs:subClassOf      [ a                   owl:Restriction ;
                               owl:onProperty      bci:extends ;
                               owl:someValuesFrom  bci:ChannelingSpec
                             ] ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onClass               bci:DeviceChannelingSpec ;
                               owl:onProperty            bci:extendsDeviceChannelingSpec ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        terms:part           "Descriptor,Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "Record_(SOSA-SSN).png"^^rdfs:Literal , "Descriptor_(SOSA-SSN).png"^^rdfs:Literal , "Aspect-and-Modality_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-08-08T23:15:00"^^xsd:dateTime ;
        dct:title            "RecordChannelingSpec"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Based on the adjusted settings of the DeviceChannelingSpec made for the observation, a Record has its own specific channeling schema information: that is, the logical components (Channels) and their extended generic metadata set that describe the Record's own logical data structure (specific to the observation and the Subject), according to the recording setup. A RecordChannelingSpec captures two information sets for a specific Record: (*) Its complete channeling schema description, in a form of an external document specification (outside the metadata repository). (*) Relevant metadata attributes regarding the general characteristics of the channeling schema: a set of related Channels. The structure described in a RecordChannelingSpec (first information set mentioned above) is based on a concrete subset of the DeviceChannelingSpec that the Device supports. Hence, for practical reasons, a RecordChannelingSpec is defined as a subclass of DeviceChannelingSpec."@en ;
        skos:editorialNote   "The channeling schema information objects are structured in the following way: The Channeling Schema of a... (*) Modality (ChannelingSpec): it's the complete theoretical spec; the generic template for a specific sosa:ObservableProperty. (*) -------- Device (DeviceChannelingSpec): it's a functional subset of the ChannelingSpec; -------- defines the logical subset of the complete spec for the specific functionality of a oldssn:SensingDevice. (*) ---------------- Record (RecordChannelingSpec): it's the concrete subset of the DeviceChannelingSpec for a specific sosa:Observation. ---------------- This information object is user specific according to recording setup."@en ;
        skos:example         "(*) A RecordChannelingSpec for an EegRecord would define the values of the positions for specific EegChannels used by the EegDevice, when the observation is made. A proper name for this spec would be EegRecordChannelingSpec. (*) For \"Precision\" Records, BCI applications may find important to keep the information regarding the Channel's coordinates)."@en ;
        skos:prefLabel       "record channeling schema spec"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe any relevant type of a RecordChannelingSpec to capture the external information that defines the channeling schema information of a Record."@en ;
        wdrs:describedby     bci:RecordChannelingSpec.POWDER .

bci:hasDeviceSpec  a         owl:ObjectProperty ;
        rdfs:domain          [ a            owl:Class ;
                               owl:unionOf  ( bci:Device bci:DeviceSpec )
                             ] ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:DeviceSpec ;
        rdfs:subPropertyOf   bci:hasDescriptor ;
        terms:part           "Descriptor,Sensors"^^rdfs:Literal ;
        DCMIType:StillImage  "Device_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-06-30T01:43:00"^^xsd:dateTime ;
        dct:source           "[XDF], [ESS]"^^rdfs:Literal ;
        dct:title            "hasDeviceSpec"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a (Device or DeviceSpec) with its set of related DeviceSpecs."@en ;
        skos:prefLabel       "has device spec"@en ;
        skos:scopeNote       "A hasDescriptor sub property for connecting a (Device or DeviceSpec) with its set of DeviceSpecs."@en ;
        wdrs:describedby     bci:hasDeviceSpec.POWDER .

bci:Context.Object  a        owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      DUL:Object ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Context.ObjectComponent ;
                               owl:onProperty               bci:hasObjectComponent
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "0"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Context.Object ;
                               owl:onProperty               bci:hasObject
                             ] ;
        rdfs:subClassOf      [ a                   owl:Restriction ;
                               owl:maxCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onProperty      bci:hasTitle
                             ] ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onClass               bci:Context.Role ;
                               owl:onProperty            bci:hasRole ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        terms:part           "Context"^^rdfs:Literal ;
        DCMIType:StillImage  "Context.Object.png"^^rdfs:Literal ;
        dct:modified         "2016-05-25T23:10:00"^^xsd:dateTime ;
        dct:source           "[Unity]"^^rdfs:Literal ;
        dct:title            "Context.Object"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Captures the architectural description of a stand-alone entity (\"logical\" or \"physical\") that participates in a Context.Scene. A Context.Object can be compose of Context.Objects. A Context.Object is compose of a non-empty set of Context.ObjectComponent."@en ;
        skos:prefLabel       "context object"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe the entities that participate in any Context.Scene."@en , "Describing entities in any Context.Scene."@en ;
        wdrs:describedby     bci:Context.Object.POWDER .

oldssn:observationResult
        a       owl:ObjectProperty .

bci:hasSampleCount  a        owl:FunctionalProperty , owl:DatatypeProperty ;
        rdfs:domain          bci:Record ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           xsd:positiveInteger ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "Record_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:conformsTo       "[Associated data type spec]."@en ;
        dct:modified         "2016-07-19T02:55:00"^^xsd:dateTime ;
        dct:source           "[XDF]"^^rdfs:Literal ;
        dct:title            "hasSampleCount"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Counts the number of samples of the Record."@en ;
        skos:editorialNote   "[XDF] It is defined in the StreamFooter chunk as sample_count."@en ;
        skos:prefLabel       "has sample count"@en ;
        wdrs:describedby     bci:hasSampleCount.POWDER .

[ a            owl:AllDisjointClasses ;
  owl:members  ( bci:CognitiveAspect bci:EmotionalAspect bci:NeurologicalAspect )
] .

ssn-system:Frequency  a  owl:Class .

bci:Descriptor  a            owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      DUL:InformationObject ;
        rdfs:subClassOf      [ a                owl:Restriction ;
                               owl:cardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onProperty   bci:hasTitle
                             ] ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onDataRange           xsd:anyURI ;
                               owl:onProperty            bci:hasLocator ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "0"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Descriptor ;
                               owl:onProperty               bci:hasDescriptor
                             ] ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onDataRange           xsd:dateTime ;
                               owl:onProperty            bci:hasDateTime ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        terms:part           "Descriptor"^^rdfs:Literal ;
        DCMIType:StillImage  "Descriptor_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-06-30T01:30:00"^^xsd:dateTime ;
        dct:source           "[ESS], [XDF]"^^rdfs:Literal ;
        dct:title            "Descriptor"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Describes an external Web resource that complements the information related to a specific entity found in this ontology. In a general sense, represents a class of information objects that describes metadata. Each individual of this class refers to an external file/document with extensive information to the associated metadata object. A Descriptor can have a related Descriptor set. This concept is defined as a subclass of DUL:InformationObject."@en ;
        skos:example         "[XDF] and [ESS] BCI applications may extend this concept based on its purpose as an information object (practical usage of the Web resource). Thus, some subclasses of this concept could be: (*) Annotation. (*) Channel locations. (*) Descriptive metadata. (*) Event instance. (*) Experiment note. (*) Specification."@en ;
        skos:prefLabel       "descriptor of an external resource"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe any relevant type of Descriptors to capture specific external information that complements a metadata object."@en ;
        wdrs:describedby     bci:Descriptor.POWDER .

bci:isSessionOf  a           owl:FunctionalProperty , owl:ObjectProperty ;
        rdfs:domain          bci:Session ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           [ a            owl:Class ;
                               owl:unionOf  ( bci:Context bci:Interaction bci:Subject )
                             ] ;
        terms:part           "Session"^^rdfs:Literal ;
        DCMIType:StillImage  "Session.png"^^rdfs:Literal ;
        dct:modified         "2016-06-23T22:13:00"^^xsd:dateTime ;
        dct:title            "isSessionOf"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a Session with its associated (Context or Interaction or Subject)."@en ;
        skos:prefLabel       "is session of"@en ;
        skos:scopeNote       "Connecting a Session with its related (Context or Interaction or Subject)."@en ;
        wdrs:describedby     bci:isSessionOf.POWDER .

terms:part  a   owl:AnnotationProperty .

bci:NeurologicalAspect
        a                    owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      bci:Aspect ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "Aspect-and-Modality_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-05-24T00:47:00"^^xsd:dateTime ;
        dct:title            "NeurologicalAspect"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Describes the classification of NeurologicalAspects. One application for this Aspect is glaucoma monitoring."@en ;
        skos:prefLabel       "neurological aspect"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe the NeurologicalAspects of the Records."@en ;
        wdrs:describedby     bci:NeurologicalAspect.POWDER .

dbp:Person  a   owl:Class .

bci:hasNext  a               owl:ObjectProperty , owl:FunctionalProperty ;
        rdfs:domain          [ a            owl:Class ;
                               owl:unionOf  ( bci:Context.Scene bci:DataBlock bci:Record bci:RecordedData )
                             ] ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           [ a            owl:Class ;
                               owl:unionOf  ( bci:Context.Scene bci:DataBlock bci:Record bci:RecordedData )
                             ] ;
        terms:part           "Context,Results,Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "DataBlock_(SOSA-SSN).png"^^rdfs:Literal , "Context.Scene.png"^^rdfs:Literal ;
        dct:modified         "2016-07-07T02:50:00"^^xsd:dateTime ;
        dct:title            "hasNext"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a (Context.Scene or Record or RecordedData or DataBlock) with its following (next) (Context.Scene or Record or RecordedData or DataBlock) of the sequence."@en ;
        skos:example         "(*) [Context.Scene] On a Video Game: (Level 3-2) hasNext (Level 3-3). (*) [Record]: an observation is linked to its following observation. Their difference could be on their channeling settings. (*) [RecordedData]: links to the following data version of the current data set. (*) [DataBlock]: points to the following data unit value from the current one along the sequence."@en ;
        skos:prefLabel       "has next (following)"@en ;
        skos:scopeNote       "Connecting a (Context.Scene or Record or RecordedData or DataBlock) with its next correspondent (Context.Scene or Record or RecordedData or DataBlock)."@en ;
        wdrs:describedby     bci:hasNext.POWDER .

DCMIType:InteractiveResource
        a       owl:AnnotationProperty .

dct:date  a     owl:AnnotationProperty .

bci:Session  a               owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      DUL:Situation ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onClass               bci:Playout ;
                               owl:onProperty            bci:hasPlayout ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        rdfs:subClassOf      [ a                   owl:Restriction ;
                               owl:maxCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onProperty      bci:hasTitle
                             ] ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onDataRange           xsd:dateTime ;
                               owl:onProperty            bci:hasStartTime ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "0"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:SubjectState ;
                               owl:onProperty               bci:hasSubjectState
                             ] ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onClass               bci:Activity ;
                               owl:onProperty            bci:hasActivity ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Record ;
                               owl:onProperty               bci:hasRecord
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "0"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Collection ;
                               owl:onProperty               bci:isSituationOf
                             ] ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onDataRange           xsd:dateTime ;
                               owl:onProperty            bci:hasEndTime ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "0"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Descriptor ;
                               owl:onProperty               bci:hasDescriptor
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "0"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Actuation ;
                               owl:onProperty               bci:hasActuation
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:maxQualifiedCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Interaction ;
                               owl:onProperty               bci:isSessionOf
                             ] ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onClass               bci:Context ;
                               owl:onProperty            bci:isSessionOf ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        rdfs:subClassOf      [ a                         owl:Restriction ;
                               owl:onClass               bci:Subject ;
                               owl:onProperty            bci:isSessionOf ;
                               owl:qualifiedCardinality  "1"^^xsd:nonNegativeInteger
                             ] ;
        terms:part           "Session"^^rdfs:Literal ;
        DCMIType:StillImage  "Session.png"^^rdfs:Literal ;
        dct:modified         "2016-07-01T03:03:00"^^xsd:dateTime ;
        dct:source           "[ESS], [SSN]"^^rdfs:Literal ;
        dct:title            "Session"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "A Session is a DUL:Situation that monitors how one Subject interacts with one Context while performing one Activity, throughout collecting a nonempty set of multimodal biomedical sosa:Observations (Records).A Session has the following characteristics and restrictions: (*) Comprises a collection of multimodal BCI data capture tasks (each one with its own specific measurement purpose: Aspect). (*) Monitors exactly one Subject. (*) Monitors exactly one Activity (performed by the Subject). (*) Monitors exactly one Context (while the Subject interacts with it). (*) Comprises exactly one Playout collected from the associated Context. (*) Groups different and multiple Records (multimodal data) that are observed (collected) simultaneously from the Subject. (*) May group different and multiple Actuation simultaneously from the Subject. [SSN]: The concept of Session defines an appropiate structure to group multiple Records (multimodal data), based on the following description: \"Observations (Records) of multiple features (Aspects) or multiple properties (Modality-ies) of the one feature should be represented as either compound properties, features and values or as multiple observations, grouped in some appropriate structure\". (A similar depiction applies to Actuation). In the BCI research domain, a Session can have multipurpose extended metadata sets to describe broader concepts and definitions regarding the nature and purpose of this information object. These external metadata sets can be associated with Descriptors."@en ;
        skos:editorialNote   "See general remark about: PROCEDURES"@en ;
        skos:example         "External descriptions that complement and extend the information about a Session, can be added through Descriptors. BCI applications based on [ESS 1.0] could define Descriptors to include information, such as: (*) Lab. ID. -- identifier of the session used in the original lab notes (if available, otherwise insert 'NA'). (*) Task Label. -- indicates which task is being performed in the session (e.g. A, B, C,...). Only use this node if there are different tasks. Otherwise leave the node blank. (*) For Session entities: If different tasks occur in the same session repeat the session node with a different \"taskLabel\", and other information that may be different, such as the \"eegRecording\" node. (*) For EventCode entities: Use this only if there are multiple tasks in the study and they use the same event codes, otherwise leave blank."@en ;
        skos:historyNote     "In [ESS 2.0], a Session is related to the RecordedParameterSet concept, found in the following XML element: (../recordingParameterSet/recordingParameterSetLabel). The \"recordingParameterSet\" node groups the information of multiple Modality-ies and, also, DeviceSpecs.Hence, it implies that a Session (a Record set) is associated (used) with multiple Devices, due of the \"dataRecording\" node definition in ESS (multiple RecordedData)."@en ;
        skos:prefLabel       "BCI session"@en ;
        wdrs:describedby     bci:Session.POWDER .

bci:hasNonChannelData
        a                    owl:ObjectProperty ;
        rdfs:domain          bci:Device ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:NonChannel ;
        rdfs:subPropertyOf   ssn-system:hasSystemCapability ;
        terms:part           "Sensors"^^rdfs:Literal ;
        DCMIType:StillImage  "MeasurementCapability_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2017-08-30T22:44:00"^^xsd:dateTime ;
        dct:source           "[SSN]"^^rdfs:Literal ;
        dct:title            "hasNonChannelData"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "[SSN] Relation from a Device to a NonChannel describing the non-channeling measurement capabilities (a set of measurement properties) of the BCI device."@en ;
        skos:editorialNote   "See general remark about: EEG-CONCEPTS"@en , "See general remark about: 1_MAPPINGS-TO-SOSA-SSN"@en , "This ontology leaves open to BCI applications the way how they should describe properly basic non-channeling measurement capabilities for its relevant set of different classes of sensors (Device class hierarchy) used in BCI activities, as explained in [SSN] System Capabilities Module and [oldSSN] MeasuringCapability Module. Based on their system requirements, BCI applications may define a set of restrictions and specialized connections (subproperties) on the property hasNonChannelData (subproperty of ssn-system:hasSystemCapability) for each particular subclass of Device (subclass of sosa:Sensor), which describes sensors for specific types."@en ;
        skos:prefLabel       "has non-channeling data (other BCI measurement capability)"@en ;
        wdrs:describedby     bci:hasNonChannelData.POWDER .

bci:hasFeatureParameter
        a                    owl:ObjectProperty ;
        rdfs:domain          [ a            owl:Class ;
                               owl:unionOf  ( bci:Record bci:ResponseTag )
                             ] ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:FeatureParameter ;
        terms:part           "AnnotationTag"^^rdfs:Literal ;
        DCMIType:StillImage  "Record_(SOSA-SSN).png"^^rdfs:Literal , "Model_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2018-01-03T01:13:00"^^xsd:dateTime ;
        dct:title            "hasFeatureParameter"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "A ResponseTag or a Record has a set of FeatureParameters."@en ;
        skos:prefLabel       "has feature"@en ;
        skos:scopeNote       "Connecting a ResponseTag or a Record with its correspondent set of FeatureParameters."@en ;
        wdrs:describedby     bci:hasFeatureParameter.POWDER .

dct:references  a  owl:AnnotationProperty .

bci:hasDateTime  a           owl:DatatypeProperty , owl:FunctionalProperty ;
        rdfs:domain          bci:Descriptor ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           xsd:dateTime ;
        terms:part           "Descriptor"^^rdfs:Literal ;
        DCMIType:StillImage  "Descriptor_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:conformsTo       "[Associated data type spec]."@en ;
        dct:modified         "2016-06-29T00:35:00"^^xsd:dateTime ;
        dct:source           "[OWL-Time]"^^rdfs:Literal ;
        dct:title            "hasDateTime"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "XSD dateTime associated to an entity. BCI applications should, at least, measure these time values in minutes."@en ;
        skos:prefLabel       "has date time"@en ;
        wdrs:describedby     bci:hasDateTime.POWDER .

bci:extends  a                  owl:ObjectProperty ;
        rdfs:domain             bci:RecordChannelingSpec ;
        rdfs:isDefinedBy        bci: ;
        rdfs:range              bci:ChannelingSpec ;
        rdfs:subPropertyOf      bci:hasDescriptor ;
        terms:part              "Descriptor,Observations"^^rdfs:Literal ;
        DCMIType:StillImage     "Aspect-and-Modality_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified            "2018-01-15T00:54:00"^^xsd:dateTime ;
        dct:title               "extends"@en ;
        owl:propertyChainAxiom  ( bci:extendsDeviceChannelingSpec bci:extendsChannelingSpec ) ;
        skos:changeNote         "Status: *STABLE*"@en ;
        skos:definition         "Relation between a RecordChannelingSpec and a ChannelingSpec that the observation extends through the associated DeviceChannelingSpec. The object property composition (owl:propertyChainAxiom) ensures that if a DeviceChannelingSpec extends a particular ChannelingSpec, then one can infer that the RecordChannelingSpec also extends that ChannelingSpec. This extended spec of the channeling schema information object: RecordChannelingSpec.extendsDeviceChannelingSpec * DeviceChannelingSpec.extendsChannelingSpec --> RecordChannelingSpec.extends := ChannelingSpec."@en ;
        skos:prefLabel          "extends its related modality channeling schema spec"@en ;
        skos:scopeNote          "A hasDescriptor sub property that connects a RecordChannelingSpec with its related ChannelingSpec."@en ;
        wdrs:describedby        bci:extends.POWDER .

bci:hasTitle  a           owl:DatatypeProperty , owl:FunctionalProperty ;
        rdfs:domain       [ a            owl:Class ;
                            owl:unionOf  ( bci:Collection bci:Context bci:Context.Object bci:Context.ObjectComponent bci:Context.ObjectComponent.Event bci:Context.Scene bci:Descriptor bci:Interaction bci:Session )
                          ] ;
        rdfs:isDefinedBy  bci: ;
        rdfs:range        rdfs:Literal ;
        terms:part        "Context,Descriptor,Session"^^rdfs:Literal ;
        dct:conformsTo    "[Associated data type spec]."@en ;
        dct:modified      "2016-09-29T03:24:00"^^xsd:dateTime ;
        dct:title         "hasTitle"@en ;
        skos:changeNote   "Status: *STABLE*"@en ;
        skos:definition   "The given title or logical name of an entity. It is used to associate a human-readable label to entities."@en ;
        skos:prefLabel    "has title"@en ;
        wdrs:describedby  bci:hasTitle.POWDER .

bci:hasSession  a            owl:InverseFunctionalProperty , owl:ObjectProperty ;
        rdfs:domain          [ a            owl:Class ;
                               owl:unionOf  ( bci:Context bci:Interaction bci:Subject )
                             ] ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:Session ;
        terms:part           "Context,Session,Subject"^^rdfs:Literal ;
        DCMIType:StillImage  "Session.png"^^rdfs:Literal ;
        dct:modified         "2016-06-23T22:08:00"^^xsd:dateTime ;
        dct:title            "hasSession"@en ;
        owl:inverseOf        bci:isSessionOf ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a (Context or Interaction or Subject) with a set of Sessions that are associated with it."@en ;
        skos:prefLabel       "has session"@en ;
        skos:scopeNote       "Connecting a (Context or Interaction or Subject) with its related set of Sessions"@en ;
        wdrs:describedby     bci:hasSession.POWDER .

oldssn:SensorOutput  a  owl:Class .

oldssn:forProperty  a  owl:ObjectProperty .

bci:Context.Scene  a         owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "0"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Context.Scene ;
                               owl:onProperty               bci:hasScene
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "0"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Context.Scene ;
                               owl:onProperty               bci:hasNext
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "0"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Context.Scene ;
                               owl:onProperty               bci:hasPrevious
                             ] ;
        rdfs:subClassOf      [ a                            owl:Restriction ;
                               owl:minQualifiedCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onClass                  bci:Context.Object ;
                               owl:onProperty               bci:hasObject
                             ] ;
        rdfs:subClassOf      [ a                   owl:Restriction ;
                               owl:maxCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onProperty      bci:hasTitle
                             ] ;
        terms:part           "Context"^^rdfs:Literal ;
        DCMIType:StillImage  "Context.Scene.png"^^rdfs:Literal ;
        dct:modified         "2016-09-29T03:24:00"^^xsd:dateTime ;
        dct:source           "[Unity]"^^rdfs:Literal ;
        dct:title            "Context.Scene"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "It is the architectural description of a specific part of a Context, based on the dimension of time (temporality). A Context is compose of a non-empty sequence (see the editorial note) of Context.Scenes. A Context.Scene is related to other Context.Scene based on its temporality: occurrence in its sequence. A Context.Scene object can be composed of multiple Context.Scenes. A Context.Scene corresponds to the notion of World or Level on a Gaming platform."@en ;
        skos:editorialNote   "(*) \"In mathematics, a sequence is an ordered collection of objects in which repetitions are allowed. (...) Unlike a set, order matters, and exactly the same elements can appear multiple times at different positions in the sequence\". Reference: [Wikipedia: Sequence]"@en ;
        skos:example         "(*) On a Simulation: [driving a car in not-busy day on a freeway]; [driving a car in rush hour on a main city road]. (*) On a Video Game: World 3; Level 3-2."@en ;
        skos:prefLabel       "context scene"@en ;
        wdrs:describedby     bci:Context.Scene.POWDER .

bci:XdfDataFormat  a         owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      bci:DataFormat ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "RecordedData_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:conformsTo       "The XDF DataFormat."@en ;
        dct:modified         "2016-06-03T02:16:00"^^xsd:dateTime ;
        dct:source           "[XDF]"^^rdfs:Literal ;
        dct:title            "XdfDataFormat"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Represents a XDF DataFormat. XDF is a general-purpose container format for multi-channel time series data with extensive associated meta-information. XDF is tailored towards biosignal data such as EEG, EMG, EOG, ECG, GSR, MEG, etc."@en ;
        skos:prefLabel       "XDF EEG data format"@en ;
        wdrs:describedby     bci:XdfDataFormat.POWDER .

bci:EmotionalAspect  a       owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      bci:Aspect ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "Aspect-and-Modality_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-05-24T00:56:00"^^xsd:dateTime ;
        dct:title            "EmotionalAspect"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Describes the classification of EmotionalAspects."@en ;
        skos:prefLabel       "emotional aspect"@en ;
        skos:scopeNote       "This class is intended to be the root of a class hierarchy. Domain-specific applications can extend this class hierarchy for their own purposes to describe the EmotionalAspects of the Records."@en ;
        wdrs:describedby     bci:EmotionalAspect.POWDER .

bci:hasType  a               owl:FunctionalProperty , owl:DatatypeProperty ;
        rdfs:domain          bci:AccessMethod ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           [ a          rdfs:Datatype ;
                               owl:oneOf  [ a          rdf:List ;
                                            rdf:first  "File"^^xsd:string ;
                                            rdf:rest   [ a          rdf:List ;
                                                         rdf:first  "Stream"^^xsd:string ;
                                                         rdf:rest   ()
                                                       
                                                       ]
                                          ]
                             ] ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "RecordedData_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:conformsTo       "[Associated data type spec]."@en ;
        dct:modified         "2016-06-01T01:55:00"^^xsd:dateTime ;
        dct:title            "hasType"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Indicates the AccessMethod's type: the nature of how the RecordedData can be accessed. This ontology only defines the two following Access Method Type: (*) \"File\": archived access method. (*) \"Stream\": real-time access method."@en ;
        skos:prefLabel       "has access method type (nature)"@en ;
        wdrs:describedby     bci:hasType.POWDER .

oldssn:isProxyFor  a  owl:ObjectProperty .

bci:isProducedByDevice
        a                       owl:ObjectProperty ;
        rdfs:domain             bci:RecordedData ;
        rdfs:isDefinedBy        bci: ;
        rdfs:range              bci:Device ;
        terms:part              "Observations"^^rdfs:Literal ;
        DCMIType:StillImage     "RecordedData_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified            "2018-01-15T00:51:00"^^xsd:dateTime ;
        dct:source              "[oldSSN]"^^rdfs:Literal ;
        dct:title               "isProducedByDevice"@en ;
        owl:propertyChainAxiom  ( sosa:isResultOf sosa:madeBySensor ) ;
        skos:changeNote         "Status: *STABLE*"@en ;
        skos:definition         "Connects a RecordedData with its correspondent Device that produced it. This can be read, as follow: \"A RecordedData is produced by a Device\". This supported functionality: RecordedData.sosa:isResultOf * Record.sosa:madeBySensor --> RecordedData.isProducedByDevice := Device."@en ;
        skos:editorialNote      "This object property was previously defined as a subproperty of oldssn:isProducedBy: [oldssn:SensorOutput] ------ (oldssn:isProducedBy) ------ [oldssn:Sensor] [RecordedData] -------- (isProducedByDevice) ---------- [Device]"@en , "See general remark about: 1_MAPPINGS-TO-SOSA-SSN"@en ;
        skos:prefLabel          "is produced by device"@en ;
        skos:scopeNote          "Connecting a RecordedData with its correspondent Device that produced it."@en ;
        wdrs:describedby        bci:isProducedByDevice.POWDER .

oldssn:detects  a  owl:ObjectProperty .

bci:hasEegChannelData
        a                    owl:ObjectProperty ;
        rdfs:domain          bci:DeviceChannelingSpec ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:EegChannel ;
        rdfs:subPropertyOf   bci:hasChannelData ;
        terms:part           "EEG"^^rdfs:Literal ;
        DCMIType:StillImage  "MeasurementCapability_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-08-14T05:39:00"^^xsd:dateTime ;
        dct:source           "[XDF]"^^rdfs:Literal ;
        dct:title            "hasEegChannelData"@en ;
        owl:deprecated       "--Concerning EEG, this ontology only defines its related classes. It does not extend or define any specific properties for EEG.-- $ 04:27 AM 2016-07-29 $"^^rdfs:Literal , true ;
        owl:inverseOf        bci:isEegChannelDataOf ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects an EegDeviceChannelingSpec with the set of EegChannels that comprises its internal structure."@en ;
        skos:editorialNote   "See general remark about: EEG-CONCEPTS"@en ;
        skos:prefLabel       "has EEG channel data"@en ;
        skos:scopeNote       "Connecting an EegDeviceChannelingSpec with its EegChannel set."@en ;
        wdrs:describedby     bci:hasEegChannelData.POWDER .

bci:hasSubjectState  a       owl:ObjectProperty ;
        rdfs:domain          bci:Session ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           bci:SubjectState ;
        rdfs:subPropertyOf   bci:hasDescriptor ;
        terms:part           "Session"^^rdfs:Literal ;
        DCMIType:StillImage  "Session.png"^^rdfs:Literal ;
        dct:modified         "2016-06-30T01:43:00"^^xsd:dateTime ;
        dct:title            "hasSubjectState"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a Session with a set of SubjectStates which describe the overall state of the Subject during the Session."@en ;
        skos:prefLabel       "has subject state"@en ;
        skos:scopeNote       "A hasDescriptor sub property for connecting a Session with a set of SubjectStates"@en ;
        wdrs:describedby     bci:hasSubjectState.POWDER .

bci:AccessMethod.MQTT
        a                    owl:Class ;
        rdfs:isDefinedBy     bci: ;
        rdfs:subClassOf      bci:AccessMethod ;
        rdfs:subClassOf      [ a               owl:Restriction ;
                               owl:hasValue    "Stream"^^xsd:string ;
                               owl:onProperty  bci:hasType
                             ] ;
        rdfs:subClassOf      [ a                owl:Restriction ;
                               owl:cardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onProperty   bci:hasMQTT.ID
                             ] ;
        rdfs:subClassOf      [ a                owl:Restriction ;
                               owl:cardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onProperty   bci:hasMQTT.Broker
                             ] ;
        rdfs:subClassOf      [ a                   owl:Restriction ;
                               owl:minCardinality  "1"^^xsd:nonNegativeInteger ;
                               owl:onProperty      bci:hasMQTT.Topic
                             ] ;
        terms:part           "Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "RecordedData_(SOSA-SSN).png"^^rdfs:Literal ;
        dct:modified         "2016-07-05T04:35:00"^^xsd:dateTime ;
        dct:title            "AccessMethod.MQTT"@en ;
        owl:deprecated       "--This ontology should be agnostic to the data access-- $ 04:35 AM 2016-07-05 $"^^rdfs:Literal , true ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Represents a MQTT AccessMethod, which is a machine-to-machine (M2M)/\"Internet of Things\" connectivity protocol. MQTT was designed as an extremely lightweight publish/subscribe messaging transport. This concept describes the corresponding definition of access parameters needed for a suitable MQTT connection."@en ;
        skos:prefLabel       "MQTT Access Method"@en ;
        wdrs:describedby     bci:AccessMethod.MQTT.POWDER .

bci:hasPrevious  a           owl:FunctionalProperty , owl:ObjectProperty ;
        rdfs:domain          [ a            owl:Class ;
                               owl:unionOf  ( bci:Context.Scene bci:DataBlock bci:Record bci:RecordedData )
                             ] ;
        rdfs:isDefinedBy     bci: ;
        rdfs:range           [ a            owl:Class ;
                               owl:unionOf  ( bci:Context.Scene bci:DataBlock bci:Record bci:RecordedData )
                             ] ;
        terms:part           "Context,Results,Observations"^^rdfs:Literal ;
        DCMIType:StillImage  "DataBlock_(SOSA-SSN).png"^^rdfs:Literal , "Context.Scene.png"^^rdfs:Literal ;
        dct:modified         "2016-07-07T02:50:00"^^xsd:dateTime ;
        dct:title            "hasPrevious"@en ;
        skos:changeNote      "Status: *STABLE*"@en ;
        skos:definition      "Connects a (Context.Scene or Record or RecordedData or DataBlock) with its previous (Context.Scene or Record or RecordedData or DataBlock) of the sequence."@en ;
        skos:example         "(*) [Context.Scene] On a Video Game: (Level 3-2) hasPrevious (Level 3-1). (*) [Record]: an observation is linked to its previous observation. Their difference could be on their channeling settings. (*) [RecordedData]: links to the previous data version of the current data set. (*) [DataBlock]: points to the previous data unit value from the current one along the sequence."@en ;
        skos:prefLabel       "has previous (before)"@en ;
        skos:scopeNote       "Connecting a (Context.Scene or Record or RecordedData or DataBlock) with its previous (Context.Scene or Record or RecordedData or DataBlock)."@en ;
        wdrs:describedby     bci:hasPrevious.POWDER .