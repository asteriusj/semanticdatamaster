{	
	"Text": {
		"type": "string"
	},
	"xsd$string": {
		"type": "string"
	},
	"Boolean": {
		"type": "boolean"
	},
	"xsd$boolean": {
		"type": "boolean"
	},
	"DateTime": {
		"type": "string",
		"format": "date-time",
		"pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
	},
	"xsd$dateTime": {
		"type": "string",
		"format": "date-time",
		"pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
	},
	"Date": {
		"type": "string",
		"format": "http://www.w3.org/2001/XMLSchema#date",
		"pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
	},
	"xsd$date": {
		"type": "string",
		"format": "http://www.w3.org/2001/XMLSchema#date",
		"pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
	},
	"Time": {
		"type": "string",
		"format": "http://www.w3.org/2001/XMLSchema#time",
		"pattern": "^(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
	},
	"xsd$time": {
		"type": "string",
		"format": "http://www.w3.org/2001/XMLSchema#time",
		"pattern": "^(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
	},
	"xsd$duration": {
		"type": "string",
		"format": "http://www.w3.org/2001/XMLSchema#duration",
		"pattern": "^[-]?P(?!$)(?:\\d+Y)?(?:\\d+M)?(?:\\d+D)?(?:T(?!$)(?:\\d+H)?(?:\\d+M)?(?:\\d+(?:\\.\\d+)?S)?)?$"
	},
	"xsd$gYearMonth": {
		"type": "string",
		"format": "http://www.w3.org/2001/XMLSchema#gYearMonth",
		"pattern": "^(-?[0-9]+-[0-9][0-9])(Z|[+-][0-9][0-9]:[0-9][0-9])?$"
	},
	"xsd$gYear": {
		"type": "string",
		"format": "http://www.w3.org/2001/XMLSchema#gYear",
		"pattern": "^(-?[0-9]+)(Z|[+-][0-9][0-9]:[0-9][0-9])?$"
	},
	"xsd$gMonthDay": {
		"type": "string",
		"format": "http://www.w3.org/2001/XMLSchema#gMonthDay",
		"pattern": "^--([0-9][0-9]-[0-9][0-9])(Z|[+-][0-9][0-9]:[0-9][0-9])?$"
	},
	"xsd$gDay": {
		"type": "string",
		"format": "http://www.w3.org/2001/XMLSchema#gDay",
		"pattern": "^---([0-9][0-9])(Z|[+-][0-9][0-9]:[0-9][0-9])?$"
	},
	"xsd$gMonth": {
		"type": "string",
		"format": "http://www.w3.org/2001/XMLSchema#gMonth",
		"pattern": "^--([0-9][0-9])(--)?(Z|[+-][0-9][0-9]:[0-9][0-9])?$",
		"description": "This tolerates the bogus format --MM-- which was wrongly permitted by the original schema spec."
	},
	"Number": {
		"type": "number"
	},
	"Float": {
		"type": "number",
		"format": "http://schema.org/Float"
	},
	"xsd$float": {
		"type": "number",
		"format": "http://www.w3.org/2001/XMLSchema#float"
	},
	"xsd$decimal": {
		"type": "number",
		"format": "http://www.w3.org/2001/XMLSchema#decimal"
	},
	"xsd$double": {
		"type": "number",
		"format": "http://www.w3.org/2001/XMLSchema#double"
	},
	"Integer": {
		"type": "integer"
	},
	"xsd$integer": {
		"type": "integer",
		"format": "http://www.w3.org/2001/XMLSchema#integer"
	},
	"xsd$nonPositiveInteger": {
		"type": "integer",
		"maximum": 0,
		"exclusiveMaximum": false,
		"format": "http://www.w3.org/2001/XMLSchema#nonPositiveInteger"
	},
	"xsd$negativeInteger": {
		"type": "integer",
		"maximum": 0,
		"exclusiveMaximum": true,
		"format": "http://www.w3.org/2001/XMLSchema#negativeInteger"
	},
	"xsd$nonNegativeInteger": {
		"type": "integer",
		"minimum": 0,
		"exclusiveMinimum": false,
		"format": "http://www.w3.org/2001/XMLSchema#nonNegativeInteger"
	},
	"xsd$positiveInteger": {
		"type": "integer",
		"minimum": 0,
		"exclusiveMinimum": true,
		"format": "http://www.w3.org/2001/XMLSchema#positiveInteger"
	},
	
	"xsd$long": {
		"type": "integer",
		"minimum": -9223372036854775808,
		"maximum": 9223372036854775807,
		"exclusiveMinimum": false,
		"exclusiveMaximum": false,
		"format": "http://www.w3.org/2001/XMLSchema#long"
	},
	"xsd$int": {
		"type": "integer",
		"minimum": -2147483648,
		"maximum": 2147483647,
		"exclusiveMinimum": false,
		"exclusiveMaximum": false,
		"format": "http://www.w3.org/2001/XMLSchema#int"
	},
	"xsd$short": {
		"type": "integer",
		"minimum": -32768,
		"maximum": 32767,
		"exclusiveMinimum": false,
		"exclusiveMaximum": false,
		"format": "http://www.w3.org/2001/XMLSchema#short"
	},
	"xsd$byte": {
		"type": "integer",
		"minimum": -128,
		"maximum": 127,
		"exclusiveMinimum": false,
		"exclusiveMaximum": false,
		"format": "http://www.w3.org/2001/XMLSchema#byte"
	},
	"xsd$unsignedLong": {
		"type": "integer",
		"minimum": 0,
		"maximum": 18446744073709551615,
		"exclusiveMinimum": false,
		"exclusiveMaximum": false,
		"format": "http://www.w3.org/2001/XMLSchema#unsignedLong"
	},
	"xsd$unsignedInt": {
		"type": "integer",
		"minimum": 0,
		"maximum": 4294967295,
		"exclusiveMinimum": false,
		"exclusiveMaximum": false,
		"format": "http://www.w3.org/2001/XMLSchema#unsignedInt"
	},
	"xsd$unsignedShort": {
		"type": "integer",
		"minimum": 0,
		"maximum": 65536,
		"exclusiveMinimum": false,
		"exclusiveMaximum": false,
		"format": "http://www.w3.org/2001/XMLSchema#unsignedShort"
	},
	"xsd$unsignedByte": {
		"type": "integer",
		"minimum": 0,
		"maximum": 255,
		"exclusiveMinimum": false,
		"exclusiveMaximum": false,
		"format": "http://www.w3.org/2001/XMLSchema#unsignedByte"
	},
	
	"URL": {
		"type": "string",
		"format": "uri"
	},
	"xsd$anyURI": {
		"type": "string",
		"format": "uri",
		"pattern": "(^((([A-Za-z])[A-Za-z0-9+\\-\\.]*):((//(((([A-Za-z0-9\\-\\._~!$&'()*+,;=:]|(%[0-9A-Fa-f][0-9A-Fa-f]))*@))?((\\[(((((([0-9A-Fa-f]){0,4}:)){6}((([0-9A-Fa-f]){0,4}:([0-9A-Fa-f]){0,4})|(([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5])))))|(::((([0-9A-Fa-f]){0,4}:)){5}((([0-9A-Fa-f]){0,4}:([0-9A-Fa-f]){0,4})|(([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5])))))|((([0-9A-Fa-f]){0,4})?::((([0-9A-Fa-f]){0,4}:)){4}((([0-9A-Fa-f]){0,4}:([0-9A-Fa-f]){0,4})|(([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5])))))|(((((([0-9A-Fa-f]){0,4}:))?([0-9A-Fa-f]){0,4}))?::((([0-9A-Fa-f]){0,4}:)){3}((([0-9A-Fa-f]){0,4}:([0-9A-Fa-f]){0,4})|(([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5])))))|(((((([0-9A-Fa-f]){0,4}:)){0,2}([0-9A-Fa-f]){0,4}))?::((([0-9A-Fa-f]){0,4}:)){2}((([0-9A-Fa-f]){0,4}:([0-9A-Fa-f]){0,4})|(([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5])))))|(((((([0-9A-Fa-f]){0,4}:)){0,3}([0-9A-Fa-f]){0,4}))?::([0-9A-Fa-f]){0,4}:((([0-9A-Fa-f]){0,4}:([0-9A-Fa-f]){0,4})|(([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5])))))|(((((([0-9A-Fa-f]){0,4}:)){0,4}([0-9A-Fa-f]){0,4}))?::((([0-9A-Fa-f]){0,4}:([0-9A-Fa-f]){0,4})|(([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5])))))|(((((([0-9A-Fa-f]){0,4}:)){0,5}([0-9A-Fa-f]){0,4}))?::([0-9A-Fa-f]){0,4})|(((((([0-9A-Fa-f]){0,4}:)){0,6}([0-9A-Fa-f]){0,4}))?::))|(v([0-9A-Fa-f])+\\.(([A-Za-z0-9\\-\\._~]|[!$&'()*+,;=]|:))+))\\])|(([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5])))|(([A-Za-z0-9\\-\\._~]|(%[0-9A-Fa-f][0-9A-Fa-f])|[!$&'()*+,;=]))*)((:([0-9])*))?)((/(([A-Za-z0-9\\-\\._~!$&'()*+,;=:@]|(%[0-9A-Fa-f][0-9A-Fa-f])))*))*)|(/(((([A-Za-z0-9\\-\\._~!$&'()*+,;=:@]|(%[0-9A-Fa-f][0-9A-Fa-f])))+((/(([A-Za-z0-9\\-\\._~!$&'()*+,;=:@]|(%[0-9A-Fa-f][0-9A-Fa-f])))*))*))?)|((([A-Za-z0-9\\-\\._~!$&'()*+,;=:@]|(%[0-9A-Fa-f][0-9A-Fa-f])))+((/(([A-Za-z0-9\\-\\._~!$&'()*+,;=:@]|(%[0-9A-Fa-f][0-9A-Fa-f])))*))*)|)((\\?((([A-Za-z0-9\\-\\._~!$&'()*+,;=:@]|(%[0-9A-Fa-f][0-9A-Fa-f]))|/|\\?))*))?((#((([A-Za-z0-9\\-\\._~!$&'()*+,;=:@]|(%[0-9A-Fa-f][0-9A-Fa-f]))|/|\\?))*))?))|(^(((//(((([A-Za-z0-9\\-\\._~!$&'()*+,;=:]|(%[0-9A-Fa-f][0-9A-Fa-f]))*@))?((\\[(((((([0-9A-Fa-f]){0,4}:)){6}((([0-9A-Fa-f]){0,4}:([0-9A-Fa-f]){0,4})|(([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5])))))|(::((([0-9A-Fa-f]){0,4}:)){5}((([0-9A-Fa-f]){0,4}:([0-9A-Fa-f]){0,4})|(([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5])))))|((([0-9A-Fa-f]){0,4})?::((([0-9A-Fa-f]){0,4}:)){4}((([0-9A-Fa-f]){0,4}:([0-9A-Fa-f]){0,4})|(([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5])))))|(((((([0-9A-Fa-f]){0,4}:))?([0-9A-Fa-f]){0,4}))?::((([0-9A-Fa-f]){0,4}:)){3}((([0-9A-Fa-f]){0,4}:([0-9A-Fa-f]){0,4})|(([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5])))))|(((((([0-9A-Fa-f]){0,4}:)){0,2}([0-9A-Fa-f]){0,4}))?::((([0-9A-Fa-f]){0,4}:)){2}((([0-9A-Fa-f]){0,4}:([0-9A-Fa-f]){0,4})|(([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5])))))|(((((([0-9A-Fa-f]){0,4}:)){0,3}([0-9A-Fa-f]){0,4}))?::([0-9A-Fa-f]){0,4}:((([0-9A-Fa-f]){0,4}:([0-9A-Fa-f]){0,4})|(([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5])))))|(((((([0-9A-Fa-f]){0,4}:)){0,4}([0-9A-Fa-f]){0,4}))?::((([0-9A-Fa-f]){0,4}:([0-9A-Fa-f]){0,4})|(([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5])))))|(((((([0-9A-Fa-f]){0,4}:)){0,5}([0-9A-Fa-f]){0,4}))?::([0-9A-Fa-f]){0,4})|(((((([0-9A-Fa-f]){0,4}:)){0,6}([0-9A-Fa-f]){0,4}))?::))|(v([0-9A-Fa-f])+\\.(([A-Za-z0-9\\-\\._~]|[!$&'()*+,;=]|:))+))\\])|(([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5]))\\.([0-9]|([1-9][0-9])|(1([0-9]){2})|(2[0-4][0-9])|(25[0-5])))|(([A-Za-z0-9\\-\\._~]|(%[0-9A-Fa-f][0-9A-Fa-f])|[!$&'()*+,;=]))*)((:([0-9])*))?)((/(([A-Za-z0-9\\-\\._~!$&'()*+,;=:@]|(%[0-9A-Fa-f][0-9A-Fa-f])))*))*)|(/(((([A-Za-z0-9\\-\\._~!$&'()*+,;=:@]|(%[0-9A-Fa-f][0-9A-Fa-f])))+((/(([A-Za-z0-9\\-\\._~!$&'()*+,;=:@]|(%[0-9A-Fa-f][0-9A-Fa-f])))*))*))?)|((([A-Za-z0-9\\-\\._~]|(%[0-9A-Fa-f][0-9A-Fa-f])|[!$&'()*+,;=]|@))+((/(([A-Za-z0-9\\-\\._~!$&'()*+,;=:@]|(%[0-9A-Fa-f][0-9A-Fa-f])))*))*))?((\\?((([A-Za-z0-9\\-\\._~!$&'()*+,;=:@]|(%[0-9A-Fa-f][0-9A-Fa-f]))|/|\\?))*))?((#((([A-Za-z0-9\\-\\._~!$&'()*+,;=:@]|(%[0-9A-Fa-f][0-9A-Fa-f]))|/|\\?))*))?))"
	},
	"xsd$base64Binary": {
		"type": "string",
		"media": {
	        "binaryEncoding": "base64"
		},
		"format": "http://www.w3.org/2001/XMLSchema#base64Binary"
	},
	"xsd$hexBinary": {
		"type": "string",
		"media": {
	        "binaryEncoding": "binary"
		},
		"format": "http://www.w3.org/2001/XMLSchema#hexBinary"
	},
	"xsd$normalizedString": {
		"type": "string",
		"format": "http://www.w3.org/2001/XMLSchema#normalizedString",
		"pattern": "[^\\n\\r\\t]$"
	},
	"xsd$token": {
		"type": "string",
		"format": "http://www.w3.org/2001/XMLSchema#token",
		"pattern": "^(\\S+)$"
	},
	"xsd$language": {
		"type": "string",
		"format": "http://www.w3.org/2001/XMLSchema#language",
		"pattern": "^[a-z]{2,3}(?:-[A-Z]{2,3}(?:-[a-zA-Z]{4})?)?$"
	},
	"xsd$NMTOKEN": {
		"type": "string",
		"format": "http://www.w3.org/2001/XMLSchema#NMTOKEN"
	},
	"xsd$NMTOKENS": {
		"type": "string",
		"format": "http://www.w3.org/2001/XMLSchema#NMTOKENS"
	},
	"xsd$Name": {
		"type": "string",
		"format": "http://www.w3.org/2001/XMLSchema#Name"
	},
	"xsd$NCName": {
		"type": "string",
		"format": "http://www.w3.org/2001/XMLSchema#NCName"
	},
	"xsd$ID": {
		"type": "string",
		"format": "http://www.w3.org/2001/XMLSchema#ID"
	},
	"xsd$IDREF": {
		"type": "string",
		"format": "http://www.w3.org/2001/XMLSchema#IDREF"
	},
	"xsd$IDREFS": {
		"type": "string",
		"format": "http://www.w3.org/2001/XMLSchema#IDREFS"
	},
	"xsd$ENTITY": {
		"type": "string",
		"format": "http://www.w3.org/2001/XMLSchema#ENTITY"
	},
	"xsd$ENTITIES": {
		"type": "string",
		"format": "http://www.w3.org/2001/XMLSchema#ENTITIES"
	},
	"Quantity": {
		"type": "string"
	},
	"acceptsReservations": {
		"oneOf": [
			{"type": "boolean"},
			{
				"type": "string",
				"format": "uri"
			}
		]
	},
	"occupationalCategory": {
		"type": "string",
		"format": "http://www.onetcenter.org/taxonomy.html"
	},
	"repetitions": {
		"type": "integer",
		"minimum": 1
	},
	"startDate": {
		"type": "string",
		"format": "date-time"
	},
	"endDate": {
		"type": "string",
		"format": "date-time"
	}
}